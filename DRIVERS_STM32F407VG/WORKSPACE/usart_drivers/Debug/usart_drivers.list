
usart_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006ec  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000894  0800089c  0001089c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000894  08000894  0001089c  2**0
                  CONTENTS
  4 .ARM          00000000  08000894  08000894  0001089c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000894  0800089c  0001089c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000894  08000894  00010894  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000898  08000898  00010898  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001089c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800089c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800089c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001089c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000123a  00000000  00000000  000108cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000324  00000000  00000000  00011b06  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00011e30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  00011ef0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000267a  00000000  00000000  00011f88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001108  00000000  00000000  00014602  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000ab7c  00000000  00000000  0001570a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00020286  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  000202dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800087c 	.word	0x0800087c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800087c 	.word	0x0800087c

080001e8 <main>:
#include<stdio.h>
#include<gpio.h>


int main()
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b084      	sub	sp, #16
 80001ec:	af00      	add	r7, sp, #0
	GPIOHandle_t pGPIOLED;

	pGPIOLED.pGPIOx = GPIOD;
 80001ee:	4b0e      	ldr	r3, [pc, #56]	; (8000228 <main+0x40>)
 80001f0:	607b      	str	r3, [r7, #4]
	pGPIOLED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PINNUMBER_14;
 80001f2:	230e      	movs	r3, #14
 80001f4:	723b      	strb	r3, [r7, #8]
	pGPIOLED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 80001f6:	2301      	movs	r3, #1
 80001f8:	727b      	strb	r3, [r7, #9]
	pGPIOLED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_MEDIUM;
 80001fa:	2301      	movs	r3, #1
 80001fc:	72bb      	strb	r3, [r7, #10]
	pGPIOLED.GPIO_PinConfig.GPIO_PinOPType = GPIO_OTYPE_PUSHPULL;
 80001fe:	2300      	movs	r3, #0
 8000200:	733b      	strb	r3, [r7, #12]
	pGPIOLED.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PUPDTYPE_NONE;
 8000202:	2300      	movs	r3, #0
 8000204:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockEnable(GPIOD, ENABLE);
 8000206:	2101      	movs	r1, #1
 8000208:	4807      	ldr	r0, [pc, #28]	; (8000228 <main+0x40>)
 800020a:	f000 f9fd 	bl	8000608 <GPIO_PeriClockEnable>
	GPIO_Init(&pGPIOLED);
 800020e:	1d3b      	adds	r3, r7, #4
 8000210:	4618      	mov	r0, r3
 8000212:	f000 f849 	bl	80002a8 <GPIO_Init>

	while(1)
	{
		GPIO_TogglePin(GPIOD, GPIO_PINNUMBER_14);
 8000216:	210e      	movs	r1, #14
 8000218:	4803      	ldr	r0, [pc, #12]	; (8000228 <main+0x40>)
 800021a:	f000 faf5 	bl	8000808 <GPIO_TogglePin>
		delay(50000);
 800021e:	f24c 3050 	movw	r0, #50000	; 0xc350
 8000222:	f000 f82c 	bl	800027e <delay>
		GPIO_TogglePin(GPIOD, GPIO_PINNUMBER_14);
 8000226:	e7f6      	b.n	8000216 <main+0x2e>
 8000228:	40020c00 	.word	0x40020c00

0800022c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800022c:	480d      	ldr	r0, [pc, #52]	; (8000264 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800022e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000230:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000234:	480c      	ldr	r0, [pc, #48]	; (8000268 <LoopForever+0x6>)
  ldr r1, =_edata
 8000236:	490d      	ldr	r1, [pc, #52]	; (800026c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000238:	4a0d      	ldr	r2, [pc, #52]	; (8000270 <LoopForever+0xe>)
  movs r3, #0
 800023a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800023c:	e002      	b.n	8000244 <LoopCopyDataInit>

0800023e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800023e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000240:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000242:	3304      	adds	r3, #4

08000244 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000244:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000246:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000248:	d3f9      	bcc.n	800023e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800024a:	4a0a      	ldr	r2, [pc, #40]	; (8000274 <LoopForever+0x12>)
  ldr r4, =_ebss
 800024c:	4c0a      	ldr	r4, [pc, #40]	; (8000278 <LoopForever+0x16>)
  movs r3, #0
 800024e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000250:	e001      	b.n	8000256 <LoopFillZerobss>

08000252 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000252:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000254:	3204      	adds	r2, #4

08000256 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000256:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000258:	d3fb      	bcc.n	8000252 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800025a:	f000 faeb 	bl	8000834 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800025e:	f7ff ffc3 	bl	80001e8 <main>

08000262 <LoopForever>:

LoopForever:
    b LoopForever
 8000262:	e7fe      	b.n	8000262 <LoopForever>
  ldr   r0, =_estack
 8000264:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000268:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800026c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000270:	0800089c 	.word	0x0800089c
  ldr r2, =_sbss
 8000274:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000278:	2000001c 	.word	0x2000001c

0800027c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800027c:	e7fe      	b.n	800027c <ADC_IRQHandler>

0800027e <delay>:

/*
 * ddelay function
 */
void delay(uint32_t delayVal)
{
 800027e:	b480      	push	{r7}
 8000280:	b085      	sub	sp, #20
 8000282:	af00      	add	r7, sp, #0
 8000284:	6078      	str	r0, [r7, #4]
	for(int i =0; i<delayVal;i++);
 8000286:	2300      	movs	r3, #0
 8000288:	60fb      	str	r3, [r7, #12]
 800028a:	e002      	b.n	8000292 <delay+0x14>
 800028c:	68fb      	ldr	r3, [r7, #12]
 800028e:	3301      	adds	r3, #1
 8000290:	60fb      	str	r3, [r7, #12]
 8000292:	68fb      	ldr	r3, [r7, #12]
 8000294:	687a      	ldr	r2, [r7, #4]
 8000296:	429a      	cmp	r2, r3
 8000298:	d8f8      	bhi.n	800028c <delay+0xe>
}
 800029a:	bf00      	nop
 800029c:	bf00      	nop
 800029e:	3714      	adds	r7, #20
 80002a0:	46bd      	mov	sp, r7
 80002a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002a6:	4770      	bx	lr

080002a8 <GPIO_Init>:

/*
 * INITILIZATION AND DEINITILIZATION
 */
void GPIO_Init(GPIOHandle_t *pGPIOHandle)
{
 80002a8:	b580      	push	{r7, lr}
 80002aa:	b086      	sub	sp, #24
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	6078      	str	r0, [r7, #4]

	uint32_t temp, temp1, temp2;
	uint8_t portcode;
	GPIO_PeriClockEnable(pGPIOHandle->pGPIOx, ENABLE);
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	2101      	movs	r1, #1
 80002b6:	4618      	mov	r0, r3
 80002b8:	f000 f9a6 	bl	8000608 <GPIO_PeriClockEnable>

	//1. Configure the mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	795b      	ldrb	r3, [r3, #5]
 80002c0:	2b03      	cmp	r3, #3
 80002c2:	d820      	bhi.n	8000306 <GPIO_Init+0x5e>
	{
		//Non interrupt mode

		//Initilly clear the bits
		pGPIOHandle->pGPIOx->MODER &= ~(0x3U << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	6819      	ldr	r1, [r3, #0]
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	791b      	ldrb	r3, [r3, #4]
 80002ce:	461a      	mov	r2, r3
 80002d0:	2303      	movs	r3, #3
 80002d2:	4093      	lsls	r3, r2
 80002d4:	43da      	mvns	r2, r3
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	400a      	ands	r2, r1
 80002dc:	601a      	str	r2, [r3, #0]
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<(2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	795b      	ldrb	r3, [r3, #5]
 80002e2:	461a      	mov	r2, r3
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	791b      	ldrb	r3, [r3, #4]
 80002e8:	005b      	lsls	r3, r3, #1
 80002ea:	fa02 f303 	lsl.w	r3, r2, r3
 80002ee:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	6819      	ldr	r1, [r3, #0]
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	68ba      	ldr	r2, [r7, #8]
 80002fc:	430a      	orrs	r2, r1
 80002fe:	601a      	str	r2, [r3, #0]
		temp = 0;
 8000300:	2300      	movs	r3, #0
 8000302:	60bb      	str	r3, [r7, #8]
 8000304:	e0df      	b.n	80004c6 <GPIO_Init+0x21e>

	}
	else
	{
		//Interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_FT)
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	795b      	ldrb	r3, [r3, #5]
 800030a:	2b04      	cmp	r3, #4
 800030c:	d117      	bne.n	800033e <GPIO_Init+0x96>
		{
			//1.Configure FTSR register
			EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800030e:	4b4f      	ldr	r3, [pc, #316]	; (800044c <GPIO_Init+0x1a4>)
 8000310:	68db      	ldr	r3, [r3, #12]
 8000312:	687a      	ldr	r2, [r7, #4]
 8000314:	7912      	ldrb	r2, [r2, #4]
 8000316:	4611      	mov	r1, r2
 8000318:	2201      	movs	r2, #1
 800031a:	408a      	lsls	r2, r1
 800031c:	4611      	mov	r1, r2
 800031e:	4a4b      	ldr	r2, [pc, #300]	; (800044c <GPIO_Init+0x1a4>)
 8000320:	430b      	orrs	r3, r1
 8000322:	60d3      	str	r3, [r2, #12]

			// Clear RTSR bit
			EXTI->EXTI_RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000324:	4b49      	ldr	r3, [pc, #292]	; (800044c <GPIO_Init+0x1a4>)
 8000326:	689b      	ldr	r3, [r3, #8]
 8000328:	687a      	ldr	r2, [r7, #4]
 800032a:	7912      	ldrb	r2, [r2, #4]
 800032c:	4611      	mov	r1, r2
 800032e:	2201      	movs	r2, #1
 8000330:	408a      	lsls	r2, r1
 8000332:	43d2      	mvns	r2, r2
 8000334:	4611      	mov	r1, r2
 8000336:	4a45      	ldr	r2, [pc, #276]	; (800044c <GPIO_Init+0x1a4>)
 8000338:	400b      	ands	r3, r1
 800033a:	6093      	str	r3, [r2, #8]
 800033c:	e035      	b.n	80003aa <GPIO_Init+0x102>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_RT)
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	795b      	ldrb	r3, [r3, #5]
 8000342:	2b05      	cmp	r3, #5
 8000344:	d117      	bne.n	8000376 <GPIO_Init+0xce>
		{
			//1. Configure RTSR register
			EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000346:	4b41      	ldr	r3, [pc, #260]	; (800044c <GPIO_Init+0x1a4>)
 8000348:	689b      	ldr	r3, [r3, #8]
 800034a:	687a      	ldr	r2, [r7, #4]
 800034c:	7912      	ldrb	r2, [r2, #4]
 800034e:	4611      	mov	r1, r2
 8000350:	2201      	movs	r2, #1
 8000352:	408a      	lsls	r2, r1
 8000354:	4611      	mov	r1, r2
 8000356:	4a3d      	ldr	r2, [pc, #244]	; (800044c <GPIO_Init+0x1a4>)
 8000358:	430b      	orrs	r3, r1
 800035a:	6093      	str	r3, [r2, #8]

			// Clear FTSR bit
			EXTI->EXTI_FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800035c:	4b3b      	ldr	r3, [pc, #236]	; (800044c <GPIO_Init+0x1a4>)
 800035e:	68db      	ldr	r3, [r3, #12]
 8000360:	687a      	ldr	r2, [r7, #4]
 8000362:	7912      	ldrb	r2, [r2, #4]
 8000364:	4611      	mov	r1, r2
 8000366:	2201      	movs	r2, #1
 8000368:	408a      	lsls	r2, r1
 800036a:	43d2      	mvns	r2, r2
 800036c:	4611      	mov	r1, r2
 800036e:	4a37      	ldr	r2, [pc, #220]	; (800044c <GPIO_Init+0x1a4>)
 8000370:	400b      	ands	r3, r1
 8000372:	60d3      	str	r3, [r2, #12]
 8000374:	e019      	b.n	80003aa <GPIO_Init+0x102>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_RFT)
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	795b      	ldrb	r3, [r3, #5]
 800037a:	2b06      	cmp	r3, #6
 800037c:	d115      	bne.n	80003aa <GPIO_Init+0x102>
		{
			//1. Configure both FTSR and RTSr registers
			EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800037e:	4b33      	ldr	r3, [pc, #204]	; (800044c <GPIO_Init+0x1a4>)
 8000380:	68db      	ldr	r3, [r3, #12]
 8000382:	687a      	ldr	r2, [r7, #4]
 8000384:	7912      	ldrb	r2, [r2, #4]
 8000386:	4611      	mov	r1, r2
 8000388:	2201      	movs	r2, #1
 800038a:	408a      	lsls	r2, r1
 800038c:	4611      	mov	r1, r2
 800038e:	4a2f      	ldr	r2, [pc, #188]	; (800044c <GPIO_Init+0x1a4>)
 8000390:	430b      	orrs	r3, r1
 8000392:	60d3      	str	r3, [r2, #12]

			EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000394:	4b2d      	ldr	r3, [pc, #180]	; (800044c <GPIO_Init+0x1a4>)
 8000396:	689b      	ldr	r3, [r3, #8]
 8000398:	687a      	ldr	r2, [r7, #4]
 800039a:	7912      	ldrb	r2, [r2, #4]
 800039c:	4611      	mov	r1, r2
 800039e:	2201      	movs	r2, #1
 80003a0:	408a      	lsls	r2, r1
 80003a2:	4611      	mov	r1, r2
 80003a4:	4a29      	ldr	r2, [pc, #164]	; (800044c <GPIO_Init+0x1a4>)
 80003a6:	430b      	orrs	r3, r1
 80003a8:	6093      	str	r3, [r2, #8]
		}

		// 2. Configure the GPIO port selection in SYSCFG_EXTICR
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	791b      	ldrb	r3, [r3, #4]
 80003ae:	089b      	lsrs	r3, r3, #2
 80003b0:	b2db      	uxtb	r3, r3
 80003b2:	617b      	str	r3, [r7, #20]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	791b      	ldrb	r3, [r3, #4]
 80003b8:	f003 0303 	and.w	r3, r3, #3
 80003bc:	613b      	str	r3, [r7, #16]

		portcode = GPIOBASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	4a23      	ldr	r2, [pc, #140]	; (8000450 <GPIO_Init+0x1a8>)
 80003c4:	4293      	cmp	r3, r2
 80003c6:	d057      	beq.n	8000478 <GPIO_Init+0x1d0>
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	4a21      	ldr	r2, [pc, #132]	; (8000454 <GPIO_Init+0x1ac>)
 80003ce:	4293      	cmp	r3, r2
 80003d0:	d039      	beq.n	8000446 <GPIO_Init+0x19e>
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	4a20      	ldr	r2, [pc, #128]	; (8000458 <GPIO_Init+0x1b0>)
 80003d8:	4293      	cmp	r3, r2
 80003da:	d032      	beq.n	8000442 <GPIO_Init+0x19a>
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	4a1e      	ldr	r2, [pc, #120]	; (800045c <GPIO_Init+0x1b4>)
 80003e2:	4293      	cmp	r3, r2
 80003e4:	d02b      	beq.n	800043e <GPIO_Init+0x196>
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	4a1d      	ldr	r2, [pc, #116]	; (8000460 <GPIO_Init+0x1b8>)
 80003ec:	4293      	cmp	r3, r2
 80003ee:	d024      	beq.n	800043a <GPIO_Init+0x192>
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	4a1b      	ldr	r2, [pc, #108]	; (8000464 <GPIO_Init+0x1bc>)
 80003f6:	4293      	cmp	r3, r2
 80003f8:	d01d      	beq.n	8000436 <GPIO_Init+0x18e>
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	4a1a      	ldr	r2, [pc, #104]	; (8000468 <GPIO_Init+0x1c0>)
 8000400:	4293      	cmp	r3, r2
 8000402:	d016      	beq.n	8000432 <GPIO_Init+0x18a>
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	4a18      	ldr	r2, [pc, #96]	; (800046c <GPIO_Init+0x1c4>)
 800040a:	4293      	cmp	r3, r2
 800040c:	d00f      	beq.n	800042e <GPIO_Init+0x186>
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	4a17      	ldr	r2, [pc, #92]	; (8000470 <GPIO_Init+0x1c8>)
 8000414:	4293      	cmp	r3, r2
 8000416:	d008      	beq.n	800042a <GPIO_Init+0x182>
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	681b      	ldr	r3, [r3, #0]
 800041c:	4a15      	ldr	r2, [pc, #84]	; (8000474 <GPIO_Init+0x1cc>)
 800041e:	4293      	cmp	r3, r2
 8000420:	d101      	bne.n	8000426 <GPIO_Init+0x17e>
 8000422:	2309      	movs	r3, #9
 8000424:	e029      	b.n	800047a <GPIO_Init+0x1d2>
 8000426:	2300      	movs	r3, #0
 8000428:	e027      	b.n	800047a <GPIO_Init+0x1d2>
 800042a:	2308      	movs	r3, #8
 800042c:	e025      	b.n	800047a <GPIO_Init+0x1d2>
 800042e:	2307      	movs	r3, #7
 8000430:	e023      	b.n	800047a <GPIO_Init+0x1d2>
 8000432:	2306      	movs	r3, #6
 8000434:	e021      	b.n	800047a <GPIO_Init+0x1d2>
 8000436:	2305      	movs	r3, #5
 8000438:	e01f      	b.n	800047a <GPIO_Init+0x1d2>
 800043a:	2304      	movs	r3, #4
 800043c:	e01d      	b.n	800047a <GPIO_Init+0x1d2>
 800043e:	2303      	movs	r3, #3
 8000440:	e01b      	b.n	800047a <GPIO_Init+0x1d2>
 8000442:	2302      	movs	r3, #2
 8000444:	e019      	b.n	800047a <GPIO_Init+0x1d2>
 8000446:	2301      	movs	r3, #1
 8000448:	e017      	b.n	800047a <GPIO_Init+0x1d2>
 800044a:	bf00      	nop
 800044c:	40013c00 	.word	0x40013c00
 8000450:	40020000 	.word	0x40020000
 8000454:	40020400 	.word	0x40020400
 8000458:	40020800 	.word	0x40020800
 800045c:	40020c00 	.word	0x40020c00
 8000460:	40021000 	.word	0x40021000
 8000464:	40021400 	.word	0x40021400
 8000468:	40021800 	.word	0x40021800
 800046c:	40021c00 	.word	0x40021c00
 8000470:	40022000 	.word	0x40022000
 8000474:	40022400 	.word	0x40022400
 8000478:	2300      	movs	r3, #0
 800047a:	73fb      	strb	r3, [r7, #15]
		SYSCFG_PCLK_ENABLE();
 800047c:	4b5f      	ldr	r3, [pc, #380]	; (80005fc <GPIO_Init+0x354>)
 800047e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000480:	4a5e      	ldr	r2, [pc, #376]	; (80005fc <GPIO_Init+0x354>)
 8000482:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000486:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->SYSCFG_EXTICR[temp1] |= portcode << (temp2*4);
 8000488:	4a5d      	ldr	r2, [pc, #372]	; (8000600 <GPIO_Init+0x358>)
 800048a:	697b      	ldr	r3, [r7, #20]
 800048c:	3302      	adds	r3, #2
 800048e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000492:	7bf9      	ldrb	r1, [r7, #15]
 8000494:	693a      	ldr	r2, [r7, #16]
 8000496:	0092      	lsls	r2, r2, #2
 8000498:	fa01 f202 	lsl.w	r2, r1, r2
 800049c:	4958      	ldr	r1, [pc, #352]	; (8000600 <GPIO_Init+0x358>)
 800049e:	431a      	orrs	r2, r3
 80004a0:	697b      	ldr	r3, [r7, #20]
 80004a2:	3302      	adds	r3, #2
 80004a4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		temp1 = temp2 = 0;
 80004a8:	2300      	movs	r3, #0
 80004aa:	613b      	str	r3, [r7, #16]
 80004ac:	693b      	ldr	r3, [r7, #16]
 80004ae:	617b      	str	r3, [r7, #20]

		//3. Enable the EXTI interrupt delivery using IMR
		EXTI->EXTI_IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b0:	4b54      	ldr	r3, [pc, #336]	; (8000604 <GPIO_Init+0x35c>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	687a      	ldr	r2, [r7, #4]
 80004b6:	7912      	ldrb	r2, [r2, #4]
 80004b8:	4611      	mov	r1, r2
 80004ba:	2201      	movs	r2, #1
 80004bc:	408a      	lsls	r2, r1
 80004be:	4611      	mov	r1, r2
 80004c0:	4a50      	ldr	r2, [pc, #320]	; (8000604 <GPIO_Init+0x35c>)
 80004c2:	430b      	orrs	r3, r1
 80004c4:	6013      	str	r3, [r2, #0]


	//2. Configure the speed

	//Initally clear the bit
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	6899      	ldr	r1, [r3, #8]
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	791b      	ldrb	r3, [r3, #4]
 80004d0:	461a      	mov	r2, r3
 80004d2:	2303      	movs	r3, #3
 80004d4:	4093      	lsls	r3, r2
 80004d6:	43da      	mvns	r2, r3
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	400a      	ands	r2, r1
 80004de:	609a      	str	r2, [r3, #8]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	799b      	ldrb	r3, [r3, #6]
 80004e4:	461a      	mov	r2, r3
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	791b      	ldrb	r3, [r3, #4]
 80004ea:	005b      	lsls	r3, r3, #1
 80004ec:	fa02 f303 	lsl.w	r3, r2, r3
 80004f0:	60bb      	str	r3, [r7, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	6899      	ldr	r1, [r3, #8]
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	68ba      	ldr	r2, [r7, #8]
 80004fe:	430a      	orrs	r2, r1
 8000500:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000502:	2300      	movs	r3, #0
 8000504:	60bb      	str	r3, [r7, #8]

	//3. Configure PuPd mode
	//Initally clear the bit
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	68d9      	ldr	r1, [r3, #12]
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	791b      	ldrb	r3, [r3, #4]
 8000510:	461a      	mov	r2, r3
 8000512:	2303      	movs	r3, #3
 8000514:	4093      	lsls	r3, r2
 8000516:	43da      	mvns	r2, r3
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	400a      	ands	r2, r1
 800051e:	60da      	str	r2, [r3, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	79db      	ldrb	r3, [r3, #7]
 8000524:	461a      	mov	r2, r3
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	791b      	ldrb	r3, [r3, #4]
 800052a:	005b      	lsls	r3, r3, #1
 800052c:	fa02 f303 	lsl.w	r3, r2, r3
 8000530:	60bb      	str	r3, [r7, #8]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	68d9      	ldr	r1, [r3, #12]
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	68ba      	ldr	r2, [r7, #8]
 800053e:	430a      	orrs	r2, r1
 8000540:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000542:	2300      	movs	r3, #0
 8000544:	60bb      	str	r3, [r7, #8]

	//4.Configure Output type
	//Initally clear the bit
	pGPIOHandle->pGPIOx->OTYPER &= ~(1U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	6859      	ldr	r1, [r3, #4]
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	791b      	ldrb	r3, [r3, #4]
 8000550:	461a      	mov	r2, r3
 8000552:	2301      	movs	r3, #1
 8000554:	4093      	lsls	r3, r2
 8000556:	43da      	mvns	r2, r3
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	400a      	ands	r2, r1
 800055e:	605a      	str	r2, [r3, #4]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	7a1b      	ldrb	r3, [r3, #8]
 8000564:	461a      	mov	r2, r3
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	791b      	ldrb	r3, [r3, #4]
 800056a:	fa02 f303 	lsl.w	r3, r2, r3
 800056e:	60bb      	str	r3, [r7, #8]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	6859      	ldr	r1, [r3, #4]
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	68ba      	ldr	r2, [r7, #8]
 800057c:	430a      	orrs	r2, r1
 800057e:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000580:	2300      	movs	r3, #0
 8000582:	60bb      	str	r3, [r7, #8]

	//5. Configure Alternate functionality type
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFUNC)
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	795b      	ldrb	r3, [r3, #5]
 8000588:	2b02      	cmp	r3, #2
 800058a:	d133      	bne.n	80005f4 <GPIO_Init+0x34c>
	{

		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/8;
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	791b      	ldrb	r3, [r3, #4]
 8000590:	08db      	lsrs	r3, r3, #3
 8000592:	b2db      	uxtb	r3, r3
 8000594:	617b      	str	r3, [r7, #20]
		temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)%8;
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	791b      	ldrb	r3, [r3, #4]
 800059a:	f003 0307 	and.w	r3, r3, #7
 800059e:	613b      	str	r3, [r7, #16]

		//Initially clear the bit
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode);
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	681b      	ldr	r3, [r3, #0]
 80005a4:	697a      	ldr	r2, [r7, #20]
 80005a6:	3208      	adds	r2, #8
 80005a8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	7a5b      	ldrb	r3, [r3, #9]
 80005b0:	43db      	mvns	r3, r3
 80005b2:	4619      	mov	r1, r3
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	4011      	ands	r1, r2
 80005ba:	697a      	ldr	r2, [r7, #20]
 80005bc:	3208      	adds	r2, #8
 80005be:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	697a      	ldr	r2, [r7, #20]
 80005c8:	3208      	adds	r2, #8
 80005ca:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	7a5b      	ldrb	r3, [r3, #9]
 80005d2:	4619      	mov	r1, r3
 80005d4:	693b      	ldr	r3, [r7, #16]
 80005d6:	009b      	lsls	r3, r3, #2
 80005d8:	fa01 f303 	lsl.w	r3, r1, r3
 80005dc:	4619      	mov	r1, r3
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	4311      	orrs	r1, r2
 80005e4:	697a      	ldr	r2, [r7, #20]
 80005e6:	3208      	adds	r2, #8
 80005e8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		temp1 = 0;
 80005ec:	2300      	movs	r3, #0
 80005ee:	617b      	str	r3, [r7, #20]
		temp2 = 0;
 80005f0:	2300      	movs	r3, #0
 80005f2:	613b      	str	r3, [r7, #16]
	}



}
 80005f4:	bf00      	nop
 80005f6:	3718      	adds	r7, #24
 80005f8:	46bd      	mov	sp, r7
 80005fa:	bd80      	pop	{r7, pc}
 80005fc:	40023800 	.word	0x40023800
 8000600:	40013800 	.word	0x40013800
 8000604:	40013c00 	.word	0x40013c00

08000608 <GPIO_PeriClockEnable>:

/*
 * PERIPHERAL CLOCK ENABLE AND DISABLE
 */
void GPIO_PeriClockEnable(GPIO_RegDef_t *pGPIOx, uint8_t EnaOrDis)
{
 8000608:	b480      	push	{r7}
 800060a:	b083      	sub	sp, #12
 800060c:	af00      	add	r7, sp, #0
 800060e:	6078      	str	r0, [r7, #4]
 8000610:	460b      	mov	r3, r1
 8000612:	70fb      	strb	r3, [r7, #3]
	if(EnaOrDis == ENABLE)
 8000614:	78fb      	ldrb	r3, [r7, #3]
 8000616:	2b01      	cmp	r3, #1
 8000618:	d16d      	bne.n	80006f6 <GPIO_PeriClockEnable+0xee>
	{
	if(pGPIOx == GPIOA)
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	4a6f      	ldr	r2, [pc, #444]	; (80007dc <GPIO_PeriClockEnable+0x1d4>)
 800061e:	4293      	cmp	r3, r2
 8000620:	d106      	bne.n	8000630 <GPIO_PeriClockEnable+0x28>
		GPIOA_PCLK_ENABLE();
 8000622:	4b6f      	ldr	r3, [pc, #444]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000624:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000626:	4a6e      	ldr	r2, [pc, #440]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000628:	f043 0301 	orr.w	r3, r3, #1
 800062c:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOI)
			GPIOI_PCLK_DISABLE();
		else if(pGPIOx == GPIOJ)
			GPIOJ_PCLK_DISABLE();
	}
}
 800062e:	e0cf      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOB)
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	4a6c      	ldr	r2, [pc, #432]	; (80007e4 <GPIO_PeriClockEnable+0x1dc>)
 8000634:	4293      	cmp	r3, r2
 8000636:	d106      	bne.n	8000646 <GPIO_PeriClockEnable+0x3e>
		GPIOB_PCLK_ENABLE();
 8000638:	4b69      	ldr	r3, [pc, #420]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 800063a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800063c:	4a68      	ldr	r2, [pc, #416]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 800063e:	f043 0302 	orr.w	r3, r3, #2
 8000642:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000644:	e0c4      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOC)
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	4a67      	ldr	r2, [pc, #412]	; (80007e8 <GPIO_PeriClockEnable+0x1e0>)
 800064a:	4293      	cmp	r3, r2
 800064c:	d106      	bne.n	800065c <GPIO_PeriClockEnable+0x54>
		GPIOC_PCLK_ENABLE();
 800064e:	4b64      	ldr	r3, [pc, #400]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000650:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000652:	4a63      	ldr	r2, [pc, #396]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000654:	f043 0304 	orr.w	r3, r3, #4
 8000658:	6313      	str	r3, [r2, #48]	; 0x30
}
 800065a:	e0b9      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOD)
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	4a63      	ldr	r2, [pc, #396]	; (80007ec <GPIO_PeriClockEnable+0x1e4>)
 8000660:	4293      	cmp	r3, r2
 8000662:	d106      	bne.n	8000672 <GPIO_PeriClockEnable+0x6a>
		GPIOD_PCLK_ENABLE();
 8000664:	4b5e      	ldr	r3, [pc, #376]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000666:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000668:	4a5d      	ldr	r2, [pc, #372]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 800066a:	f043 0308 	orr.w	r3, r3, #8
 800066e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000670:	e0ae      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOE)
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	4a5e      	ldr	r2, [pc, #376]	; (80007f0 <GPIO_PeriClockEnable+0x1e8>)
 8000676:	4293      	cmp	r3, r2
 8000678:	d106      	bne.n	8000688 <GPIO_PeriClockEnable+0x80>
		GPIOE_PCLK_ENABLE();
 800067a:	4b59      	ldr	r3, [pc, #356]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 800067c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800067e:	4a58      	ldr	r2, [pc, #352]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000680:	f043 0310 	orr.w	r3, r3, #16
 8000684:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000686:	e0a3      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOF)
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	4a5a      	ldr	r2, [pc, #360]	; (80007f4 <GPIO_PeriClockEnable+0x1ec>)
 800068c:	4293      	cmp	r3, r2
 800068e:	d106      	bne.n	800069e <GPIO_PeriClockEnable+0x96>
		GPIOF_PCLK_ENABLE();
 8000690:	4b53      	ldr	r3, [pc, #332]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000692:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000694:	4a52      	ldr	r2, [pc, #328]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000696:	f043 0320 	orr.w	r3, r3, #32
 800069a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800069c:	e098      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOG)
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	4a55      	ldr	r2, [pc, #340]	; (80007f8 <GPIO_PeriClockEnable+0x1f0>)
 80006a2:	4293      	cmp	r3, r2
 80006a4:	d106      	bne.n	80006b4 <GPIO_PeriClockEnable+0xac>
		GPIOG_PCLK_ENABLE();
 80006a6:	4b4e      	ldr	r3, [pc, #312]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 80006a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006aa:	4a4d      	ldr	r2, [pc, #308]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 80006ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80006b0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006b2:	e08d      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOH)
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	4a51      	ldr	r2, [pc, #324]	; (80007fc <GPIO_PeriClockEnable+0x1f4>)
 80006b8:	4293      	cmp	r3, r2
 80006ba:	d106      	bne.n	80006ca <GPIO_PeriClockEnable+0xc2>
		GPIOH_PCLK_ENABLE();
 80006bc:	4b48      	ldr	r3, [pc, #288]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 80006be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006c0:	4a47      	ldr	r2, [pc, #284]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 80006c2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80006c6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006c8:	e082      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOI)
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	4a4c      	ldr	r2, [pc, #304]	; (8000800 <GPIO_PeriClockEnable+0x1f8>)
 80006ce:	4293      	cmp	r3, r2
 80006d0:	d106      	bne.n	80006e0 <GPIO_PeriClockEnable+0xd8>
		GPIOI_PCLK_ENABLE();
 80006d2:	4b43      	ldr	r3, [pc, #268]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 80006d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006d6:	4a42      	ldr	r2, [pc, #264]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 80006d8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80006dc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006de:	e077      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOJ)
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	4a48      	ldr	r2, [pc, #288]	; (8000804 <GPIO_PeriClockEnable+0x1fc>)
 80006e4:	4293      	cmp	r3, r2
 80006e6:	d173      	bne.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
		GPIOJ_PCLK_ENABLE();
 80006e8:	4b3d      	ldr	r3, [pc, #244]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 80006ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006ec:	4a3c      	ldr	r2, [pc, #240]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 80006ee:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80006f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006f4:	e06c      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
		if(pGPIOx == GPIOA)
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	4a38      	ldr	r2, [pc, #224]	; (80007dc <GPIO_PeriClockEnable+0x1d4>)
 80006fa:	4293      	cmp	r3, r2
 80006fc:	d106      	bne.n	800070c <GPIO_PeriClockEnable+0x104>
			GPIOA_PCLK_DISABLE();
 80006fe:	4b38      	ldr	r3, [pc, #224]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000700:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000702:	4a37      	ldr	r2, [pc, #220]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000704:	f023 0301 	bic.w	r3, r3, #1
 8000708:	6313      	str	r3, [r2, #48]	; 0x30
}
 800070a:	e061      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOB)
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	4a35      	ldr	r2, [pc, #212]	; (80007e4 <GPIO_PeriClockEnable+0x1dc>)
 8000710:	4293      	cmp	r3, r2
 8000712:	d106      	bne.n	8000722 <GPIO_PeriClockEnable+0x11a>
			GPIOB_PCLK_DISABLE();
 8000714:	4b32      	ldr	r3, [pc, #200]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000716:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000718:	4a31      	ldr	r2, [pc, #196]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 800071a:	f023 0302 	bic.w	r3, r3, #2
 800071e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000720:	e056      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOC)
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	4a30      	ldr	r2, [pc, #192]	; (80007e8 <GPIO_PeriClockEnable+0x1e0>)
 8000726:	4293      	cmp	r3, r2
 8000728:	d106      	bne.n	8000738 <GPIO_PeriClockEnable+0x130>
			GPIOC_PCLK_DISABLE();
 800072a:	4b2d      	ldr	r3, [pc, #180]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 800072c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800072e:	4a2c      	ldr	r2, [pc, #176]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000730:	f023 0304 	bic.w	r3, r3, #4
 8000734:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000736:	e04b      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOD)
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	4a2c      	ldr	r2, [pc, #176]	; (80007ec <GPIO_PeriClockEnable+0x1e4>)
 800073c:	4293      	cmp	r3, r2
 800073e:	d106      	bne.n	800074e <GPIO_PeriClockEnable+0x146>
			GPIOD_PCLK_DISABLE();
 8000740:	4b27      	ldr	r3, [pc, #156]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000742:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000744:	4a26      	ldr	r2, [pc, #152]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000746:	f023 0308 	bic.w	r3, r3, #8
 800074a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800074c:	e040      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOE)
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	4a27      	ldr	r2, [pc, #156]	; (80007f0 <GPIO_PeriClockEnable+0x1e8>)
 8000752:	4293      	cmp	r3, r2
 8000754:	d106      	bne.n	8000764 <GPIO_PeriClockEnable+0x15c>
			GPIOE_PCLK_DISABLE();
 8000756:	4b22      	ldr	r3, [pc, #136]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000758:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800075a:	4a21      	ldr	r2, [pc, #132]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 800075c:	f023 0310 	bic.w	r3, r3, #16
 8000760:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000762:	e035      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOF)
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	4a23      	ldr	r2, [pc, #140]	; (80007f4 <GPIO_PeriClockEnable+0x1ec>)
 8000768:	4293      	cmp	r3, r2
 800076a:	d106      	bne.n	800077a <GPIO_PeriClockEnable+0x172>
			GPIOF_PCLK_DISABLE();
 800076c:	4b1c      	ldr	r3, [pc, #112]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 800076e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000770:	4a1b      	ldr	r2, [pc, #108]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000772:	f023 0320 	bic.w	r3, r3, #32
 8000776:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000778:	e02a      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOG)
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	4a1e      	ldr	r2, [pc, #120]	; (80007f8 <GPIO_PeriClockEnable+0x1f0>)
 800077e:	4293      	cmp	r3, r2
 8000780:	d106      	bne.n	8000790 <GPIO_PeriClockEnable+0x188>
			GPIOG_PCLK_DISABLE();
 8000782:	4b17      	ldr	r3, [pc, #92]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000784:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000786:	4a16      	ldr	r2, [pc, #88]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 8000788:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800078c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800078e:	e01f      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOH)
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	4a1a      	ldr	r2, [pc, #104]	; (80007fc <GPIO_PeriClockEnable+0x1f4>)
 8000794:	4293      	cmp	r3, r2
 8000796:	d106      	bne.n	80007a6 <GPIO_PeriClockEnable+0x19e>
			GPIOH_PCLK_DISABLE();
 8000798:	4b11      	ldr	r3, [pc, #68]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 800079a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800079c:	4a10      	ldr	r2, [pc, #64]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 800079e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80007a2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007a4:	e014      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOI)
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	4a15      	ldr	r2, [pc, #84]	; (8000800 <GPIO_PeriClockEnable+0x1f8>)
 80007aa:	4293      	cmp	r3, r2
 80007ac:	d106      	bne.n	80007bc <GPIO_PeriClockEnable+0x1b4>
			GPIOI_PCLK_DISABLE();
 80007ae:	4b0c      	ldr	r3, [pc, #48]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 80007b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007b2:	4a0b      	ldr	r2, [pc, #44]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 80007b4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80007b8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007ba:	e009      	b.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOJ)
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	4a11      	ldr	r2, [pc, #68]	; (8000804 <GPIO_PeriClockEnable+0x1fc>)
 80007c0:	4293      	cmp	r3, r2
 80007c2:	d105      	bne.n	80007d0 <GPIO_PeriClockEnable+0x1c8>
			GPIOJ_PCLK_DISABLE();
 80007c4:	4b06      	ldr	r3, [pc, #24]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 80007c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007c8:	4a05      	ldr	r2, [pc, #20]	; (80007e0 <GPIO_PeriClockEnable+0x1d8>)
 80007ca:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80007ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007d0:	bf00      	nop
 80007d2:	370c      	adds	r7, #12
 80007d4:	46bd      	mov	sp, r7
 80007d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007da:	4770      	bx	lr
 80007dc:	40020000 	.word	0x40020000
 80007e0:	40023800 	.word	0x40023800
 80007e4:	40020400 	.word	0x40020400
 80007e8:	40020800 	.word	0x40020800
 80007ec:	40020c00 	.word	0x40020c00
 80007f0:	40021000 	.word	0x40021000
 80007f4:	40021400 	.word	0x40021400
 80007f8:	40021800 	.word	0x40021800
 80007fc:	40021c00 	.word	0x40021c00
 8000800:	40022000 	.word	0x40022000
 8000804:	40022400 	.word	0x40022400

08000808 <GPIO_TogglePin>:

/*
 * TOGGLE PIN
 */
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx,  uint8_t PinNumber)
{
 8000808:	b480      	push	{r7}
 800080a:	b083      	sub	sp, #12
 800080c:	af00      	add	r7, sp, #0
 800080e:	6078      	str	r0, [r7, #4]
 8000810:	460b      	mov	r3, r1
 8000812:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 8000814:	687b      	ldr	r3, [r7, #4]
 8000816:	695b      	ldr	r3, [r3, #20]
 8000818:	78fa      	ldrb	r2, [r7, #3]
 800081a:	2101      	movs	r1, #1
 800081c:	fa01 f202 	lsl.w	r2, r1, r2
 8000820:	405a      	eors	r2, r3
 8000822:	687b      	ldr	r3, [r7, #4]
 8000824:	615a      	str	r2, [r3, #20]
}
 8000826:	bf00      	nop
 8000828:	370c      	adds	r7, #12
 800082a:	46bd      	mov	sp, r7
 800082c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000830:	4770      	bx	lr
	...

08000834 <__libc_init_array>:
 8000834:	b570      	push	{r4, r5, r6, lr}
 8000836:	4d0d      	ldr	r5, [pc, #52]	; (800086c <__libc_init_array+0x38>)
 8000838:	4c0d      	ldr	r4, [pc, #52]	; (8000870 <__libc_init_array+0x3c>)
 800083a:	1b64      	subs	r4, r4, r5
 800083c:	10a4      	asrs	r4, r4, #2
 800083e:	2600      	movs	r6, #0
 8000840:	42a6      	cmp	r6, r4
 8000842:	d109      	bne.n	8000858 <__libc_init_array+0x24>
 8000844:	4d0b      	ldr	r5, [pc, #44]	; (8000874 <__libc_init_array+0x40>)
 8000846:	4c0c      	ldr	r4, [pc, #48]	; (8000878 <__libc_init_array+0x44>)
 8000848:	f000 f818 	bl	800087c <_init>
 800084c:	1b64      	subs	r4, r4, r5
 800084e:	10a4      	asrs	r4, r4, #2
 8000850:	2600      	movs	r6, #0
 8000852:	42a6      	cmp	r6, r4
 8000854:	d105      	bne.n	8000862 <__libc_init_array+0x2e>
 8000856:	bd70      	pop	{r4, r5, r6, pc}
 8000858:	f855 3b04 	ldr.w	r3, [r5], #4
 800085c:	4798      	blx	r3
 800085e:	3601      	adds	r6, #1
 8000860:	e7ee      	b.n	8000840 <__libc_init_array+0xc>
 8000862:	f855 3b04 	ldr.w	r3, [r5], #4
 8000866:	4798      	blx	r3
 8000868:	3601      	adds	r6, #1
 800086a:	e7f2      	b.n	8000852 <__libc_init_array+0x1e>
 800086c:	08000894 	.word	0x08000894
 8000870:	08000894 	.word	0x08000894
 8000874:	08000894 	.word	0x08000894
 8000878:	08000898 	.word	0x08000898

0800087c <_init>:
 800087c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800087e:	bf00      	nop
 8000880:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000882:	bc08      	pop	{r3}
 8000884:	469e      	mov	lr, r3
 8000886:	4770      	bx	lr

08000888 <_fini>:
 8000888:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800088a:	bf00      	nop
 800088c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800088e:	bc08      	pop	{r3}
 8000890:	469e      	mov	lr, r3
 8000892:	4770      	bx	lr
