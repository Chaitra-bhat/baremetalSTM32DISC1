
01_gpio_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006b8  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000860  08000868  00010868  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000860  08000860  00010868  2**0
                  CONTENTS
  4 .ARM          00000000  08000860  08000860  00010868  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000860  08000868  00010868  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000860  08000860  00010860  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000864  08000864  00010864  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010868  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000868  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000868  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010868  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001b73  00000000  00000000  00010898  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000446  00000000  00000000  0001240b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00012858  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  00012918  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000023ac  00000000  00000000  000129b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000011c3  00000000  00000000  00014d5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000991c  00000000  00000000  00015f1f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001f83b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  0001f890  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000848 	.word	0x08000848

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000848 	.word	0x08000848

080001e8 <main>:
void delay(int n){
	for(int i=0; i<n;i++);
}

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b084      	sub	sp, #16
 80001ec:	af00      	add	r7, sp, #0
  GPIO_Handle_t GPIOLed;

  GPIOLed.pGPIOx = GPIOD;
 80001ee:	4b15      	ldr	r3, [pc, #84]	; (8000244 <main+0x5c>)
 80001f0:	603b      	str	r3, [r7, #0]
  GPIOLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PINUMBER_12;
 80001f2:	230c      	movs	r3, #12
 80001f4:	713b      	strb	r3, [r7, #4]
  GPIOLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 80001f6:	2301      	movs	r3, #1
 80001f8:	717b      	strb	r3, [r7, #5]
  GPIOLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_MEDIUM;
 80001fa:	2301      	movs	r3, #1
 80001fc:	71bb      	strb	r3, [r7, #6]
  GPIOLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OPTYPE_PUSHPULL;
 80001fe:	2300      	movs	r3, #0
 8000200:	723b      	strb	r3, [r7, #8]
  GPIOLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PUPD_NO;
 8000202:	2300      	movs	r3, #0
 8000204:	71fb      	strb	r3, [r7, #7]
  GPIO_PeriClockControl(GPIOD, ENABLE);
 8000206:	2101      	movs	r1, #1
 8000208:	480e      	ldr	r0, [pc, #56]	; (8000244 <main+0x5c>)
 800020a:	f000 f81d 	bl	8000248 <GPIO_PeriClockControl>
  GPIO_Init(&GPIOLed);
 800020e:	463b      	mov	r3, r7
 8000210:	4618      	mov	r0, r3
 8000212:	f000 f901 	bl	8000418 <GPIO_Init>

while(1){
  GPIO_WriteToOutputPin(GPIOD, GPIO_PINUMBER_12, RESET);
 8000216:	2200      	movs	r2, #0
 8000218:	210c      	movs	r1, #12
 800021a:	480a      	ldr	r0, [pc, #40]	; (8000244 <main+0x5c>)
 800021c:	f000 faa0 	bl	8000760 <GPIO_WriteToOutputPin>
  for(int i=0;i<10000;i++);
 8000220:	2300      	movs	r3, #0
 8000222:	60fb      	str	r3, [r7, #12]
 8000224:	e002      	b.n	800022c <main+0x44>
 8000226:	68fb      	ldr	r3, [r7, #12]
 8000228:	3301      	adds	r3, #1
 800022a:	60fb      	str	r3, [r7, #12]
 800022c:	68fb      	ldr	r3, [r7, #12]
 800022e:	f242 720f 	movw	r2, #9999	; 0x270f
 8000232:	4293      	cmp	r3, r2
 8000234:	ddf7      	ble.n	8000226 <main+0x3e>
  GPIO_WriteToOutputPin(GPIOD, GPIO_PINUMBER_12, SET);
 8000236:	2201      	movs	r2, #1
 8000238:	210c      	movs	r1, #12
 800023a:	4802      	ldr	r0, [pc, #8]	; (8000244 <main+0x5c>)
 800023c:	f000 fa90 	bl	8000760 <GPIO_WriteToOutputPin>
  GPIO_WriteToOutputPin(GPIOD, GPIO_PINUMBER_12, RESET);
 8000240:	e7e9      	b.n	8000216 <main+0x2e>
 8000242:	bf00      	nop
 8000244:	40020c00 	.word	0x40020c00

08000248 <GPIO_PeriClockControl>:
 *      Author: Navjeevan
 */
#include <gpio.h>

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000248:	b480      	push	{r7}
 800024a:	b083      	sub	sp, #12
 800024c:	af00      	add	r7, sp, #0
 800024e:	6078      	str	r0, [r7, #4]
 8000250:	460b      	mov	r3, r1
 8000252:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000254:	78fb      	ldrb	r3, [r7, #3]
 8000256:	2b01      	cmp	r3, #1
 8000258:	d162      	bne.n	8000320 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 800025a:	687b      	ldr	r3, [r7, #4]
 800025c:	4a64      	ldr	r2, [pc, #400]	; (80003f0 <GPIO_PeriClockControl+0x1a8>)
 800025e:	4293      	cmp	r3, r2
 8000260:	d106      	bne.n	8000270 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000262:	4b64      	ldr	r3, [pc, #400]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000264:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000266:	4a63      	ldr	r2, [pc, #396]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000268:	f043 0301 	orr.w	r3, r3, #1
 800026c:	6313      	str	r3, [r2, #48]	; 0x30
			{
				GPIOI_PCLK_DI();
			}
	}

}
 800026e:	e0b9      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 8000270:	687b      	ldr	r3, [r7, #4]
 8000272:	4a61      	ldr	r2, [pc, #388]	; (80003f8 <GPIO_PeriClockControl+0x1b0>)
 8000274:	4293      	cmp	r3, r2
 8000276:	d106      	bne.n	8000286 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000278:	4b5e      	ldr	r3, [pc, #376]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 800027a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800027c:	4a5d      	ldr	r2, [pc, #372]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 800027e:	f043 0302 	orr.w	r3, r3, #2
 8000282:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000284:	e0ae      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	4a5c      	ldr	r2, [pc, #368]	; (80003fc <GPIO_PeriClockControl+0x1b4>)
 800028a:	4293      	cmp	r3, r2
 800028c:	d106      	bne.n	800029c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800028e:	4b59      	ldr	r3, [pc, #356]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000290:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000292:	4a58      	ldr	r2, [pc, #352]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000294:	f043 0304 	orr.w	r3, r3, #4
 8000298:	6313      	str	r3, [r2, #48]	; 0x30
}
 800029a:	e0a3      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	4a58      	ldr	r2, [pc, #352]	; (8000400 <GPIO_PeriClockControl+0x1b8>)
 80002a0:	4293      	cmp	r3, r2
 80002a2:	d106      	bne.n	80002b2 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80002a4:	4b53      	ldr	r3, [pc, #332]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80002a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a8:	4a52      	ldr	r2, [pc, #328]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80002aa:	f043 0308 	orr.w	r3, r3, #8
 80002ae:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002b0:	e098      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	4a53      	ldr	r2, [pc, #332]	; (8000404 <GPIO_PeriClockControl+0x1bc>)
 80002b6:	4293      	cmp	r3, r2
 80002b8:	d106      	bne.n	80002c8 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80002ba:	4b4e      	ldr	r3, [pc, #312]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80002bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002be:	4a4d      	ldr	r2, [pc, #308]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80002c0:	f043 0310 	orr.w	r3, r3, #16
 80002c4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c6:	e08d      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	4a4f      	ldr	r2, [pc, #316]	; (8000408 <GPIO_PeriClockControl+0x1c0>)
 80002cc:	4293      	cmp	r3, r2
 80002ce:	d106      	bne.n	80002de <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80002d0:	4b48      	ldr	r3, [pc, #288]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80002d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d4:	4a47      	ldr	r2, [pc, #284]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80002d6:	f043 0320 	orr.w	r3, r3, #32
 80002da:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002dc:	e082      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	4a4a      	ldr	r2, [pc, #296]	; (800040c <GPIO_PeriClockControl+0x1c4>)
 80002e2:	4293      	cmp	r3, r2
 80002e4:	d106      	bne.n	80002f4 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80002e6:	4b43      	ldr	r3, [pc, #268]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80002e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ea:	4a42      	ldr	r2, [pc, #264]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80002ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002f0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f2:	e077      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	4a46      	ldr	r2, [pc, #280]	; (8000410 <GPIO_PeriClockControl+0x1c8>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d106      	bne.n	800030a <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80002fc:	4b3d      	ldr	r3, [pc, #244]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80002fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000300:	4a3c      	ldr	r2, [pc, #240]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000302:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000306:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000308:	e06c      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a41      	ldr	r2, [pc, #260]	; (8000414 <GPIO_PeriClockControl+0x1cc>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d168      	bne.n	80003e4 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000312:	4b38      	ldr	r3, [pc, #224]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000314:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000316:	4a37      	ldr	r2, [pc, #220]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000318:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800031c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031e:	e061      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a33      	ldr	r2, [pc, #204]	; (80003f0 <GPIO_PeriClockControl+0x1a8>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d106      	bne.n	8000336 <GPIO_PeriClockControl+0xee>
				GPIOA_PCLK_DI();
 8000328:	4b32      	ldr	r3, [pc, #200]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 800032a:	691b      	ldr	r3, [r3, #16]
 800032c:	4a31      	ldr	r2, [pc, #196]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 800032e:	f023 0301 	bic.w	r3, r3, #1
 8000332:	6113      	str	r3, [r2, #16]
}
 8000334:	e056      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4a2f      	ldr	r2, [pc, #188]	; (80003f8 <GPIO_PeriClockControl+0x1b0>)
 800033a:	4293      	cmp	r3, r2
 800033c:	d106      	bne.n	800034c <GPIO_PeriClockControl+0x104>
				GPIOB_PCLK_DI();
 800033e:	4b2d      	ldr	r3, [pc, #180]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000340:	691b      	ldr	r3, [r3, #16]
 8000342:	4a2c      	ldr	r2, [pc, #176]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000344:	f023 0302 	bic.w	r3, r3, #2
 8000348:	6113      	str	r3, [r2, #16]
}
 800034a:	e04b      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	4a2b      	ldr	r2, [pc, #172]	; (80003fc <GPIO_PeriClockControl+0x1b4>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d106      	bne.n	8000362 <GPIO_PeriClockControl+0x11a>
				GPIOC_PCLK_DI();
 8000354:	4b27      	ldr	r3, [pc, #156]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000356:	691b      	ldr	r3, [r3, #16]
 8000358:	4a26      	ldr	r2, [pc, #152]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 800035a:	f023 0304 	bic.w	r3, r3, #4
 800035e:	6113      	str	r3, [r2, #16]
}
 8000360:	e040      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	4a26      	ldr	r2, [pc, #152]	; (8000400 <GPIO_PeriClockControl+0x1b8>)
 8000366:	4293      	cmp	r3, r2
 8000368:	d106      	bne.n	8000378 <GPIO_PeriClockControl+0x130>
				GPIOD_PCLK_DI();
 800036a:	4b22      	ldr	r3, [pc, #136]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 800036c:	691b      	ldr	r3, [r3, #16]
 800036e:	4a21      	ldr	r2, [pc, #132]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000370:	f023 0308 	bic.w	r3, r3, #8
 8000374:	6113      	str	r3, [r2, #16]
}
 8000376:	e035      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a22      	ldr	r2, [pc, #136]	; (8000404 <GPIO_PeriClockControl+0x1bc>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d106      	bne.n	800038e <GPIO_PeriClockControl+0x146>
				GPIOE_PCLK_DI();
 8000380:	4b1c      	ldr	r3, [pc, #112]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000382:	691b      	ldr	r3, [r3, #16]
 8000384:	4a1b      	ldr	r2, [pc, #108]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000386:	f023 0310 	bic.w	r3, r3, #16
 800038a:	6113      	str	r3, [r2, #16]
}
 800038c:	e02a      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a1d      	ldr	r2, [pc, #116]	; (8000408 <GPIO_PeriClockControl+0x1c0>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d106      	bne.n	80003a4 <GPIO_PeriClockControl+0x15c>
				GPIOF_PCLK_DI();
 8000396:	4b17      	ldr	r3, [pc, #92]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 8000398:	691b      	ldr	r3, [r3, #16]
 800039a:	4a16      	ldr	r2, [pc, #88]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 800039c:	f023 0320 	bic.w	r3, r3, #32
 80003a0:	6113      	str	r3, [r2, #16]
}
 80003a2:	e01f      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a19      	ldr	r2, [pc, #100]	; (800040c <GPIO_PeriClockControl+0x1c4>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d106      	bne.n	80003ba <GPIO_PeriClockControl+0x172>
				GPIOG_PCLK_DI();
 80003ac:	4b11      	ldr	r3, [pc, #68]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80003ae:	691b      	ldr	r3, [r3, #16]
 80003b0:	4a10      	ldr	r2, [pc, #64]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80003b2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80003b6:	6113      	str	r3, [r2, #16]
}
 80003b8:	e014      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4a14      	ldr	r2, [pc, #80]	; (8000410 <GPIO_PeriClockControl+0x1c8>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d106      	bne.n	80003d0 <GPIO_PeriClockControl+0x188>
				GPIOH_PCLK_DI();
 80003c2:	4b0c      	ldr	r3, [pc, #48]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80003c4:	691b      	ldr	r3, [r3, #16]
 80003c6:	4a0b      	ldr	r2, [pc, #44]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80003c8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003cc:	6113      	str	r3, [r2, #16]
}
 80003ce:	e009      	b.n	80003e4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a10      	ldr	r2, [pc, #64]	; (8000414 <GPIO_PeriClockControl+0x1cc>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d105      	bne.n	80003e4 <GPIO_PeriClockControl+0x19c>
				GPIOI_PCLK_DI();
 80003d8:	4b06      	ldr	r3, [pc, #24]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80003da:	691b      	ldr	r3, [r3, #16]
 80003dc:	4a05      	ldr	r2, [pc, #20]	; (80003f4 <GPIO_PeriClockControl+0x1ac>)
 80003de:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80003e2:	6113      	str	r3, [r2, #16]
}
 80003e4:	bf00      	nop
 80003e6:	370c      	adds	r7, #12
 80003e8:	46bd      	mov	sp, r7
 80003ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ee:	4770      	bx	lr
 80003f0:	40020000 	.word	0x40020000
 80003f4:	40023800 	.word	0x40023800
 80003f8:	40020400 	.word	0x40020400
 80003fc:	40020800 	.word	0x40020800
 8000400:	40020c00 	.word	0x40020c00
 8000404:	40021000 	.word	0x40021000
 8000408:	40021400 	.word	0x40021400
 800040c:	40021800 	.word	0x40021800
 8000410:	40021c00 	.word	0x40021c00
 8000414:	40022000 	.word	0x40022000

08000418 <GPIO_Init>:

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000418:	b580      	push	{r7, lr}
 800041a:	b086      	sub	sp, #24
 800041c:	af00      	add	r7, sp, #0
 800041e:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 8000420:	2300      	movs	r3, #0
 8000422:	617b      	str	r3, [r7, #20]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	2101      	movs	r1, #1
 800042a:	4618      	mov	r0, r3
 800042c:	f7ff ff0c 	bl	8000248 <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	795b      	ldrb	r3, [r3, #5]
 8000434:	2b03      	cmp	r3, #3
 8000436:	d820      	bhi.n	800047a <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	795b      	ldrb	r3, [r3, #5]
 800043c:	461a      	mov	r2, r3
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	791b      	ldrb	r3, [r3, #4]
 8000442:	005b      	lsls	r3, r3, #1
 8000444:	fa02 f303 	lsl.w	r3, r2, r3
 8000448:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	681a      	ldr	r2, [r3, #0]
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	791b      	ldrb	r3, [r3, #4]
 8000454:	005b      	lsls	r3, r3, #1
 8000456:	2103      	movs	r1, #3
 8000458:	fa01 f303 	lsl.w	r3, r1, r3
 800045c:	43db      	mvns	r3, r3
 800045e:	4619      	mov	r1, r3
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	400a      	ands	r2, r1
 8000466:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	6819      	ldr	r1, [r3, #0]
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	697a      	ldr	r2, [r7, #20]
 8000474:	430a      	orrs	r2, r1
 8000476:	601a      	str	r2, [r3, #0]
 8000478:	e0d3      	b.n	8000622 <GPIO_Init+0x20a>

	}else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT)
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	795b      	ldrb	r3, [r3, #5]
 800047e:	2b04      	cmp	r3, #4
 8000480:	d117      	bne.n	80004b2 <GPIO_Init+0x9a>
			{
				//Configure the FTSR
				EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000482:	4b4e      	ldr	r3, [pc, #312]	; (80005bc <GPIO_Init+0x1a4>)
 8000484:	68db      	ldr	r3, [r3, #12]
 8000486:	687a      	ldr	r2, [r7, #4]
 8000488:	7912      	ldrb	r2, [r2, #4]
 800048a:	4611      	mov	r1, r2
 800048c:	2201      	movs	r2, #1
 800048e:	408a      	lsls	r2, r1
 8000490:	4611      	mov	r1, r2
 8000492:	4a4a      	ldr	r2, [pc, #296]	; (80005bc <GPIO_Init+0x1a4>)
 8000494:	430b      	orrs	r3, r1
 8000496:	60d3      	str	r3, [r2, #12]
				//Clear corresponding RTSR bit
				EXTI->RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000498:	4b48      	ldr	r3, [pc, #288]	; (80005bc <GPIO_Init+0x1a4>)
 800049a:	689b      	ldr	r3, [r3, #8]
 800049c:	687a      	ldr	r2, [r7, #4]
 800049e:	7912      	ldrb	r2, [r2, #4]
 80004a0:	4611      	mov	r1, r2
 80004a2:	2201      	movs	r2, #1
 80004a4:	408a      	lsls	r2, r1
 80004a6:	43d2      	mvns	r2, r2
 80004a8:	4611      	mov	r1, r2
 80004aa:	4a44      	ldr	r2, [pc, #272]	; (80005bc <GPIO_Init+0x1a4>)
 80004ac:	400b      	ands	r3, r1
 80004ae:	6093      	str	r3, [r2, #8]
 80004b0:	e035      	b.n	800051e <GPIO_Init+0x106>
			}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	795b      	ldrb	r3, [r3, #5]
 80004b6:	2b05      	cmp	r3, #5
 80004b8:	d117      	bne.n	80004ea <GPIO_Init+0xd2>
			{
				//Configure the RTSR
					EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ba:	4b40      	ldr	r3, [pc, #256]	; (80005bc <GPIO_Init+0x1a4>)
 80004bc:	689b      	ldr	r3, [r3, #8]
 80004be:	687a      	ldr	r2, [r7, #4]
 80004c0:	7912      	ldrb	r2, [r2, #4]
 80004c2:	4611      	mov	r1, r2
 80004c4:	2201      	movs	r2, #1
 80004c6:	408a      	lsls	r2, r1
 80004c8:	4611      	mov	r1, r2
 80004ca:	4a3c      	ldr	r2, [pc, #240]	; (80005bc <GPIO_Init+0x1a4>)
 80004cc:	430b      	orrs	r3, r1
 80004ce:	6093      	str	r3, [r2, #8]
					//Clear corresponding FTSR bit
					EXTI->FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004d0:	4b3a      	ldr	r3, [pc, #232]	; (80005bc <GPIO_Init+0x1a4>)
 80004d2:	68db      	ldr	r3, [r3, #12]
 80004d4:	687a      	ldr	r2, [r7, #4]
 80004d6:	7912      	ldrb	r2, [r2, #4]
 80004d8:	4611      	mov	r1, r2
 80004da:	2201      	movs	r2, #1
 80004dc:	408a      	lsls	r2, r1
 80004de:	43d2      	mvns	r2, r2
 80004e0:	4611      	mov	r1, r2
 80004e2:	4a36      	ldr	r2, [pc, #216]	; (80005bc <GPIO_Init+0x1a4>)
 80004e4:	400b      	ands	r3, r1
 80004e6:	60d3      	str	r3, [r2, #12]
 80004e8:	e019      	b.n	800051e <GPIO_Init+0x106>
			}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	795b      	ldrb	r3, [r3, #5]
 80004ee:	2b06      	cmp	r3, #6
 80004f0:	d115      	bne.n	800051e <GPIO_Init+0x106>
			{
				//Configure both RTSR and FTSR
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f2:	4b32      	ldr	r3, [pc, #200]	; (80005bc <GPIO_Init+0x1a4>)
 80004f4:	68db      	ldr	r3, [r3, #12]
 80004f6:	687a      	ldr	r2, [r7, #4]
 80004f8:	7912      	ldrb	r2, [r2, #4]
 80004fa:	4611      	mov	r1, r2
 80004fc:	2201      	movs	r2, #1
 80004fe:	408a      	lsls	r2, r1
 8000500:	4611      	mov	r1, r2
 8000502:	4a2e      	ldr	r2, [pc, #184]	; (80005bc <GPIO_Init+0x1a4>)
 8000504:	430b      	orrs	r3, r1
 8000506:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000508:	4b2c      	ldr	r3, [pc, #176]	; (80005bc <GPIO_Init+0x1a4>)
 800050a:	689b      	ldr	r3, [r3, #8]
 800050c:	687a      	ldr	r2, [r7, #4]
 800050e:	7912      	ldrb	r2, [r2, #4]
 8000510:	4611      	mov	r1, r2
 8000512:	2201      	movs	r2, #1
 8000514:	408a      	lsls	r2, r1
 8000516:	4611      	mov	r1, r2
 8000518:	4a28      	ldr	r2, [pc, #160]	; (80005bc <GPIO_Init+0x1a4>)
 800051a:	430b      	orrs	r3, r1
 800051c:	6093      	str	r3, [r2, #8]

			}
			//Configure the port selection in SYSCFG register
			uint8_t temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4);
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	791b      	ldrb	r3, [r3, #4]
 8000522:	089b      	lsrs	r3, r3, #2
 8000524:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4);
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	791b      	ldrb	r3, [r3, #4]
 800052a:	f003 0303 	and.w	r3, r3, #3
 800052e:	74bb      	strb	r3, [r7, #18]
			uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	4a22      	ldr	r2, [pc, #136]	; (80005c0 <GPIO_Init+0x1a8>)
 8000536:	4293      	cmp	r3, r2
 8000538:	d056      	beq.n	80005e8 <GPIO_Init+0x1d0>
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	4a21      	ldr	r2, [pc, #132]	; (80005c4 <GPIO_Init+0x1ac>)
 8000540:	4293      	cmp	r3, r2
 8000542:	d039      	beq.n	80005b8 <GPIO_Init+0x1a0>
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	4a1f      	ldr	r2, [pc, #124]	; (80005c8 <GPIO_Init+0x1b0>)
 800054a:	4293      	cmp	r3, r2
 800054c:	d032      	beq.n	80005b4 <GPIO_Init+0x19c>
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	4a1e      	ldr	r2, [pc, #120]	; (80005cc <GPIO_Init+0x1b4>)
 8000554:	4293      	cmp	r3, r2
 8000556:	d02b      	beq.n	80005b0 <GPIO_Init+0x198>
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	4a1c      	ldr	r2, [pc, #112]	; (80005d0 <GPIO_Init+0x1b8>)
 800055e:	4293      	cmp	r3, r2
 8000560:	d024      	beq.n	80005ac <GPIO_Init+0x194>
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	4a1b      	ldr	r2, [pc, #108]	; (80005d4 <GPIO_Init+0x1bc>)
 8000568:	4293      	cmp	r3, r2
 800056a:	d01d      	beq.n	80005a8 <GPIO_Init+0x190>
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	4a19      	ldr	r2, [pc, #100]	; (80005d8 <GPIO_Init+0x1c0>)
 8000572:	4293      	cmp	r3, r2
 8000574:	d016      	beq.n	80005a4 <GPIO_Init+0x18c>
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	4a18      	ldr	r2, [pc, #96]	; (80005dc <GPIO_Init+0x1c4>)
 800057c:	4293      	cmp	r3, r2
 800057e:	d00f      	beq.n	80005a0 <GPIO_Init+0x188>
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	4a16      	ldr	r2, [pc, #88]	; (80005e0 <GPIO_Init+0x1c8>)
 8000586:	4293      	cmp	r3, r2
 8000588:	d008      	beq.n	800059c <GPIO_Init+0x184>
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	4a15      	ldr	r2, [pc, #84]	; (80005e4 <GPIO_Init+0x1cc>)
 8000590:	4293      	cmp	r3, r2
 8000592:	d101      	bne.n	8000598 <GPIO_Init+0x180>
 8000594:	2309      	movs	r3, #9
 8000596:	e028      	b.n	80005ea <GPIO_Init+0x1d2>
 8000598:	2300      	movs	r3, #0
 800059a:	e026      	b.n	80005ea <GPIO_Init+0x1d2>
 800059c:	2308      	movs	r3, #8
 800059e:	e024      	b.n	80005ea <GPIO_Init+0x1d2>
 80005a0:	2307      	movs	r3, #7
 80005a2:	e022      	b.n	80005ea <GPIO_Init+0x1d2>
 80005a4:	2306      	movs	r3, #6
 80005a6:	e020      	b.n	80005ea <GPIO_Init+0x1d2>
 80005a8:	2305      	movs	r3, #5
 80005aa:	e01e      	b.n	80005ea <GPIO_Init+0x1d2>
 80005ac:	2304      	movs	r3, #4
 80005ae:	e01c      	b.n	80005ea <GPIO_Init+0x1d2>
 80005b0:	2303      	movs	r3, #3
 80005b2:	e01a      	b.n	80005ea <GPIO_Init+0x1d2>
 80005b4:	2302      	movs	r3, #2
 80005b6:	e018      	b.n	80005ea <GPIO_Init+0x1d2>
 80005b8:	2301      	movs	r3, #1
 80005ba:	e016      	b.n	80005ea <GPIO_Init+0x1d2>
 80005bc:	40013c00 	.word	0x40013c00
 80005c0:	40020000 	.word	0x40020000
 80005c4:	40020400 	.word	0x40020400
 80005c8:	40020800 	.word	0x40020800
 80005cc:	40020c00 	.word	0x40020c00
 80005d0:	40021000 	.word	0x40021000
 80005d4:	40021400 	.word	0x40021400
 80005d8:	40021800 	.word	0x40021800
 80005dc:	40021c00 	.word	0x40021c00
 80005e0:	40022000 	.word	0x40022000
 80005e4:	40022400 	.word	0x40022400
 80005e8:	2300      	movs	r3, #0
 80005ea:	747b      	strb	r3, [r7, #17]
			SYSCFG_CLK_EN();
 80005ec:	4b59      	ldr	r3, [pc, #356]	; (8000754 <GPIO_Init+0x33c>)
 80005ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005f0:	4a58      	ldr	r2, [pc, #352]	; (8000754 <GPIO_Init+0x33c>)
 80005f2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005f6:	6453      	str	r3, [r2, #68]	; 0x44
			SYSCFG->EXTICR[temp1] = (portcode << (temp2*4));
 80005f8:	7c7a      	ldrb	r2, [r7, #17]
 80005fa:	7cbb      	ldrb	r3, [r7, #18]
 80005fc:	009b      	lsls	r3, r3, #2
 80005fe:	fa02 f103 	lsl.w	r1, r2, r3
 8000602:	4a55      	ldr	r2, [pc, #340]	; (8000758 <GPIO_Init+0x340>)
 8000604:	7cfb      	ldrb	r3, [r7, #19]
 8000606:	3302      	adds	r3, #2
 8000608:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

				//enable the exti interrupt delivery using IMR
			EXTI->IMR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800060c:	4b53      	ldr	r3, [pc, #332]	; (800075c <GPIO_Init+0x344>)
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	687a      	ldr	r2, [r7, #4]
 8000612:	7912      	ldrb	r2, [r2, #4]
 8000614:	4611      	mov	r1, r2
 8000616:	2201      	movs	r2, #1
 8000618:	408a      	lsls	r2, r1
 800061a:	4611      	mov	r1, r2
 800061c:	4a4f      	ldr	r2, [pc, #316]	; (800075c <GPIO_Init+0x344>)
 800061e:	430b      	orrs	r3, r1
 8000620:	6013      	str	r3, [r2, #0]

	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	799b      	ldrb	r3, [r3, #6]
 8000626:	461a      	mov	r2, r3
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	791b      	ldrb	r3, [r3, #4]
 800062c:	005b      	lsls	r3, r3, #1
 800062e:	fa02 f303 	lsl.w	r3, r2, r3
 8000632:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000634:	687b      	ldr	r3, [r7, #4]
 8000636:	681b      	ldr	r3, [r3, #0]
 8000638:	689a      	ldr	r2, [r3, #8]
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	791b      	ldrb	r3, [r3, #4]
 800063e:	005b      	lsls	r3, r3, #1
 8000640:	2103      	movs	r1, #3
 8000642:	fa01 f303 	lsl.w	r3, r1, r3
 8000646:	43db      	mvns	r3, r3
 8000648:	4619      	mov	r1, r3
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	400a      	ands	r2, r1
 8000650:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	681b      	ldr	r3, [r3, #0]
 8000656:	6899      	ldr	r1, [r3, #8]
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	681b      	ldr	r3, [r3, #0]
 800065c:	697a      	ldr	r2, [r7, #20]
 800065e:	430a      	orrs	r2, r1
 8000660:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	79db      	ldrb	r3, [r3, #7]
 8000666:	461a      	mov	r2, r3
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	791b      	ldrb	r3, [r3, #4]
 800066c:	005b      	lsls	r3, r3, #1
 800066e:	fa02 f303 	lsl.w	r3, r2, r3
 8000672:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	681b      	ldr	r3, [r3, #0]
 8000678:	68da      	ldr	r2, [r3, #12]
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	791b      	ldrb	r3, [r3, #4]
 800067e:	005b      	lsls	r3, r3, #1
 8000680:	2103      	movs	r1, #3
 8000682:	fa01 f303 	lsl.w	r3, r1, r3
 8000686:	43db      	mvns	r3, r3
 8000688:	4619      	mov	r1, r3
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	681b      	ldr	r3, [r3, #0]
 800068e:	400a      	ands	r2, r1
 8000690:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	68d9      	ldr	r1, [r3, #12]
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	697a      	ldr	r2, [r7, #20]
 800069e:	430a      	orrs	r2, r1
 80006a0:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	7a1b      	ldrb	r3, [r3, #8]
 80006a6:	461a      	mov	r2, r3
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	791b      	ldrb	r3, [r3, #4]
 80006ac:	fa02 f303 	lsl.w	r3, r2, r3
 80006b0:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	685a      	ldr	r2, [r3, #4]
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	791b      	ldrb	r3, [r3, #4]
 80006bc:	4619      	mov	r1, r3
 80006be:	2301      	movs	r3, #1
 80006c0:	408b      	lsls	r3, r1
 80006c2:	43db      	mvns	r3, r3
 80006c4:	4619      	mov	r1, r3
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	681b      	ldr	r3, [r3, #0]
 80006ca:	400a      	ands	r2, r1
 80006cc:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	681b      	ldr	r3, [r3, #0]
 80006d2:	6859      	ldr	r1, [r3, #4]
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	681b      	ldr	r3, [r3, #0]
 80006d8:	697a      	ldr	r2, [r7, #20]
 80006da:	430a      	orrs	r2, r1
 80006dc:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTERNATEFUNC)
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	795b      	ldrb	r3, [r3, #5]
 80006e2:	2b02      	cmp	r3, #2
 80006e4:	d131      	bne.n	800074a <GPIO_Init+0x332>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	791b      	ldrb	r3, [r3, #4]
 80006ea:	08db      	lsrs	r3, r3, #3
 80006ec:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	791b      	ldrb	r3, [r3, #4]
 80006f2:	f003 0307 	and.w	r3, r3, #7
 80006f6:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	7c3a      	ldrb	r2, [r7, #16]
 80006fe:	3208      	adds	r2, #8
 8000700:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000704:	7bfb      	ldrb	r3, [r7, #15]
 8000706:	009b      	lsls	r3, r3, #2
 8000708:	220f      	movs	r2, #15
 800070a:	fa02 f303 	lsl.w	r3, r2, r3
 800070e:	43db      	mvns	r3, r3
 8000710:	4618      	mov	r0, r3
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	681b      	ldr	r3, [r3, #0]
 8000716:	7c3a      	ldrb	r2, [r7, #16]
 8000718:	4001      	ands	r1, r0
 800071a:	3208      	adds	r2, #8
 800071c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	681b      	ldr	r3, [r3, #0]
 8000724:	7c3a      	ldrb	r2, [r7, #16]
 8000726:	3208      	adds	r2, #8
 8000728:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	7a5b      	ldrb	r3, [r3, #9]
 8000730:	461a      	mov	r2, r3
 8000732:	7bfb      	ldrb	r3, [r7, #15]
 8000734:	009b      	lsls	r3, r3, #2
 8000736:	fa02 f303 	lsl.w	r3, r2, r3
 800073a:	4618      	mov	r0, r3
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	7c3a      	ldrb	r2, [r7, #16]
 8000742:	4301      	orrs	r1, r0
 8000744:	3208      	adds	r2, #8
 8000746:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 800074a:	bf00      	nop
 800074c:	3718      	adds	r7, #24
 800074e:	46bd      	mov	sp, r7
 8000750:	bd80      	pop	{r7, pc}
 8000752:	bf00      	nop
 8000754:	40023800 	.word	0x40023800
 8000758:	40013800 	.word	0x40013800
 800075c:	40013c00 	.word	0x40013c00

08000760 <GPIO_WriteToOutputPin>:
	return value;
}


void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 8000760:	b480      	push	{r7}
 8000762:	b083      	sub	sp, #12
 8000764:	af00      	add	r7, sp, #0
 8000766:	6078      	str	r0, [r7, #4]
 8000768:	460b      	mov	r3, r1
 800076a:	70fb      	strb	r3, [r7, #3]
 800076c:	4613      	mov	r3, r2
 800076e:	70bb      	strb	r3, [r7, #2]

	if(Value == ENABLE)
 8000770:	78bb      	ldrb	r3, [r7, #2]
 8000772:	2b01      	cmp	r3, #1
 8000774:	d109      	bne.n	800078a <GPIO_WriteToOutputPin+0x2a>
	{
		//write 1 to the output data register at the bit field corresponding to the pin number
		pGPIOx->ODR |= ( 1 << PinNumber);
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	695b      	ldr	r3, [r3, #20]
 800077a:	78fa      	ldrb	r2, [r7, #3]
 800077c:	2101      	movs	r1, #1
 800077e:	fa01 f202 	lsl.w	r2, r1, r2
 8000782:	431a      	orrs	r2, r3
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	615a      	str	r2, [r3, #20]
	}else
	{
		//write 0
		pGPIOx->ODR &= ~( 1 << PinNumber);
	}
}
 8000788:	e009      	b.n	800079e <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~( 1 << PinNumber);
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	695b      	ldr	r3, [r3, #20]
 800078e:	78fa      	ldrb	r2, [r7, #3]
 8000790:	2101      	movs	r1, #1
 8000792:	fa01 f202 	lsl.w	r2, r1, r2
 8000796:	43d2      	mvns	r2, r2
 8000798:	401a      	ands	r2, r3
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	615a      	str	r2, [r3, #20]
}
 800079e:	bf00      	nop
 80007a0:	370c      	adds	r7, #12
 80007a2:	46bd      	mov	sp, r7
 80007a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007a8:	4770      	bx	lr
	...

080007ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007ac:	480d      	ldr	r0, [pc, #52]	; (80007e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007ae:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80007b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007b4:	480c      	ldr	r0, [pc, #48]	; (80007e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80007b6:	490d      	ldr	r1, [pc, #52]	; (80007ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80007b8:	4a0d      	ldr	r2, [pc, #52]	; (80007f0 <LoopForever+0xe>)
  movs r3, #0
 80007ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007bc:	e002      	b.n	80007c4 <LoopCopyDataInit>

080007be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007c2:	3304      	adds	r3, #4

080007c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80007c8:	d3f9      	bcc.n	80007be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80007ca:	4a0a      	ldr	r2, [pc, #40]	; (80007f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80007cc:	4c0a      	ldr	r4, [pc, #40]	; (80007f8 <LoopForever+0x16>)
  movs r3, #0
 80007ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007d0:	e001      	b.n	80007d6 <LoopFillZerobss>

080007d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007d4:	3204      	adds	r2, #4

080007d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007d8:	d3fb      	bcc.n	80007d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80007da:	f000 f811 	bl	8000800 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007de:	f7ff fd03 	bl	80001e8 <main>

080007e2 <LoopForever>:

LoopForever:
    b LoopForever
 80007e2:	e7fe      	b.n	80007e2 <LoopForever>
  ldr   r0, =_estack
 80007e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80007e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007ec:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80007f0:	08000868 	.word	0x08000868
  ldr r2, =_sbss
 80007f4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80007f8:	2000001c 	.word	0x2000001c

080007fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80007fc:	e7fe      	b.n	80007fc <ADC_IRQHandler>
	...

08000800 <__libc_init_array>:
 8000800:	b570      	push	{r4, r5, r6, lr}
 8000802:	4d0d      	ldr	r5, [pc, #52]	; (8000838 <__libc_init_array+0x38>)
 8000804:	4c0d      	ldr	r4, [pc, #52]	; (800083c <__libc_init_array+0x3c>)
 8000806:	1b64      	subs	r4, r4, r5
 8000808:	10a4      	asrs	r4, r4, #2
 800080a:	2600      	movs	r6, #0
 800080c:	42a6      	cmp	r6, r4
 800080e:	d109      	bne.n	8000824 <__libc_init_array+0x24>
 8000810:	4d0b      	ldr	r5, [pc, #44]	; (8000840 <__libc_init_array+0x40>)
 8000812:	4c0c      	ldr	r4, [pc, #48]	; (8000844 <__libc_init_array+0x44>)
 8000814:	f000 f818 	bl	8000848 <_init>
 8000818:	1b64      	subs	r4, r4, r5
 800081a:	10a4      	asrs	r4, r4, #2
 800081c:	2600      	movs	r6, #0
 800081e:	42a6      	cmp	r6, r4
 8000820:	d105      	bne.n	800082e <__libc_init_array+0x2e>
 8000822:	bd70      	pop	{r4, r5, r6, pc}
 8000824:	f855 3b04 	ldr.w	r3, [r5], #4
 8000828:	4798      	blx	r3
 800082a:	3601      	adds	r6, #1
 800082c:	e7ee      	b.n	800080c <__libc_init_array+0xc>
 800082e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000832:	4798      	blx	r3
 8000834:	3601      	adds	r6, #1
 8000836:	e7f2      	b.n	800081e <__libc_init_array+0x1e>
 8000838:	08000860 	.word	0x08000860
 800083c:	08000860 	.word	0x08000860
 8000840:	08000860 	.word	0x08000860
 8000844:	08000864 	.word	0x08000864

08000848 <_init>:
 8000848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800084a:	bf00      	nop
 800084c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800084e:	bc08      	pop	{r3}
 8000850:	469e      	mov	lr, r3
 8000852:	4770      	bx	lr

08000854 <_fini>:
 8000854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000856:	bf00      	nop
 8000858:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800085a:	bc08      	pop	{r3}
 800085c:	469e      	mov	lr, r3
 800085e:	4770      	bx	lr
