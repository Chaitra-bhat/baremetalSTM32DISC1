
gpio_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008a8  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a50  08000a58  00010a58  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a50  08000a50  00010a58  2**0
                  CONTENTS
  4 .ARM          00000000  08000a50  08000a50  00010a58  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a50  08000a58  00010a58  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a50  08000a50  00010a50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a54  08000a54  00010a54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a58  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a58  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a58  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010a58  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000125b  00000000  00000000  00010a88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000322  00000000  00000000  00011ce3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  00012008  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a0  00000000  00000000  000120d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000227d  00000000  00000000  00012170  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000010fb  00000000  00000000  000143ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009aac  00000000  00000000  000154e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001ef94  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000026c  00000000  00000000  0001efe8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000a38 	.word	0x08000a38

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000a38 	.word	0x08000a38

080001e8 <main>:
#include<stdio.h>
#include<gpio.h>


int main()
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b086      	sub	sp, #24
 80001ec:	af00      	add	r7, sp, #0
	GPIOHandle_t pGPIOLED, pGPIOButton;

	//LED
	pGPIOLED.pGPIOx = GPIOD;
 80001ee:	4b1a      	ldr	r3, [pc, #104]	; (8000258 <main+0x70>)
 80001f0:	60fb      	str	r3, [r7, #12]
	pGPIOLED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PINNUMBER_12;
 80001f2:	230c      	movs	r3, #12
 80001f4:	743b      	strb	r3, [r7, #16]
	pGPIOLED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 80001f6:	2301      	movs	r3, #1
 80001f8:	747b      	strb	r3, [r7, #17]
	pGPIOLED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_MEDIUM;
 80001fa:	2301      	movs	r3, #1
 80001fc:	74bb      	strb	r3, [r7, #18]
	pGPIOLED.GPIO_PinConfig.GPIO_PinOPType = GPIO_OTYPE_PUSHPULL;
 80001fe:	2300      	movs	r3, #0
 8000200:	753b      	strb	r3, [r7, #20]
	pGPIOLED.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PUPDTYPE_NONE;
 8000202:	2300      	movs	r3, #0
 8000204:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockEnable(GPIOD, ENABLE);
 8000206:	2101      	movs	r1, #1
 8000208:	4813      	ldr	r0, [pc, #76]	; (8000258 <main+0x70>)
 800020a:	f000 fa0d 	bl	8000628 <GPIO_PeriClockEnable>
	GPIO_Init(&pGPIOLED);
 800020e:	f107 030c 	add.w	r3, r7, #12
 8000212:	4618      	mov	r0, r3
 8000214:	f000 f85c 	bl	80002d0 <GPIO_Init>

	//Button
	pGPIOLED.pGPIOx = GPIOA;
 8000218:	4b10      	ldr	r3, [pc, #64]	; (800025c <main+0x74>)
 800021a:	60fb      	str	r3, [r7, #12]
	pGPIOLED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PINNUMBER_0;
 800021c:	2300      	movs	r3, #0
 800021e:	743b      	strb	r3, [r7, #16]
	pGPIOLED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_FT;
 8000220:	2304      	movs	r3, #4
 8000222:	747b      	strb	r3, [r7, #17]
	pGPIOLED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_MEDIUM;
 8000224:	2301      	movs	r3, #1
 8000226:	74bb      	strb	r3, [r7, #18]
	pGPIOLED.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PUPDTYPE_NONE;
 8000228:	2300      	movs	r3, #0
 800022a:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockEnable(GPIOA, ENABLE);
 800022c:	2101      	movs	r1, #1
 800022e:	480b      	ldr	r0, [pc, #44]	; (800025c <main+0x74>)
 8000230:	f000 f9fa 	bl	8000628 <GPIO_PeriClockEnable>
	GPIO_Init(&pGPIOButton);
 8000234:	463b      	mov	r3, r7
 8000236:	4618      	mov	r0, r3
 8000238:	f000 f84a 	bl	80002d0 <GPIO_Init>

	GPIO_IRQPriorityConfig(IRQNumber_5_9, 15);
 800023c:	210f      	movs	r1, #15
 800023e:	2017      	movs	r0, #23
 8000240:	f000 fb8e 	bl	8000960 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQNumber_5_9, ENABLE);
 8000244:	2101      	movs	r1, #1
 8000246:	2017      	movs	r0, #23
 8000248:	f000 fb04 	bl	8000854 <GPIO_IRQInterruptConfig>

	//while(1);
	return 0;
 800024c:	2300      	movs	r3, #0
}
 800024e:	4618      	mov	r0, r3
 8000250:	3718      	adds	r7, #24
 8000252:	46bd      	mov	sp, r7
 8000254:	bd80      	pop	{r7, pc}
 8000256:	bf00      	nop
 8000258:	40020c00 	.word	0x40020c00
 800025c:	40020000 	.word	0x40020000

08000260 <EXTI9_5_IRQHandler>:


void EXTI9_5_IRQHandler(void)
{
 8000260:	b580      	push	{r7, lr}
 8000262:	af00      	add	r7, sp, #0
	GPIO_IRQHandler(GPIO_PINNUMBER_5);
 8000264:	2005      	movs	r0, #5
 8000266:	f000 fba3 	bl	80009b0 <GPIO_IRQHandler>

	GPIO_TogglePin(GPIOD, GPIO_PINNUMBER_12);
 800026a:	210c      	movs	r1, #12
 800026c:	4802      	ldr	r0, [pc, #8]	; (8000278 <EXTI9_5_IRQHandler+0x18>)
 800026e:	f000 fadb 	bl	8000828 <GPIO_TogglePin>
	//delay(50000);

}
 8000272:	bf00      	nop
 8000274:	bd80      	pop	{r7, pc}
 8000276:	bf00      	nop
 8000278:	40020c00 	.word	0x40020c00

0800027c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800027c:	480d      	ldr	r0, [pc, #52]	; (80002b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000280:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000284:	480c      	ldr	r0, [pc, #48]	; (80002b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000286:	490d      	ldr	r1, [pc, #52]	; (80002bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000288:	4a0d      	ldr	r2, [pc, #52]	; (80002c0 <LoopForever+0xe>)
  movs r3, #0
 800028a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800028c:	e002      	b.n	8000294 <LoopCopyDataInit>

0800028e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000290:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000292:	3304      	adds	r3, #4

08000294 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000294:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000296:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000298:	d3f9      	bcc.n	800028e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800029a:	4a0a      	ldr	r2, [pc, #40]	; (80002c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800029c:	4c0a      	ldr	r4, [pc, #40]	; (80002c8 <LoopForever+0x16>)
  movs r3, #0
 800029e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002a0:	e001      	b.n	80002a6 <LoopFillZerobss>

080002a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a4:	3204      	adds	r2, #4

080002a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a8:	d3fb      	bcc.n	80002a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002aa:	f000 fba1 	bl	80009f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ae:	f7ff ff9b 	bl	80001e8 <main>

080002b2 <LoopForever>:

LoopForever:
    b LoopForever
 80002b2:	e7fe      	b.n	80002b2 <LoopForever>
  ldr   r0, =_estack
 80002b4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002bc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002c0:	08000a58 	.word	0x08000a58
  ldr r2, =_sbss
 80002c4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c8:	2000001c 	.word	0x2000001c

080002cc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002cc:	e7fe      	b.n	80002cc <ADC_IRQHandler>
	...

080002d0 <GPIO_Init>:

/*
 * INITILIZATION AND DEINITILIZATION
 */
void GPIO_Init(GPIOHandle_t *pGPIOHandle)
{
 80002d0:	b480      	push	{r7}
 80002d2:	b087      	sub	sp, #28
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]

	uint32_t temp, temp1, temp2;
	uint8_t portcode;

	//1. Configure the mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	795b      	ldrb	r3, [r3, #5]
 80002dc:	2b03      	cmp	r3, #3
 80002de:	d820      	bhi.n	8000322 <GPIO_Init+0x52>
	{
		//Non interrupt mode

		//Initilly clear the bits
		pGPIOHandle->pGPIOx->MODER &= ~(0x3U << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	6819      	ldr	r1, [r3, #0]
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	791b      	ldrb	r3, [r3, #4]
 80002ea:	461a      	mov	r2, r3
 80002ec:	2303      	movs	r3, #3
 80002ee:	4093      	lsls	r3, r2
 80002f0:	43da      	mvns	r2, r3
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	681b      	ldr	r3, [r3, #0]
 80002f6:	400a      	ands	r2, r1
 80002f8:	601a      	str	r2, [r3, #0]
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<(2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	795b      	ldrb	r3, [r3, #5]
 80002fe:	461a      	mov	r2, r3
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	791b      	ldrb	r3, [r3, #4]
 8000304:	005b      	lsls	r3, r3, #1
 8000306:	fa02 f303 	lsl.w	r3, r2, r3
 800030a:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->MODER |= temp;
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	6819      	ldr	r1, [r3, #0]
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	68ba      	ldr	r2, [r7, #8]
 8000318:	430a      	orrs	r2, r1
 800031a:	601a      	str	r2, [r3, #0]
		temp = 0;
 800031c:	2300      	movs	r3, #0
 800031e:	60bb      	str	r3, [r7, #8]
 8000320:	e0df      	b.n	80004e2 <GPIO_Init+0x212>

	}
	else
	{
		//Interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_FT)
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	795b      	ldrb	r3, [r3, #5]
 8000326:	2b04      	cmp	r3, #4
 8000328:	d117      	bne.n	800035a <GPIO_Init+0x8a>
		{
			//1.Configure FTSR register
			EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800032a:	4b4f      	ldr	r3, [pc, #316]	; (8000468 <GPIO_Init+0x198>)
 800032c:	68db      	ldr	r3, [r3, #12]
 800032e:	687a      	ldr	r2, [r7, #4]
 8000330:	7912      	ldrb	r2, [r2, #4]
 8000332:	4611      	mov	r1, r2
 8000334:	2201      	movs	r2, #1
 8000336:	408a      	lsls	r2, r1
 8000338:	4611      	mov	r1, r2
 800033a:	4a4b      	ldr	r2, [pc, #300]	; (8000468 <GPIO_Init+0x198>)
 800033c:	430b      	orrs	r3, r1
 800033e:	60d3      	str	r3, [r2, #12]

			// Clear RTSR bit
			EXTI->EXTI_RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000340:	4b49      	ldr	r3, [pc, #292]	; (8000468 <GPIO_Init+0x198>)
 8000342:	689b      	ldr	r3, [r3, #8]
 8000344:	687a      	ldr	r2, [r7, #4]
 8000346:	7912      	ldrb	r2, [r2, #4]
 8000348:	4611      	mov	r1, r2
 800034a:	2201      	movs	r2, #1
 800034c:	408a      	lsls	r2, r1
 800034e:	43d2      	mvns	r2, r2
 8000350:	4611      	mov	r1, r2
 8000352:	4a45      	ldr	r2, [pc, #276]	; (8000468 <GPIO_Init+0x198>)
 8000354:	400b      	ands	r3, r1
 8000356:	6093      	str	r3, [r2, #8]
 8000358:	e035      	b.n	80003c6 <GPIO_Init+0xf6>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_RT)
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	795b      	ldrb	r3, [r3, #5]
 800035e:	2b05      	cmp	r3, #5
 8000360:	d117      	bne.n	8000392 <GPIO_Init+0xc2>
		{
			//1. Configure RTSR register
			EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000362:	4b41      	ldr	r3, [pc, #260]	; (8000468 <GPIO_Init+0x198>)
 8000364:	689b      	ldr	r3, [r3, #8]
 8000366:	687a      	ldr	r2, [r7, #4]
 8000368:	7912      	ldrb	r2, [r2, #4]
 800036a:	4611      	mov	r1, r2
 800036c:	2201      	movs	r2, #1
 800036e:	408a      	lsls	r2, r1
 8000370:	4611      	mov	r1, r2
 8000372:	4a3d      	ldr	r2, [pc, #244]	; (8000468 <GPIO_Init+0x198>)
 8000374:	430b      	orrs	r3, r1
 8000376:	6093      	str	r3, [r2, #8]

			// Clear FTSR bit
			EXTI->EXTI_FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000378:	4b3b      	ldr	r3, [pc, #236]	; (8000468 <GPIO_Init+0x198>)
 800037a:	68db      	ldr	r3, [r3, #12]
 800037c:	687a      	ldr	r2, [r7, #4]
 800037e:	7912      	ldrb	r2, [r2, #4]
 8000380:	4611      	mov	r1, r2
 8000382:	2201      	movs	r2, #1
 8000384:	408a      	lsls	r2, r1
 8000386:	43d2      	mvns	r2, r2
 8000388:	4611      	mov	r1, r2
 800038a:	4a37      	ldr	r2, [pc, #220]	; (8000468 <GPIO_Init+0x198>)
 800038c:	400b      	ands	r3, r1
 800038e:	60d3      	str	r3, [r2, #12]
 8000390:	e019      	b.n	80003c6 <GPIO_Init+0xf6>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_RFT)
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	795b      	ldrb	r3, [r3, #5]
 8000396:	2b06      	cmp	r3, #6
 8000398:	d115      	bne.n	80003c6 <GPIO_Init+0xf6>
		{
			//1. Configure both FTSR and RTSr registers
			EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800039a:	4b33      	ldr	r3, [pc, #204]	; (8000468 <GPIO_Init+0x198>)
 800039c:	68db      	ldr	r3, [r3, #12]
 800039e:	687a      	ldr	r2, [r7, #4]
 80003a0:	7912      	ldrb	r2, [r2, #4]
 80003a2:	4611      	mov	r1, r2
 80003a4:	2201      	movs	r2, #1
 80003a6:	408a      	lsls	r2, r1
 80003a8:	4611      	mov	r1, r2
 80003aa:	4a2f      	ldr	r2, [pc, #188]	; (8000468 <GPIO_Init+0x198>)
 80003ac:	430b      	orrs	r3, r1
 80003ae:	60d3      	str	r3, [r2, #12]

			EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003b0:	4b2d      	ldr	r3, [pc, #180]	; (8000468 <GPIO_Init+0x198>)
 80003b2:	689b      	ldr	r3, [r3, #8]
 80003b4:	687a      	ldr	r2, [r7, #4]
 80003b6:	7912      	ldrb	r2, [r2, #4]
 80003b8:	4611      	mov	r1, r2
 80003ba:	2201      	movs	r2, #1
 80003bc:	408a      	lsls	r2, r1
 80003be:	4611      	mov	r1, r2
 80003c0:	4a29      	ldr	r2, [pc, #164]	; (8000468 <GPIO_Init+0x198>)
 80003c2:	430b      	orrs	r3, r1
 80003c4:	6093      	str	r3, [r2, #8]
		}

		// 2. Configure the GPIO port selection in SYSCFG_EXTICR
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	791b      	ldrb	r3, [r3, #4]
 80003ca:	089b      	lsrs	r3, r3, #2
 80003cc:	b2db      	uxtb	r3, r3
 80003ce:	617b      	str	r3, [r7, #20]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	791b      	ldrb	r3, [r3, #4]
 80003d4:	f003 0303 	and.w	r3, r3, #3
 80003d8:	613b      	str	r3, [r7, #16]

		portcode = GPIOBASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	4a23      	ldr	r2, [pc, #140]	; (800046c <GPIO_Init+0x19c>)
 80003e0:	4293      	cmp	r3, r2
 80003e2:	d057      	beq.n	8000494 <GPIO_Init+0x1c4>
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	4a21      	ldr	r2, [pc, #132]	; (8000470 <GPIO_Init+0x1a0>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d039      	beq.n	8000462 <GPIO_Init+0x192>
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	4a20      	ldr	r2, [pc, #128]	; (8000474 <GPIO_Init+0x1a4>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d032      	beq.n	800045e <GPIO_Init+0x18e>
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	4a1e      	ldr	r2, [pc, #120]	; (8000478 <GPIO_Init+0x1a8>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d02b      	beq.n	800045a <GPIO_Init+0x18a>
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	4a1d      	ldr	r2, [pc, #116]	; (800047c <GPIO_Init+0x1ac>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d024      	beq.n	8000456 <GPIO_Init+0x186>
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	4a1b      	ldr	r2, [pc, #108]	; (8000480 <GPIO_Init+0x1b0>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d01d      	beq.n	8000452 <GPIO_Init+0x182>
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	4a1a      	ldr	r2, [pc, #104]	; (8000484 <GPIO_Init+0x1b4>)
 800041c:	4293      	cmp	r3, r2
 800041e:	d016      	beq.n	800044e <GPIO_Init+0x17e>
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	4a18      	ldr	r2, [pc, #96]	; (8000488 <GPIO_Init+0x1b8>)
 8000426:	4293      	cmp	r3, r2
 8000428:	d00f      	beq.n	800044a <GPIO_Init+0x17a>
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	4a17      	ldr	r2, [pc, #92]	; (800048c <GPIO_Init+0x1bc>)
 8000430:	4293      	cmp	r3, r2
 8000432:	d008      	beq.n	8000446 <GPIO_Init+0x176>
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	4a15      	ldr	r2, [pc, #84]	; (8000490 <GPIO_Init+0x1c0>)
 800043a:	4293      	cmp	r3, r2
 800043c:	d101      	bne.n	8000442 <GPIO_Init+0x172>
 800043e:	2309      	movs	r3, #9
 8000440:	e029      	b.n	8000496 <GPIO_Init+0x1c6>
 8000442:	2300      	movs	r3, #0
 8000444:	e027      	b.n	8000496 <GPIO_Init+0x1c6>
 8000446:	2308      	movs	r3, #8
 8000448:	e025      	b.n	8000496 <GPIO_Init+0x1c6>
 800044a:	2307      	movs	r3, #7
 800044c:	e023      	b.n	8000496 <GPIO_Init+0x1c6>
 800044e:	2306      	movs	r3, #6
 8000450:	e021      	b.n	8000496 <GPIO_Init+0x1c6>
 8000452:	2305      	movs	r3, #5
 8000454:	e01f      	b.n	8000496 <GPIO_Init+0x1c6>
 8000456:	2304      	movs	r3, #4
 8000458:	e01d      	b.n	8000496 <GPIO_Init+0x1c6>
 800045a:	2303      	movs	r3, #3
 800045c:	e01b      	b.n	8000496 <GPIO_Init+0x1c6>
 800045e:	2302      	movs	r3, #2
 8000460:	e019      	b.n	8000496 <GPIO_Init+0x1c6>
 8000462:	2301      	movs	r3, #1
 8000464:	e017      	b.n	8000496 <GPIO_Init+0x1c6>
 8000466:	bf00      	nop
 8000468:	40013c00 	.word	0x40013c00
 800046c:	40020000 	.word	0x40020000
 8000470:	40020400 	.word	0x40020400
 8000474:	40020800 	.word	0x40020800
 8000478:	40020c00 	.word	0x40020c00
 800047c:	40021000 	.word	0x40021000
 8000480:	40021400 	.word	0x40021400
 8000484:	40021800 	.word	0x40021800
 8000488:	40021c00 	.word	0x40021c00
 800048c:	40022000 	.word	0x40022000
 8000490:	40022400 	.word	0x40022400
 8000494:	2300      	movs	r3, #0
 8000496:	73fb      	strb	r3, [r7, #15]
		SYSCFG_PCLK_ENABLE();
 8000498:	4b60      	ldr	r3, [pc, #384]	; (800061c <GPIO_Init+0x34c>)
 800049a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800049c:	4a5f      	ldr	r2, [pc, #380]	; (800061c <GPIO_Init+0x34c>)
 800049e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004a2:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->SYSCFG_EXTICR[temp1] |= portcode << (temp2*4);
 80004a4:	4a5e      	ldr	r2, [pc, #376]	; (8000620 <GPIO_Init+0x350>)
 80004a6:	697b      	ldr	r3, [r7, #20]
 80004a8:	3302      	adds	r3, #2
 80004aa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80004ae:	7bf9      	ldrb	r1, [r7, #15]
 80004b0:	693a      	ldr	r2, [r7, #16]
 80004b2:	0092      	lsls	r2, r2, #2
 80004b4:	fa01 f202 	lsl.w	r2, r1, r2
 80004b8:	4959      	ldr	r1, [pc, #356]	; (8000620 <GPIO_Init+0x350>)
 80004ba:	431a      	orrs	r2, r3
 80004bc:	697b      	ldr	r3, [r7, #20]
 80004be:	3302      	adds	r3, #2
 80004c0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		temp1 = temp2 = 0;
 80004c4:	2300      	movs	r3, #0
 80004c6:	613b      	str	r3, [r7, #16]
 80004c8:	693b      	ldr	r3, [r7, #16]
 80004ca:	617b      	str	r3, [r7, #20]

		//3. Enable the EXTI interrupt delivery using IMR
		EXTI->EXTI_IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004cc:	4b55      	ldr	r3, [pc, #340]	; (8000624 <GPIO_Init+0x354>)
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	687a      	ldr	r2, [r7, #4]
 80004d2:	7912      	ldrb	r2, [r2, #4]
 80004d4:	4611      	mov	r1, r2
 80004d6:	2201      	movs	r2, #1
 80004d8:	408a      	lsls	r2, r1
 80004da:	4611      	mov	r1, r2
 80004dc:	4a51      	ldr	r2, [pc, #324]	; (8000624 <GPIO_Init+0x354>)
 80004de:	430b      	orrs	r3, r1
 80004e0:	6013      	str	r3, [r2, #0]


	//2. Configure the speed

	//Initally clear the bit
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	6899      	ldr	r1, [r3, #8]
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	791b      	ldrb	r3, [r3, #4]
 80004ec:	461a      	mov	r2, r3
 80004ee:	2303      	movs	r3, #3
 80004f0:	4093      	lsls	r3, r2
 80004f2:	43da      	mvns	r2, r3
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	400a      	ands	r2, r1
 80004fa:	609a      	str	r2, [r3, #8]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	799b      	ldrb	r3, [r3, #6]
 8000500:	461a      	mov	r2, r3
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	791b      	ldrb	r3, [r3, #4]
 8000506:	005b      	lsls	r3, r3, #1
 8000508:	fa02 f303 	lsl.w	r3, r2, r3
 800050c:	60bb      	str	r3, [r7, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	6899      	ldr	r1, [r3, #8]
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	68ba      	ldr	r2, [r7, #8]
 800051a:	430a      	orrs	r2, r1
 800051c:	609a      	str	r2, [r3, #8]
	temp = 0;
 800051e:	2300      	movs	r3, #0
 8000520:	60bb      	str	r3, [r7, #8]

	//3. Configure PuPd mode
	//Initally clear the bit
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	68d9      	ldr	r1, [r3, #12]
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	791b      	ldrb	r3, [r3, #4]
 800052c:	461a      	mov	r2, r3
 800052e:	2303      	movs	r3, #3
 8000530:	4093      	lsls	r3, r2
 8000532:	43da      	mvns	r2, r3
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	400a      	ands	r2, r1
 800053a:	60da      	str	r2, [r3, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	79db      	ldrb	r3, [r3, #7]
 8000540:	461a      	mov	r2, r3
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	791b      	ldrb	r3, [r3, #4]
 8000546:	005b      	lsls	r3, r3, #1
 8000548:	fa02 f303 	lsl.w	r3, r2, r3
 800054c:	60bb      	str	r3, [r7, #8]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	68d9      	ldr	r1, [r3, #12]
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	681b      	ldr	r3, [r3, #0]
 8000558:	68ba      	ldr	r2, [r7, #8]
 800055a:	430a      	orrs	r2, r1
 800055c:	60da      	str	r2, [r3, #12]
	temp = 0;
 800055e:	2300      	movs	r3, #0
 8000560:	60bb      	str	r3, [r7, #8]

	//4.Configure Output type
	//Initally clear the bit
	pGPIOHandle->pGPIOx->OTYPER &= ~(1U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	6859      	ldr	r1, [r3, #4]
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	791b      	ldrb	r3, [r3, #4]
 800056c:	461a      	mov	r2, r3
 800056e:	2301      	movs	r3, #1
 8000570:	4093      	lsls	r3, r2
 8000572:	43da      	mvns	r2, r3
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	400a      	ands	r2, r1
 800057a:	605a      	str	r2, [r3, #4]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	7a1b      	ldrb	r3, [r3, #8]
 8000580:	461a      	mov	r2, r3
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	791b      	ldrb	r3, [r3, #4]
 8000586:	fa02 f303 	lsl.w	r3, r2, r3
 800058a:	60bb      	str	r3, [r7, #8]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	681b      	ldr	r3, [r3, #0]
 8000590:	6859      	ldr	r1, [r3, #4]
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	681b      	ldr	r3, [r3, #0]
 8000596:	68ba      	ldr	r2, [r7, #8]
 8000598:	430a      	orrs	r2, r1
 800059a:	605a      	str	r2, [r3, #4]
	temp = 0;
 800059c:	2300      	movs	r3, #0
 800059e:	60bb      	str	r3, [r7, #8]

	//5. Configure Alternate functionality type
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFUNC)
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	795b      	ldrb	r3, [r3, #5]
 80005a4:	2b02      	cmp	r3, #2
 80005a6:	d133      	bne.n	8000610 <GPIO_Init+0x340>
	{

		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/8;
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	791b      	ldrb	r3, [r3, #4]
 80005ac:	08db      	lsrs	r3, r3, #3
 80005ae:	b2db      	uxtb	r3, r3
 80005b0:	617b      	str	r3, [r7, #20]
		temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)%8;
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	791b      	ldrb	r3, [r3, #4]
 80005b6:	f003 0307 	and.w	r3, r3, #7
 80005ba:	613b      	str	r3, [r7, #16]

		//Initially clear the bit
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode);
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	697a      	ldr	r2, [r7, #20]
 80005c2:	3208      	adds	r2, #8
 80005c4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	7a5b      	ldrb	r3, [r3, #9]
 80005cc:	43db      	mvns	r3, r3
 80005ce:	4619      	mov	r1, r3
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	4011      	ands	r1, r2
 80005d6:	697a      	ldr	r2, [r7, #20]
 80005d8:	3208      	adds	r2, #8
 80005da:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	697a      	ldr	r2, [r7, #20]
 80005e4:	3208      	adds	r2, #8
 80005e6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	7a5b      	ldrb	r3, [r3, #9]
 80005ee:	4619      	mov	r1, r3
 80005f0:	693b      	ldr	r3, [r7, #16]
 80005f2:	009b      	lsls	r3, r3, #2
 80005f4:	fa01 f303 	lsl.w	r3, r1, r3
 80005f8:	4619      	mov	r1, r3
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	4311      	orrs	r1, r2
 8000600:	697a      	ldr	r2, [r7, #20]
 8000602:	3208      	adds	r2, #8
 8000604:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		temp1 = 0;
 8000608:	2300      	movs	r3, #0
 800060a:	617b      	str	r3, [r7, #20]
		temp2 = 0;
 800060c:	2300      	movs	r3, #0
 800060e:	613b      	str	r3, [r7, #16]
	}



}
 8000610:	bf00      	nop
 8000612:	371c      	adds	r7, #28
 8000614:	46bd      	mov	sp, r7
 8000616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800061a:	4770      	bx	lr
 800061c:	40023800 	.word	0x40023800
 8000620:	40013800 	.word	0x40013800
 8000624:	40013c00 	.word	0x40013c00

08000628 <GPIO_PeriClockEnable>:

/*
 * PERIPHERAL CLOCK ENABLE AND DISABLE
 */
void GPIO_PeriClockEnable(GPIO_RegDef_t *pGPIOx, uint8_t EnaOrDis)
{
 8000628:	b480      	push	{r7}
 800062a:	b083      	sub	sp, #12
 800062c:	af00      	add	r7, sp, #0
 800062e:	6078      	str	r0, [r7, #4]
 8000630:	460b      	mov	r3, r1
 8000632:	70fb      	strb	r3, [r7, #3]
	if(EnaOrDis == ENABLE)
 8000634:	78fb      	ldrb	r3, [r7, #3]
 8000636:	2b01      	cmp	r3, #1
 8000638:	d16d      	bne.n	8000716 <GPIO_PeriClockEnable+0xee>
	{
	if(pGPIOx == GPIOA)
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	4a6f      	ldr	r2, [pc, #444]	; (80007fc <GPIO_PeriClockEnable+0x1d4>)
 800063e:	4293      	cmp	r3, r2
 8000640:	d106      	bne.n	8000650 <GPIO_PeriClockEnable+0x28>
		GPIOA_PCLK_ENABLE();
 8000642:	4b6f      	ldr	r3, [pc, #444]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000644:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000646:	4a6e      	ldr	r2, [pc, #440]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000648:	f043 0301 	orr.w	r3, r3, #1
 800064c:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOI)
			GPIOI_PCLK_DISABLE();
		else if(pGPIOx == GPIOJ)
			GPIOJ_PCLK_DISABLE();
	}
}
 800064e:	e0cf      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOB)
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	4a6c      	ldr	r2, [pc, #432]	; (8000804 <GPIO_PeriClockEnable+0x1dc>)
 8000654:	4293      	cmp	r3, r2
 8000656:	d106      	bne.n	8000666 <GPIO_PeriClockEnable+0x3e>
		GPIOB_PCLK_ENABLE();
 8000658:	4b69      	ldr	r3, [pc, #420]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 800065a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800065c:	4a68      	ldr	r2, [pc, #416]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 800065e:	f043 0302 	orr.w	r3, r3, #2
 8000662:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000664:	e0c4      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOC)
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	4a67      	ldr	r2, [pc, #412]	; (8000808 <GPIO_PeriClockEnable+0x1e0>)
 800066a:	4293      	cmp	r3, r2
 800066c:	d106      	bne.n	800067c <GPIO_PeriClockEnable+0x54>
		GPIOC_PCLK_ENABLE();
 800066e:	4b64      	ldr	r3, [pc, #400]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000670:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000672:	4a63      	ldr	r2, [pc, #396]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000674:	f043 0304 	orr.w	r3, r3, #4
 8000678:	6313      	str	r3, [r2, #48]	; 0x30
}
 800067a:	e0b9      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOD)
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	4a63      	ldr	r2, [pc, #396]	; (800080c <GPIO_PeriClockEnable+0x1e4>)
 8000680:	4293      	cmp	r3, r2
 8000682:	d106      	bne.n	8000692 <GPIO_PeriClockEnable+0x6a>
		GPIOD_PCLK_ENABLE();
 8000684:	4b5e      	ldr	r3, [pc, #376]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000686:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000688:	4a5d      	ldr	r2, [pc, #372]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 800068a:	f043 0308 	orr.w	r3, r3, #8
 800068e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000690:	e0ae      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOE)
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	4a5e      	ldr	r2, [pc, #376]	; (8000810 <GPIO_PeriClockEnable+0x1e8>)
 8000696:	4293      	cmp	r3, r2
 8000698:	d106      	bne.n	80006a8 <GPIO_PeriClockEnable+0x80>
		GPIOE_PCLK_ENABLE();
 800069a:	4b59      	ldr	r3, [pc, #356]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 800069c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800069e:	4a58      	ldr	r2, [pc, #352]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80006a0:	f043 0310 	orr.w	r3, r3, #16
 80006a4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006a6:	e0a3      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOF)
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	4a5a      	ldr	r2, [pc, #360]	; (8000814 <GPIO_PeriClockEnable+0x1ec>)
 80006ac:	4293      	cmp	r3, r2
 80006ae:	d106      	bne.n	80006be <GPIO_PeriClockEnable+0x96>
		GPIOF_PCLK_ENABLE();
 80006b0:	4b53      	ldr	r3, [pc, #332]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80006b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006b4:	4a52      	ldr	r2, [pc, #328]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80006b6:	f043 0320 	orr.w	r3, r3, #32
 80006ba:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006bc:	e098      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOG)
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	4a55      	ldr	r2, [pc, #340]	; (8000818 <GPIO_PeriClockEnable+0x1f0>)
 80006c2:	4293      	cmp	r3, r2
 80006c4:	d106      	bne.n	80006d4 <GPIO_PeriClockEnable+0xac>
		GPIOG_PCLK_ENABLE();
 80006c6:	4b4e      	ldr	r3, [pc, #312]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80006c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006ca:	4a4d      	ldr	r2, [pc, #308]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80006cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80006d0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006d2:	e08d      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOH)
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	4a51      	ldr	r2, [pc, #324]	; (800081c <GPIO_PeriClockEnable+0x1f4>)
 80006d8:	4293      	cmp	r3, r2
 80006da:	d106      	bne.n	80006ea <GPIO_PeriClockEnable+0xc2>
		GPIOH_PCLK_ENABLE();
 80006dc:	4b48      	ldr	r3, [pc, #288]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80006de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006e0:	4a47      	ldr	r2, [pc, #284]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80006e2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80006e6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006e8:	e082      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOI)
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	4a4c      	ldr	r2, [pc, #304]	; (8000820 <GPIO_PeriClockEnable+0x1f8>)
 80006ee:	4293      	cmp	r3, r2
 80006f0:	d106      	bne.n	8000700 <GPIO_PeriClockEnable+0xd8>
		GPIOI_PCLK_ENABLE();
 80006f2:	4b43      	ldr	r3, [pc, #268]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80006f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006f6:	4a42      	ldr	r2, [pc, #264]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80006f8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80006fc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006fe:	e077      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOJ)
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	4a48      	ldr	r2, [pc, #288]	; (8000824 <GPIO_PeriClockEnable+0x1fc>)
 8000704:	4293      	cmp	r3, r2
 8000706:	d173      	bne.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
		GPIOJ_PCLK_ENABLE();
 8000708:	4b3d      	ldr	r3, [pc, #244]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 800070a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800070c:	4a3c      	ldr	r2, [pc, #240]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 800070e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000712:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000714:	e06c      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
		if(pGPIOx == GPIOA)
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	4a38      	ldr	r2, [pc, #224]	; (80007fc <GPIO_PeriClockEnable+0x1d4>)
 800071a:	4293      	cmp	r3, r2
 800071c:	d106      	bne.n	800072c <GPIO_PeriClockEnable+0x104>
			GPIOA_PCLK_DISABLE();
 800071e:	4b38      	ldr	r3, [pc, #224]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000720:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000722:	4a37      	ldr	r2, [pc, #220]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000724:	f023 0301 	bic.w	r3, r3, #1
 8000728:	6313      	str	r3, [r2, #48]	; 0x30
}
 800072a:	e061      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOB)
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	4a35      	ldr	r2, [pc, #212]	; (8000804 <GPIO_PeriClockEnable+0x1dc>)
 8000730:	4293      	cmp	r3, r2
 8000732:	d106      	bne.n	8000742 <GPIO_PeriClockEnable+0x11a>
			GPIOB_PCLK_DISABLE();
 8000734:	4b32      	ldr	r3, [pc, #200]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000736:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000738:	4a31      	ldr	r2, [pc, #196]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 800073a:	f023 0302 	bic.w	r3, r3, #2
 800073e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000740:	e056      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOC)
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	4a30      	ldr	r2, [pc, #192]	; (8000808 <GPIO_PeriClockEnable+0x1e0>)
 8000746:	4293      	cmp	r3, r2
 8000748:	d106      	bne.n	8000758 <GPIO_PeriClockEnable+0x130>
			GPIOC_PCLK_DISABLE();
 800074a:	4b2d      	ldr	r3, [pc, #180]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 800074c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800074e:	4a2c      	ldr	r2, [pc, #176]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000750:	f023 0304 	bic.w	r3, r3, #4
 8000754:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000756:	e04b      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOD)
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	4a2c      	ldr	r2, [pc, #176]	; (800080c <GPIO_PeriClockEnable+0x1e4>)
 800075c:	4293      	cmp	r3, r2
 800075e:	d106      	bne.n	800076e <GPIO_PeriClockEnable+0x146>
			GPIOD_PCLK_DISABLE();
 8000760:	4b27      	ldr	r3, [pc, #156]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000762:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000764:	4a26      	ldr	r2, [pc, #152]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000766:	f023 0308 	bic.w	r3, r3, #8
 800076a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800076c:	e040      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOE)
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	4a27      	ldr	r2, [pc, #156]	; (8000810 <GPIO_PeriClockEnable+0x1e8>)
 8000772:	4293      	cmp	r3, r2
 8000774:	d106      	bne.n	8000784 <GPIO_PeriClockEnable+0x15c>
			GPIOE_PCLK_DISABLE();
 8000776:	4b22      	ldr	r3, [pc, #136]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000778:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800077a:	4a21      	ldr	r2, [pc, #132]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 800077c:	f023 0310 	bic.w	r3, r3, #16
 8000780:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000782:	e035      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOF)
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	4a23      	ldr	r2, [pc, #140]	; (8000814 <GPIO_PeriClockEnable+0x1ec>)
 8000788:	4293      	cmp	r3, r2
 800078a:	d106      	bne.n	800079a <GPIO_PeriClockEnable+0x172>
			GPIOF_PCLK_DISABLE();
 800078c:	4b1c      	ldr	r3, [pc, #112]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 800078e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000790:	4a1b      	ldr	r2, [pc, #108]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 8000792:	f023 0320 	bic.w	r3, r3, #32
 8000796:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000798:	e02a      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOG)
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	4a1e      	ldr	r2, [pc, #120]	; (8000818 <GPIO_PeriClockEnable+0x1f0>)
 800079e:	4293      	cmp	r3, r2
 80007a0:	d106      	bne.n	80007b0 <GPIO_PeriClockEnable+0x188>
			GPIOG_PCLK_DISABLE();
 80007a2:	4b17      	ldr	r3, [pc, #92]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80007a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007a6:	4a16      	ldr	r2, [pc, #88]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80007a8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80007ac:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007ae:	e01f      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOH)
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	4a1a      	ldr	r2, [pc, #104]	; (800081c <GPIO_PeriClockEnable+0x1f4>)
 80007b4:	4293      	cmp	r3, r2
 80007b6:	d106      	bne.n	80007c6 <GPIO_PeriClockEnable+0x19e>
			GPIOH_PCLK_DISABLE();
 80007b8:	4b11      	ldr	r3, [pc, #68]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80007ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007bc:	4a10      	ldr	r2, [pc, #64]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80007be:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80007c2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007c4:	e014      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOI)
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	4a15      	ldr	r2, [pc, #84]	; (8000820 <GPIO_PeriClockEnable+0x1f8>)
 80007ca:	4293      	cmp	r3, r2
 80007cc:	d106      	bne.n	80007dc <GPIO_PeriClockEnable+0x1b4>
			GPIOI_PCLK_DISABLE();
 80007ce:	4b0c      	ldr	r3, [pc, #48]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80007d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007d2:	4a0b      	ldr	r2, [pc, #44]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80007d4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80007d8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007da:	e009      	b.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOJ)
 80007dc:	687b      	ldr	r3, [r7, #4]
 80007de:	4a11      	ldr	r2, [pc, #68]	; (8000824 <GPIO_PeriClockEnable+0x1fc>)
 80007e0:	4293      	cmp	r3, r2
 80007e2:	d105      	bne.n	80007f0 <GPIO_PeriClockEnable+0x1c8>
			GPIOJ_PCLK_DISABLE();
 80007e4:	4b06      	ldr	r3, [pc, #24]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80007e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007e8:	4a05      	ldr	r2, [pc, #20]	; (8000800 <GPIO_PeriClockEnable+0x1d8>)
 80007ea:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80007ee:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007f0:	bf00      	nop
 80007f2:	370c      	adds	r7, #12
 80007f4:	46bd      	mov	sp, r7
 80007f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007fa:	4770      	bx	lr
 80007fc:	40020000 	.word	0x40020000
 8000800:	40023800 	.word	0x40023800
 8000804:	40020400 	.word	0x40020400
 8000808:	40020800 	.word	0x40020800
 800080c:	40020c00 	.word	0x40020c00
 8000810:	40021000 	.word	0x40021000
 8000814:	40021400 	.word	0x40021400
 8000818:	40021800 	.word	0x40021800
 800081c:	40021c00 	.word	0x40021c00
 8000820:	40022000 	.word	0x40022000
 8000824:	40022400 	.word	0x40022400

08000828 <GPIO_TogglePin>:

/*
 * TOGGLE PIN
 */
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx,  uint8_t PinNumber)
{
 8000828:	b480      	push	{r7}
 800082a:	b083      	sub	sp, #12
 800082c:	af00      	add	r7, sp, #0
 800082e:	6078      	str	r0, [r7, #4]
 8000830:	460b      	mov	r3, r1
 8000832:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	695b      	ldr	r3, [r3, #20]
 8000838:	78fa      	ldrb	r2, [r7, #3]
 800083a:	2101      	movs	r1, #1
 800083c:	fa01 f202 	lsl.w	r2, r1, r2
 8000840:	405a      	eors	r2, r3
 8000842:	687b      	ldr	r3, [r7, #4]
 8000844:	615a      	str	r2, [r3, #20]
}
 8000846:	bf00      	nop
 8000848:	370c      	adds	r7, #12
 800084a:	46bd      	mov	sp, r7
 800084c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000850:	4770      	bx	lr
	...

08000854 <GPIO_IRQInterruptConfig>:

/*
 * IRQ RELATED FUNCTIONS
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnaOrDis)
{
 8000854:	b480      	push	{r7}
 8000856:	b083      	sub	sp, #12
 8000858:	af00      	add	r7, sp, #0
 800085a:	4603      	mov	r3, r0
 800085c:	460a      	mov	r2, r1
 800085e:	71fb      	strb	r3, [r7, #7]
 8000860:	4613      	mov	r3, r2
 8000862:	71bb      	strb	r3, [r7, #6]

	if(EnaOrDis == ENABLE)
 8000864:	79bb      	ldrb	r3, [r7, #6]
 8000866:	2b01      	cmp	r3, #1
 8000868:	d133      	bne.n	80008d2 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 800086a:	79fb      	ldrb	r3, [r7, #7]
 800086c:	2b1f      	cmp	r3, #31
 800086e:	d80a      	bhi.n	8000886 <GPIO_IRQInterruptConfig+0x32>
		{
			// Then program the ISER0 regsiter -> refer cortex M4 user guide for more details
			*NVIC_ISER0 |= (1 << IRQNumber);
 8000870:	4b35      	ldr	r3, [pc, #212]	; (8000948 <GPIO_IRQInterruptConfig+0xf4>)
 8000872:	681b      	ldr	r3, [r3, #0]
 8000874:	79fa      	ldrb	r2, [r7, #7]
 8000876:	2101      	movs	r1, #1
 8000878:	fa01 f202 	lsl.w	r2, r1, r2
 800087c:	4611      	mov	r1, r2
 800087e:	4a32      	ldr	r2, [pc, #200]	; (8000948 <GPIO_IRQInterruptConfig+0xf4>)
 8000880:	430b      	orrs	r3, r1
 8000882:	6013      	str	r3, [r2, #0]
			//ICER2
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
		}
	}

}
 8000884:	e059      	b.n	800093a <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64)
 8000886:	79fb      	ldrb	r3, [r7, #7]
 8000888:	2b1f      	cmp	r3, #31
 800088a:	d90f      	bls.n	80008ac <GPIO_IRQInterruptConfig+0x58>
 800088c:	79fb      	ldrb	r3, [r7, #7]
 800088e:	2b3f      	cmp	r3, #63	; 0x3f
 8000890:	d80c      	bhi.n	80008ac <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 8000892:	4b2e      	ldr	r3, [pc, #184]	; (800094c <GPIO_IRQInterruptConfig+0xf8>)
 8000894:	681b      	ldr	r3, [r3, #0]
 8000896:	79fa      	ldrb	r2, [r7, #7]
 8000898:	f002 021f 	and.w	r2, r2, #31
 800089c:	2101      	movs	r1, #1
 800089e:	fa01 f202 	lsl.w	r2, r1, r2
 80008a2:	4611      	mov	r1, r2
 80008a4:	4a29      	ldr	r2, [pc, #164]	; (800094c <GPIO_IRQInterruptConfig+0xf8>)
 80008a6:	430b      	orrs	r3, r1
 80008a8:	6013      	str	r3, [r2, #0]
 80008aa:	e046      	b.n	800093a <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96)
 80008ac:	79fb      	ldrb	r3, [r7, #7]
 80008ae:	2b3f      	cmp	r3, #63	; 0x3f
 80008b0:	d943      	bls.n	800093a <GPIO_IRQInterruptConfig+0xe6>
 80008b2:	79fb      	ldrb	r3, [r7, #7]
 80008b4:	2b5f      	cmp	r3, #95	; 0x5f
 80008b6:	d840      	bhi.n	800093a <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 80008b8:	4b25      	ldr	r3, [pc, #148]	; (8000950 <GPIO_IRQInterruptConfig+0xfc>)
 80008ba:	681b      	ldr	r3, [r3, #0]
 80008bc:	79fa      	ldrb	r2, [r7, #7]
 80008be:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008c2:	2101      	movs	r1, #1
 80008c4:	fa01 f202 	lsl.w	r2, r1, r2
 80008c8:	4611      	mov	r1, r2
 80008ca:	4a21      	ldr	r2, [pc, #132]	; (8000950 <GPIO_IRQInterruptConfig+0xfc>)
 80008cc:	430b      	orrs	r3, r1
 80008ce:	6013      	str	r3, [r2, #0]
}
 80008d0:	e033      	b.n	800093a <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 80008d2:	79fb      	ldrb	r3, [r7, #7]
 80008d4:	2b1f      	cmp	r3, #31
 80008d6:	d80a      	bhi.n	80008ee <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 80008d8:	4b1e      	ldr	r3, [pc, #120]	; (8000954 <GPIO_IRQInterruptConfig+0x100>)
 80008da:	681b      	ldr	r3, [r3, #0]
 80008dc:	79fa      	ldrb	r2, [r7, #7]
 80008de:	2101      	movs	r1, #1
 80008e0:	fa01 f202 	lsl.w	r2, r1, r2
 80008e4:	4611      	mov	r1, r2
 80008e6:	4a1b      	ldr	r2, [pc, #108]	; (8000954 <GPIO_IRQInterruptConfig+0x100>)
 80008e8:	430b      	orrs	r3, r1
 80008ea:	6013      	str	r3, [r2, #0]
}
 80008ec:	e025      	b.n	800093a <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64)
 80008ee:	79fb      	ldrb	r3, [r7, #7]
 80008f0:	2b1f      	cmp	r3, #31
 80008f2:	d90f      	bls.n	8000914 <GPIO_IRQInterruptConfig+0xc0>
 80008f4:	79fb      	ldrb	r3, [r7, #7]
 80008f6:	2b3f      	cmp	r3, #63	; 0x3f
 80008f8:	d80c      	bhi.n	8000914 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 80008fa:	4b17      	ldr	r3, [pc, #92]	; (8000958 <GPIO_IRQInterruptConfig+0x104>)
 80008fc:	681b      	ldr	r3, [r3, #0]
 80008fe:	79fa      	ldrb	r2, [r7, #7]
 8000900:	f002 021f 	and.w	r2, r2, #31
 8000904:	2101      	movs	r1, #1
 8000906:	fa01 f202 	lsl.w	r2, r1, r2
 800090a:	4611      	mov	r1, r2
 800090c:	4a12      	ldr	r2, [pc, #72]	; (8000958 <GPIO_IRQInterruptConfig+0x104>)
 800090e:	430b      	orrs	r3, r1
 8000910:	6013      	str	r3, [r2, #0]
 8000912:	e012      	b.n	800093a <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96)
 8000914:	79fb      	ldrb	r3, [r7, #7]
 8000916:	2b3f      	cmp	r3, #63	; 0x3f
 8000918:	d90f      	bls.n	800093a <GPIO_IRQInterruptConfig+0xe6>
 800091a:	79fb      	ldrb	r3, [r7, #7]
 800091c:	2b5f      	cmp	r3, #95	; 0x5f
 800091e:	d80c      	bhi.n	800093a <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 8000920:	4b0e      	ldr	r3, [pc, #56]	; (800095c <GPIO_IRQInterruptConfig+0x108>)
 8000922:	681b      	ldr	r3, [r3, #0]
 8000924:	79fa      	ldrb	r2, [r7, #7]
 8000926:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800092a:	2101      	movs	r1, #1
 800092c:	fa01 f202 	lsl.w	r2, r1, r2
 8000930:	4611      	mov	r1, r2
 8000932:	4a0a      	ldr	r2, [pc, #40]	; (800095c <GPIO_IRQInterruptConfig+0x108>)
 8000934:	430b      	orrs	r3, r1
 8000936:	6013      	str	r3, [r2, #0]
}
 8000938:	e7ff      	b.n	800093a <GPIO_IRQInterruptConfig+0xe6>
 800093a:	bf00      	nop
 800093c:	370c      	adds	r7, #12
 800093e:	46bd      	mov	sp, r7
 8000940:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000944:	4770      	bx	lr
 8000946:	bf00      	nop
 8000948:	e000e100 	.word	0xe000e100
 800094c:	e000e104 	.word	0xe000e104
 8000950:	e000e108 	.word	0xe000e108
 8000954:	e000e180 	.word	0xe000e180
 8000958:	e000e184 	.word	0xe000e184
 800095c:	e000e188 	.word	0xe000e188

08000960 <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQpriority)
{
 8000960:	b480      	push	{r7}
 8000962:	b085      	sub	sp, #20
 8000964:	af00      	add	r7, sp, #0
 8000966:	4603      	mov	r3, r0
 8000968:	6039      	str	r1, [r7, #0]
 800096a:	71fb      	strb	r3, [r7, #7]
	uint8_t iprx = IRQNumber/4;
 800096c:	79fb      	ldrb	r3, [r7, #7]
 800096e:	089b      	lsrs	r3, r3, #2
 8000970:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 8000972:	79fb      	ldrb	r3, [r7, #7]
 8000974:	f003 0303 	and.w	r3, r3, #3
 8000978:	73bb      	strb	r3, [r7, #14]

	*(NVIC_IPR0 + iprx) |= (IRQpriority << ((8*iprx_section) + (8 - NO_OF_PRIOBITS_IMPLEMENTED)));
 800097a:	7bfb      	ldrb	r3, [r7, #15]
 800097c:	009b      	lsls	r3, r3, #2
 800097e:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000982:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000986:	6819      	ldr	r1, [r3, #0]
 8000988:	7bbb      	ldrb	r3, [r7, #14]
 800098a:	00db      	lsls	r3, r3, #3
 800098c:	3304      	adds	r3, #4
 800098e:	683a      	ldr	r2, [r7, #0]
 8000990:	409a      	lsls	r2, r3
 8000992:	7bfb      	ldrb	r3, [r7, #15]
 8000994:	009b      	lsls	r3, r3, #2
 8000996:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800099a:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 800099e:	430a      	orrs	r2, r1
 80009a0:	601a      	str	r2, [r3, #0]
}
 80009a2:	bf00      	nop
 80009a4:	3714      	adds	r7, #20
 80009a6:	46bd      	mov	sp, r7
 80009a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009ac:	4770      	bx	lr
	...

080009b0 <GPIO_IRQHandler>:


void GPIO_IRQHandler(uint8_t PinNumber)
{
 80009b0:	b480      	push	{r7}
 80009b2:	b083      	sub	sp, #12
 80009b4:	af00      	add	r7, sp, #0
 80009b6:	4603      	mov	r3, r0
 80009b8:	71fb      	strb	r3, [r7, #7]
	// clear the EXTI PR register corresponnding to the Pin Number
	if(EXTI->EXTI_PR & (1<< PinNumber))
 80009ba:	4b0c      	ldr	r3, [pc, #48]	; (80009ec <GPIO_IRQHandler+0x3c>)
 80009bc:	695b      	ldr	r3, [r3, #20]
 80009be:	79fa      	ldrb	r2, [r7, #7]
 80009c0:	2101      	movs	r1, #1
 80009c2:	fa01 f202 	lsl.w	r2, r1, r2
 80009c6:	4013      	ands	r3, r2
 80009c8:	2b00      	cmp	r3, #0
 80009ca:	d009      	beq.n	80009e0 <GPIO_IRQHandler+0x30>
	{
		// clear the pending resgister bit
		EXTI->EXTI_PR |= (1 << PinNumber);
 80009cc:	4b07      	ldr	r3, [pc, #28]	; (80009ec <GPIO_IRQHandler+0x3c>)
 80009ce:	695b      	ldr	r3, [r3, #20]
 80009d0:	79fa      	ldrb	r2, [r7, #7]
 80009d2:	2101      	movs	r1, #1
 80009d4:	fa01 f202 	lsl.w	r2, r1, r2
 80009d8:	4611      	mov	r1, r2
 80009da:	4a04      	ldr	r2, [pc, #16]	; (80009ec <GPIO_IRQHandler+0x3c>)
 80009dc:	430b      	orrs	r3, r1
 80009de:	6153      	str	r3, [r2, #20]
	}



}
 80009e0:	bf00      	nop
 80009e2:	370c      	adds	r7, #12
 80009e4:	46bd      	mov	sp, r7
 80009e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009ea:	4770      	bx	lr
 80009ec:	40013c00 	.word	0x40013c00

080009f0 <__libc_init_array>:
 80009f0:	b570      	push	{r4, r5, r6, lr}
 80009f2:	4d0d      	ldr	r5, [pc, #52]	; (8000a28 <__libc_init_array+0x38>)
 80009f4:	4c0d      	ldr	r4, [pc, #52]	; (8000a2c <__libc_init_array+0x3c>)
 80009f6:	1b64      	subs	r4, r4, r5
 80009f8:	10a4      	asrs	r4, r4, #2
 80009fa:	2600      	movs	r6, #0
 80009fc:	42a6      	cmp	r6, r4
 80009fe:	d109      	bne.n	8000a14 <__libc_init_array+0x24>
 8000a00:	4d0b      	ldr	r5, [pc, #44]	; (8000a30 <__libc_init_array+0x40>)
 8000a02:	4c0c      	ldr	r4, [pc, #48]	; (8000a34 <__libc_init_array+0x44>)
 8000a04:	f000 f818 	bl	8000a38 <_init>
 8000a08:	1b64      	subs	r4, r4, r5
 8000a0a:	10a4      	asrs	r4, r4, #2
 8000a0c:	2600      	movs	r6, #0
 8000a0e:	42a6      	cmp	r6, r4
 8000a10:	d105      	bne.n	8000a1e <__libc_init_array+0x2e>
 8000a12:	bd70      	pop	{r4, r5, r6, pc}
 8000a14:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a18:	4798      	blx	r3
 8000a1a:	3601      	adds	r6, #1
 8000a1c:	e7ee      	b.n	80009fc <__libc_init_array+0xc>
 8000a1e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a22:	4798      	blx	r3
 8000a24:	3601      	adds	r6, #1
 8000a26:	e7f2      	b.n	8000a0e <__libc_init_array+0x1e>
 8000a28:	08000a50 	.word	0x08000a50
 8000a2c:	08000a50 	.word	0x08000a50
 8000a30:	08000a50 	.word	0x08000a50
 8000a34:	08000a54 	.word	0x08000a54

08000a38 <_init>:
 8000a38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a3a:	bf00      	nop
 8000a3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a3e:	bc08      	pop	{r3}
 8000a40:	469e      	mov	lr, r3
 8000a42:	4770      	bx	lr

08000a44 <_fini>:
 8000a44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a46:	bf00      	nop
 8000a48:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a4a:	bc08      	pop	{r3}
 8000a4c:	469e      	mov	lr, r3
 8000a4e:	4770      	bx	lr
