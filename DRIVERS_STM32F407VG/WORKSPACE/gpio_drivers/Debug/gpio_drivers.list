
gpio_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006e4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800088c  08000894  00010894  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800088c  0800088c  00010894  2**0
                  CONTENTS
  4 .ARM          00000000  0800088c  0800088c  00010894  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800088c  08000894  00010894  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800088c  0800088c  0001088c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000890  08000890  00010890  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010894  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000894  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000894  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010894  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000123a  00000000  00000000  000108c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000308  00000000  00000000  00011afe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00011e08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  00011ec8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000227d  00000000  00000000  00011f60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000010dd  00000000  00000000  000141dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009a91  00000000  00000000  000152ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001ed4b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  0001eda0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000874 	.word	0x08000874

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000874 	.word	0x08000874

080001e8 <main>:
#include<stdio.h>
#include<gpio.h>


int main()
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b084      	sub	sp, #16
 80001ec:	af00      	add	r7, sp, #0
	GPIOHandle_t pGPIOLED;

	pGPIOLED.pGPIOx = GPIOD;
 80001ee:	4b0e      	ldr	r3, [pc, #56]	; (8000228 <main+0x40>)
 80001f0:	607b      	str	r3, [r7, #4]
	pGPIOLED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PINNUMBER_14;
 80001f2:	230e      	movs	r3, #14
 80001f4:	723b      	strb	r3, [r7, #8]
	pGPIOLED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 80001f6:	2301      	movs	r3, #1
 80001f8:	727b      	strb	r3, [r7, #9]
	pGPIOLED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_MEDIUM;
 80001fa:	2301      	movs	r3, #1
 80001fc:	72bb      	strb	r3, [r7, #10]
	pGPIOLED.GPIO_PinConfig.GPIO_PinOPType = GPIO_OTYPE_PUSHPULL;
 80001fe:	2300      	movs	r3, #0
 8000200:	733b      	strb	r3, [r7, #12]
	pGPIOLED.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PUPDTYPE_NONE;
 8000202:	2300      	movs	r3, #0
 8000204:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockEnable(GPIOD, ENABLE);
 8000206:	2101      	movs	r1, #1
 8000208:	4807      	ldr	r0, [pc, #28]	; (8000228 <main+0x40>)
 800020a:	f000 f9f9 	bl	8000600 <GPIO_PeriClockEnable>
	GPIO_Init(&pGPIOLED);
 800020e:	1d3b      	adds	r3, r7, #4
 8000210:	4618      	mov	r0, r3
 8000212:	f000 f849 	bl	80002a8 <GPIO_Init>

	while(1)
	{
		GPIO_TogglePin(GPIOD, GPIO_PINNUMBER_14);
 8000216:	210e      	movs	r1, #14
 8000218:	4803      	ldr	r0, [pc, #12]	; (8000228 <main+0x40>)
 800021a:	f000 faf1 	bl	8000800 <GPIO_TogglePin>
		delay(50000);
 800021e:	f24c 3050 	movw	r0, #50000	; 0xc350
 8000222:	f000 f82c 	bl	800027e <delay>
		GPIO_TogglePin(GPIOD, GPIO_PINNUMBER_14);
 8000226:	e7f6      	b.n	8000216 <main+0x2e>
 8000228:	40020c00 	.word	0x40020c00

0800022c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800022c:	480d      	ldr	r0, [pc, #52]	; (8000264 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800022e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000230:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000234:	480c      	ldr	r0, [pc, #48]	; (8000268 <LoopForever+0x6>)
  ldr r1, =_edata
 8000236:	490d      	ldr	r1, [pc, #52]	; (800026c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000238:	4a0d      	ldr	r2, [pc, #52]	; (8000270 <LoopForever+0xe>)
  movs r3, #0
 800023a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800023c:	e002      	b.n	8000244 <LoopCopyDataInit>

0800023e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800023e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000240:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000242:	3304      	adds	r3, #4

08000244 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000244:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000246:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000248:	d3f9      	bcc.n	800023e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800024a:	4a0a      	ldr	r2, [pc, #40]	; (8000274 <LoopForever+0x12>)
  ldr r4, =_ebss
 800024c:	4c0a      	ldr	r4, [pc, #40]	; (8000278 <LoopForever+0x16>)
  movs r3, #0
 800024e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000250:	e001      	b.n	8000256 <LoopFillZerobss>

08000252 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000252:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000254:	3204      	adds	r2, #4

08000256 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000256:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000258:	d3fb      	bcc.n	8000252 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800025a:	f000 fae7 	bl	800082c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800025e:	f7ff ffc3 	bl	80001e8 <main>

08000262 <LoopForever>:

LoopForever:
    b LoopForever
 8000262:	e7fe      	b.n	8000262 <LoopForever>
  ldr   r0, =_estack
 8000264:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000268:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800026c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000270:	08000894 	.word	0x08000894
  ldr r2, =_sbss
 8000274:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000278:	2000001c 	.word	0x2000001c

0800027c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800027c:	e7fe      	b.n	800027c <ADC_IRQHandler>

0800027e <delay>:

/*
 * ddelay function
 */
void delay(uint32_t delayVal)
{
 800027e:	b480      	push	{r7}
 8000280:	b085      	sub	sp, #20
 8000282:	af00      	add	r7, sp, #0
 8000284:	6078      	str	r0, [r7, #4]
	for(int i =0; i<delayVal;i++);
 8000286:	2300      	movs	r3, #0
 8000288:	60fb      	str	r3, [r7, #12]
 800028a:	e002      	b.n	8000292 <delay+0x14>
 800028c:	68fb      	ldr	r3, [r7, #12]
 800028e:	3301      	adds	r3, #1
 8000290:	60fb      	str	r3, [r7, #12]
 8000292:	68fb      	ldr	r3, [r7, #12]
 8000294:	687a      	ldr	r2, [r7, #4]
 8000296:	429a      	cmp	r2, r3
 8000298:	d8f8      	bhi.n	800028c <delay+0xe>
}
 800029a:	bf00      	nop
 800029c:	bf00      	nop
 800029e:	3714      	adds	r7, #20
 80002a0:	46bd      	mov	sp, r7
 80002a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002a6:	4770      	bx	lr

080002a8 <GPIO_Init>:

/*
 * INITILIZATION AND DEINITILIZATION
 */
void GPIO_Init(GPIOHandle_t *pGPIOHandle)
{
 80002a8:	b480      	push	{r7}
 80002aa:	b087      	sub	sp, #28
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	6078      	str	r0, [r7, #4]

	uint32_t temp, temp1, temp2;
	uint8_t portcode;

	//1. Configure the mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	795b      	ldrb	r3, [r3, #5]
 80002b4:	2b03      	cmp	r3, #3
 80002b6:	d820      	bhi.n	80002fa <GPIO_Init+0x52>
	{
		//Non interrupt mode

		//Initilly clear the bits
		pGPIOHandle->pGPIOx->MODER &= ~(0x3U << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	6819      	ldr	r1, [r3, #0]
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	791b      	ldrb	r3, [r3, #4]
 80002c2:	461a      	mov	r2, r3
 80002c4:	2303      	movs	r3, #3
 80002c6:	4093      	lsls	r3, r2
 80002c8:	43da      	mvns	r2, r3
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	400a      	ands	r2, r1
 80002d0:	601a      	str	r2, [r3, #0]
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<(2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	795b      	ldrb	r3, [r3, #5]
 80002d6:	461a      	mov	r2, r3
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	791b      	ldrb	r3, [r3, #4]
 80002dc:	005b      	lsls	r3, r3, #1
 80002de:	fa02 f303 	lsl.w	r3, r2, r3
 80002e2:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	6819      	ldr	r1, [r3, #0]
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	68ba      	ldr	r2, [r7, #8]
 80002f0:	430a      	orrs	r2, r1
 80002f2:	601a      	str	r2, [r3, #0]
		temp = 0;
 80002f4:	2300      	movs	r3, #0
 80002f6:	60bb      	str	r3, [r7, #8]
 80002f8:	e0df      	b.n	80004ba <GPIO_Init+0x212>

	}
	else
	{
		//Interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_FT)
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	795b      	ldrb	r3, [r3, #5]
 80002fe:	2b04      	cmp	r3, #4
 8000300:	d117      	bne.n	8000332 <GPIO_Init+0x8a>
		{
			//1.Configure FTSR register
			EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000302:	4b4f      	ldr	r3, [pc, #316]	; (8000440 <GPIO_Init+0x198>)
 8000304:	68db      	ldr	r3, [r3, #12]
 8000306:	687a      	ldr	r2, [r7, #4]
 8000308:	7912      	ldrb	r2, [r2, #4]
 800030a:	4611      	mov	r1, r2
 800030c:	2201      	movs	r2, #1
 800030e:	408a      	lsls	r2, r1
 8000310:	4611      	mov	r1, r2
 8000312:	4a4b      	ldr	r2, [pc, #300]	; (8000440 <GPIO_Init+0x198>)
 8000314:	430b      	orrs	r3, r1
 8000316:	60d3      	str	r3, [r2, #12]

			// Clear RTSR bit
			EXTI->EXTI_RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000318:	4b49      	ldr	r3, [pc, #292]	; (8000440 <GPIO_Init+0x198>)
 800031a:	689b      	ldr	r3, [r3, #8]
 800031c:	687a      	ldr	r2, [r7, #4]
 800031e:	7912      	ldrb	r2, [r2, #4]
 8000320:	4611      	mov	r1, r2
 8000322:	2201      	movs	r2, #1
 8000324:	408a      	lsls	r2, r1
 8000326:	43d2      	mvns	r2, r2
 8000328:	4611      	mov	r1, r2
 800032a:	4a45      	ldr	r2, [pc, #276]	; (8000440 <GPIO_Init+0x198>)
 800032c:	400b      	ands	r3, r1
 800032e:	6093      	str	r3, [r2, #8]
 8000330:	e035      	b.n	800039e <GPIO_Init+0xf6>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_RT)
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	795b      	ldrb	r3, [r3, #5]
 8000336:	2b05      	cmp	r3, #5
 8000338:	d117      	bne.n	800036a <GPIO_Init+0xc2>
		{
			//1. Configure RTSR register
			EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800033a:	4b41      	ldr	r3, [pc, #260]	; (8000440 <GPIO_Init+0x198>)
 800033c:	689b      	ldr	r3, [r3, #8]
 800033e:	687a      	ldr	r2, [r7, #4]
 8000340:	7912      	ldrb	r2, [r2, #4]
 8000342:	4611      	mov	r1, r2
 8000344:	2201      	movs	r2, #1
 8000346:	408a      	lsls	r2, r1
 8000348:	4611      	mov	r1, r2
 800034a:	4a3d      	ldr	r2, [pc, #244]	; (8000440 <GPIO_Init+0x198>)
 800034c:	430b      	orrs	r3, r1
 800034e:	6093      	str	r3, [r2, #8]

			// Clear FTSR bit
			EXTI->EXTI_FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000350:	4b3b      	ldr	r3, [pc, #236]	; (8000440 <GPIO_Init+0x198>)
 8000352:	68db      	ldr	r3, [r3, #12]
 8000354:	687a      	ldr	r2, [r7, #4]
 8000356:	7912      	ldrb	r2, [r2, #4]
 8000358:	4611      	mov	r1, r2
 800035a:	2201      	movs	r2, #1
 800035c:	408a      	lsls	r2, r1
 800035e:	43d2      	mvns	r2, r2
 8000360:	4611      	mov	r1, r2
 8000362:	4a37      	ldr	r2, [pc, #220]	; (8000440 <GPIO_Init+0x198>)
 8000364:	400b      	ands	r3, r1
 8000366:	60d3      	str	r3, [r2, #12]
 8000368:	e019      	b.n	800039e <GPIO_Init+0xf6>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_RFT)
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	795b      	ldrb	r3, [r3, #5]
 800036e:	2b06      	cmp	r3, #6
 8000370:	d115      	bne.n	800039e <GPIO_Init+0xf6>
		{
			//1. Configure both FTSR and RTSr registers
			EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000372:	4b33      	ldr	r3, [pc, #204]	; (8000440 <GPIO_Init+0x198>)
 8000374:	68db      	ldr	r3, [r3, #12]
 8000376:	687a      	ldr	r2, [r7, #4]
 8000378:	7912      	ldrb	r2, [r2, #4]
 800037a:	4611      	mov	r1, r2
 800037c:	2201      	movs	r2, #1
 800037e:	408a      	lsls	r2, r1
 8000380:	4611      	mov	r1, r2
 8000382:	4a2f      	ldr	r2, [pc, #188]	; (8000440 <GPIO_Init+0x198>)
 8000384:	430b      	orrs	r3, r1
 8000386:	60d3      	str	r3, [r2, #12]

			EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000388:	4b2d      	ldr	r3, [pc, #180]	; (8000440 <GPIO_Init+0x198>)
 800038a:	689b      	ldr	r3, [r3, #8]
 800038c:	687a      	ldr	r2, [r7, #4]
 800038e:	7912      	ldrb	r2, [r2, #4]
 8000390:	4611      	mov	r1, r2
 8000392:	2201      	movs	r2, #1
 8000394:	408a      	lsls	r2, r1
 8000396:	4611      	mov	r1, r2
 8000398:	4a29      	ldr	r2, [pc, #164]	; (8000440 <GPIO_Init+0x198>)
 800039a:	430b      	orrs	r3, r1
 800039c:	6093      	str	r3, [r2, #8]
		}

		// 2. Configure the GPIO port selection in SYSCFG_EXTICR
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	791b      	ldrb	r3, [r3, #4]
 80003a2:	089b      	lsrs	r3, r3, #2
 80003a4:	b2db      	uxtb	r3, r3
 80003a6:	617b      	str	r3, [r7, #20]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	791b      	ldrb	r3, [r3, #4]
 80003ac:	f003 0303 	and.w	r3, r3, #3
 80003b0:	613b      	str	r3, [r7, #16]

		portcode = GPIOBASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	4a23      	ldr	r2, [pc, #140]	; (8000444 <GPIO_Init+0x19c>)
 80003b8:	4293      	cmp	r3, r2
 80003ba:	d057      	beq.n	800046c <GPIO_Init+0x1c4>
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	4a21      	ldr	r2, [pc, #132]	; (8000448 <GPIO_Init+0x1a0>)
 80003c2:	4293      	cmp	r3, r2
 80003c4:	d039      	beq.n	800043a <GPIO_Init+0x192>
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	4a20      	ldr	r2, [pc, #128]	; (800044c <GPIO_Init+0x1a4>)
 80003cc:	4293      	cmp	r3, r2
 80003ce:	d032      	beq.n	8000436 <GPIO_Init+0x18e>
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	4a1e      	ldr	r2, [pc, #120]	; (8000450 <GPIO_Init+0x1a8>)
 80003d6:	4293      	cmp	r3, r2
 80003d8:	d02b      	beq.n	8000432 <GPIO_Init+0x18a>
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	4a1d      	ldr	r2, [pc, #116]	; (8000454 <GPIO_Init+0x1ac>)
 80003e0:	4293      	cmp	r3, r2
 80003e2:	d024      	beq.n	800042e <GPIO_Init+0x186>
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	4a1b      	ldr	r2, [pc, #108]	; (8000458 <GPIO_Init+0x1b0>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d01d      	beq.n	800042a <GPIO_Init+0x182>
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	4a1a      	ldr	r2, [pc, #104]	; (800045c <GPIO_Init+0x1b4>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d016      	beq.n	8000426 <GPIO_Init+0x17e>
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	4a18      	ldr	r2, [pc, #96]	; (8000460 <GPIO_Init+0x1b8>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d00f      	beq.n	8000422 <GPIO_Init+0x17a>
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	4a17      	ldr	r2, [pc, #92]	; (8000464 <GPIO_Init+0x1bc>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d008      	beq.n	800041e <GPIO_Init+0x176>
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	4a15      	ldr	r2, [pc, #84]	; (8000468 <GPIO_Init+0x1c0>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d101      	bne.n	800041a <GPIO_Init+0x172>
 8000416:	2309      	movs	r3, #9
 8000418:	e029      	b.n	800046e <GPIO_Init+0x1c6>
 800041a:	2300      	movs	r3, #0
 800041c:	e027      	b.n	800046e <GPIO_Init+0x1c6>
 800041e:	2308      	movs	r3, #8
 8000420:	e025      	b.n	800046e <GPIO_Init+0x1c6>
 8000422:	2307      	movs	r3, #7
 8000424:	e023      	b.n	800046e <GPIO_Init+0x1c6>
 8000426:	2306      	movs	r3, #6
 8000428:	e021      	b.n	800046e <GPIO_Init+0x1c6>
 800042a:	2305      	movs	r3, #5
 800042c:	e01f      	b.n	800046e <GPIO_Init+0x1c6>
 800042e:	2304      	movs	r3, #4
 8000430:	e01d      	b.n	800046e <GPIO_Init+0x1c6>
 8000432:	2303      	movs	r3, #3
 8000434:	e01b      	b.n	800046e <GPIO_Init+0x1c6>
 8000436:	2302      	movs	r3, #2
 8000438:	e019      	b.n	800046e <GPIO_Init+0x1c6>
 800043a:	2301      	movs	r3, #1
 800043c:	e017      	b.n	800046e <GPIO_Init+0x1c6>
 800043e:	bf00      	nop
 8000440:	40013c00 	.word	0x40013c00
 8000444:	40020000 	.word	0x40020000
 8000448:	40020400 	.word	0x40020400
 800044c:	40020800 	.word	0x40020800
 8000450:	40020c00 	.word	0x40020c00
 8000454:	40021000 	.word	0x40021000
 8000458:	40021400 	.word	0x40021400
 800045c:	40021800 	.word	0x40021800
 8000460:	40021c00 	.word	0x40021c00
 8000464:	40022000 	.word	0x40022000
 8000468:	40022400 	.word	0x40022400
 800046c:	2300      	movs	r3, #0
 800046e:	73fb      	strb	r3, [r7, #15]
		SYSCFG_PCLK_ENABLE();
 8000470:	4b60      	ldr	r3, [pc, #384]	; (80005f4 <GPIO_Init+0x34c>)
 8000472:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000474:	4a5f      	ldr	r2, [pc, #380]	; (80005f4 <GPIO_Init+0x34c>)
 8000476:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800047a:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->SYSCFG_EXTICR[temp1] |= portcode << (temp2*4);
 800047c:	4a5e      	ldr	r2, [pc, #376]	; (80005f8 <GPIO_Init+0x350>)
 800047e:	697b      	ldr	r3, [r7, #20]
 8000480:	3302      	adds	r3, #2
 8000482:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000486:	7bf9      	ldrb	r1, [r7, #15]
 8000488:	693a      	ldr	r2, [r7, #16]
 800048a:	0092      	lsls	r2, r2, #2
 800048c:	fa01 f202 	lsl.w	r2, r1, r2
 8000490:	4959      	ldr	r1, [pc, #356]	; (80005f8 <GPIO_Init+0x350>)
 8000492:	431a      	orrs	r2, r3
 8000494:	697b      	ldr	r3, [r7, #20]
 8000496:	3302      	adds	r3, #2
 8000498:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		temp1 = temp2 = 0;
 800049c:	2300      	movs	r3, #0
 800049e:	613b      	str	r3, [r7, #16]
 80004a0:	693b      	ldr	r3, [r7, #16]
 80004a2:	617b      	str	r3, [r7, #20]

		//3. Enable the EXTI interrupt delivery using IMR
		EXTI->EXTI_IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004a4:	4b55      	ldr	r3, [pc, #340]	; (80005fc <GPIO_Init+0x354>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	687a      	ldr	r2, [r7, #4]
 80004aa:	7912      	ldrb	r2, [r2, #4]
 80004ac:	4611      	mov	r1, r2
 80004ae:	2201      	movs	r2, #1
 80004b0:	408a      	lsls	r2, r1
 80004b2:	4611      	mov	r1, r2
 80004b4:	4a51      	ldr	r2, [pc, #324]	; (80005fc <GPIO_Init+0x354>)
 80004b6:	430b      	orrs	r3, r1
 80004b8:	6013      	str	r3, [r2, #0]


	//2. Configure the speed

	//Initally clear the bit
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	6899      	ldr	r1, [r3, #8]
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	791b      	ldrb	r3, [r3, #4]
 80004c4:	461a      	mov	r2, r3
 80004c6:	2303      	movs	r3, #3
 80004c8:	4093      	lsls	r3, r2
 80004ca:	43da      	mvns	r2, r3
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	400a      	ands	r2, r1
 80004d2:	609a      	str	r2, [r3, #8]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	799b      	ldrb	r3, [r3, #6]
 80004d8:	461a      	mov	r2, r3
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	791b      	ldrb	r3, [r3, #4]
 80004de:	005b      	lsls	r3, r3, #1
 80004e0:	fa02 f303 	lsl.w	r3, r2, r3
 80004e4:	60bb      	str	r3, [r7, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	6899      	ldr	r1, [r3, #8]
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	68ba      	ldr	r2, [r7, #8]
 80004f2:	430a      	orrs	r2, r1
 80004f4:	609a      	str	r2, [r3, #8]
	temp = 0;
 80004f6:	2300      	movs	r3, #0
 80004f8:	60bb      	str	r3, [r7, #8]

	//3. Configure PuPd mode
	//Initally clear the bit
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	68d9      	ldr	r1, [r3, #12]
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	791b      	ldrb	r3, [r3, #4]
 8000504:	461a      	mov	r2, r3
 8000506:	2303      	movs	r3, #3
 8000508:	4093      	lsls	r3, r2
 800050a:	43da      	mvns	r2, r3
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	400a      	ands	r2, r1
 8000512:	60da      	str	r2, [r3, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	79db      	ldrb	r3, [r3, #7]
 8000518:	461a      	mov	r2, r3
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	791b      	ldrb	r3, [r3, #4]
 800051e:	005b      	lsls	r3, r3, #1
 8000520:	fa02 f303 	lsl.w	r3, r2, r3
 8000524:	60bb      	str	r3, [r7, #8]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	68d9      	ldr	r1, [r3, #12]
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	68ba      	ldr	r2, [r7, #8]
 8000532:	430a      	orrs	r2, r1
 8000534:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000536:	2300      	movs	r3, #0
 8000538:	60bb      	str	r3, [r7, #8]

	//4.Configure Output type
	//Initally clear the bit
	pGPIOHandle->pGPIOx->OTYPER &= ~(1U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	6859      	ldr	r1, [r3, #4]
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	791b      	ldrb	r3, [r3, #4]
 8000544:	461a      	mov	r2, r3
 8000546:	2301      	movs	r3, #1
 8000548:	4093      	lsls	r3, r2
 800054a:	43da      	mvns	r2, r3
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	400a      	ands	r2, r1
 8000552:	605a      	str	r2, [r3, #4]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	7a1b      	ldrb	r3, [r3, #8]
 8000558:	461a      	mov	r2, r3
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	791b      	ldrb	r3, [r3, #4]
 800055e:	fa02 f303 	lsl.w	r3, r2, r3
 8000562:	60bb      	str	r3, [r7, #8]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	6859      	ldr	r1, [r3, #4]
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	68ba      	ldr	r2, [r7, #8]
 8000570:	430a      	orrs	r2, r1
 8000572:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000574:	2300      	movs	r3, #0
 8000576:	60bb      	str	r3, [r7, #8]

	//5. Configure Alternate functionality type
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFUNC)
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	795b      	ldrb	r3, [r3, #5]
 800057c:	2b02      	cmp	r3, #2
 800057e:	d133      	bne.n	80005e8 <GPIO_Init+0x340>
	{

		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/8;
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	791b      	ldrb	r3, [r3, #4]
 8000584:	08db      	lsrs	r3, r3, #3
 8000586:	b2db      	uxtb	r3, r3
 8000588:	617b      	str	r3, [r7, #20]
		temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)%8;
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	791b      	ldrb	r3, [r3, #4]
 800058e:	f003 0307 	and.w	r3, r3, #7
 8000592:	613b      	str	r3, [r7, #16]

		//Initially clear the bit
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode);
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	681b      	ldr	r3, [r3, #0]
 8000598:	697a      	ldr	r2, [r7, #20]
 800059a:	3208      	adds	r2, #8
 800059c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	7a5b      	ldrb	r3, [r3, #9]
 80005a4:	43db      	mvns	r3, r3
 80005a6:	4619      	mov	r1, r3
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	4011      	ands	r1, r2
 80005ae:	697a      	ldr	r2, [r7, #20]
 80005b0:	3208      	adds	r2, #8
 80005b2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	697a      	ldr	r2, [r7, #20]
 80005bc:	3208      	adds	r2, #8
 80005be:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	7a5b      	ldrb	r3, [r3, #9]
 80005c6:	4619      	mov	r1, r3
 80005c8:	693b      	ldr	r3, [r7, #16]
 80005ca:	009b      	lsls	r3, r3, #2
 80005cc:	fa01 f303 	lsl.w	r3, r1, r3
 80005d0:	4619      	mov	r1, r3
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	4311      	orrs	r1, r2
 80005d8:	697a      	ldr	r2, [r7, #20]
 80005da:	3208      	adds	r2, #8
 80005dc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		temp1 = 0;
 80005e0:	2300      	movs	r3, #0
 80005e2:	617b      	str	r3, [r7, #20]
		temp2 = 0;
 80005e4:	2300      	movs	r3, #0
 80005e6:	613b      	str	r3, [r7, #16]
	}



}
 80005e8:	bf00      	nop
 80005ea:	371c      	adds	r7, #28
 80005ec:	46bd      	mov	sp, r7
 80005ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f2:	4770      	bx	lr
 80005f4:	40023800 	.word	0x40023800
 80005f8:	40013800 	.word	0x40013800
 80005fc:	40013c00 	.word	0x40013c00

08000600 <GPIO_PeriClockEnable>:

/*
 * PERIPHERAL CLOCK ENABLE AND DISABLE
 */
void GPIO_PeriClockEnable(GPIO_RegDef_t *pGPIOx, uint8_t EnaOrDis)
{
 8000600:	b480      	push	{r7}
 8000602:	b083      	sub	sp, #12
 8000604:	af00      	add	r7, sp, #0
 8000606:	6078      	str	r0, [r7, #4]
 8000608:	460b      	mov	r3, r1
 800060a:	70fb      	strb	r3, [r7, #3]
	if(EnaOrDis == ENABLE)
 800060c:	78fb      	ldrb	r3, [r7, #3]
 800060e:	2b01      	cmp	r3, #1
 8000610:	d16d      	bne.n	80006ee <GPIO_PeriClockEnable+0xee>
	{
	if(pGPIOx == GPIOA)
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	4a6f      	ldr	r2, [pc, #444]	; (80007d4 <GPIO_PeriClockEnable+0x1d4>)
 8000616:	4293      	cmp	r3, r2
 8000618:	d106      	bne.n	8000628 <GPIO_PeriClockEnable+0x28>
		GPIOA_PCLK_ENABLE();
 800061a:	4b6f      	ldr	r3, [pc, #444]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 800061c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800061e:	4a6e      	ldr	r2, [pc, #440]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000620:	f043 0301 	orr.w	r3, r3, #1
 8000624:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOI)
			GPIOI_PCLK_DISABLE();
		else if(pGPIOx == GPIOJ)
			GPIOJ_PCLK_DISABLE();
	}
}
 8000626:	e0cf      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOB)
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	4a6c      	ldr	r2, [pc, #432]	; (80007dc <GPIO_PeriClockEnable+0x1dc>)
 800062c:	4293      	cmp	r3, r2
 800062e:	d106      	bne.n	800063e <GPIO_PeriClockEnable+0x3e>
		GPIOB_PCLK_ENABLE();
 8000630:	4b69      	ldr	r3, [pc, #420]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000632:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000634:	4a68      	ldr	r2, [pc, #416]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000636:	f043 0302 	orr.w	r3, r3, #2
 800063a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800063c:	e0c4      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOC)
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	4a67      	ldr	r2, [pc, #412]	; (80007e0 <GPIO_PeriClockEnable+0x1e0>)
 8000642:	4293      	cmp	r3, r2
 8000644:	d106      	bne.n	8000654 <GPIO_PeriClockEnable+0x54>
		GPIOC_PCLK_ENABLE();
 8000646:	4b64      	ldr	r3, [pc, #400]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000648:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800064a:	4a63      	ldr	r2, [pc, #396]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 800064c:	f043 0304 	orr.w	r3, r3, #4
 8000650:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000652:	e0b9      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOD)
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	4a63      	ldr	r2, [pc, #396]	; (80007e4 <GPIO_PeriClockEnable+0x1e4>)
 8000658:	4293      	cmp	r3, r2
 800065a:	d106      	bne.n	800066a <GPIO_PeriClockEnable+0x6a>
		GPIOD_PCLK_ENABLE();
 800065c:	4b5e      	ldr	r3, [pc, #376]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 800065e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000660:	4a5d      	ldr	r2, [pc, #372]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000662:	f043 0308 	orr.w	r3, r3, #8
 8000666:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000668:	e0ae      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOE)
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	4a5e      	ldr	r2, [pc, #376]	; (80007e8 <GPIO_PeriClockEnable+0x1e8>)
 800066e:	4293      	cmp	r3, r2
 8000670:	d106      	bne.n	8000680 <GPIO_PeriClockEnable+0x80>
		GPIOE_PCLK_ENABLE();
 8000672:	4b59      	ldr	r3, [pc, #356]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000674:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000676:	4a58      	ldr	r2, [pc, #352]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000678:	f043 0310 	orr.w	r3, r3, #16
 800067c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800067e:	e0a3      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOF)
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	4a5a      	ldr	r2, [pc, #360]	; (80007ec <GPIO_PeriClockEnable+0x1ec>)
 8000684:	4293      	cmp	r3, r2
 8000686:	d106      	bne.n	8000696 <GPIO_PeriClockEnable+0x96>
		GPIOF_PCLK_ENABLE();
 8000688:	4b53      	ldr	r3, [pc, #332]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 800068a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800068c:	4a52      	ldr	r2, [pc, #328]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 800068e:	f043 0320 	orr.w	r3, r3, #32
 8000692:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000694:	e098      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOG)
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	4a55      	ldr	r2, [pc, #340]	; (80007f0 <GPIO_PeriClockEnable+0x1f0>)
 800069a:	4293      	cmp	r3, r2
 800069c:	d106      	bne.n	80006ac <GPIO_PeriClockEnable+0xac>
		GPIOG_PCLK_ENABLE();
 800069e:	4b4e      	ldr	r3, [pc, #312]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80006a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006a2:	4a4d      	ldr	r2, [pc, #308]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80006a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80006a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006aa:	e08d      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOH)
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	4a51      	ldr	r2, [pc, #324]	; (80007f4 <GPIO_PeriClockEnable+0x1f4>)
 80006b0:	4293      	cmp	r3, r2
 80006b2:	d106      	bne.n	80006c2 <GPIO_PeriClockEnable+0xc2>
		GPIOH_PCLK_ENABLE();
 80006b4:	4b48      	ldr	r3, [pc, #288]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80006b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006b8:	4a47      	ldr	r2, [pc, #284]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80006ba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80006be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006c0:	e082      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOI)
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	4a4c      	ldr	r2, [pc, #304]	; (80007f8 <GPIO_PeriClockEnable+0x1f8>)
 80006c6:	4293      	cmp	r3, r2
 80006c8:	d106      	bne.n	80006d8 <GPIO_PeriClockEnable+0xd8>
		GPIOI_PCLK_ENABLE();
 80006ca:	4b43      	ldr	r3, [pc, #268]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80006cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006ce:	4a42      	ldr	r2, [pc, #264]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80006d0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80006d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006d6:	e077      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOJ)
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	4a48      	ldr	r2, [pc, #288]	; (80007fc <GPIO_PeriClockEnable+0x1fc>)
 80006dc:	4293      	cmp	r3, r2
 80006de:	d173      	bne.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
		GPIOJ_PCLK_ENABLE();
 80006e0:	4b3d      	ldr	r3, [pc, #244]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80006e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006e4:	4a3c      	ldr	r2, [pc, #240]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80006e6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80006ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006ec:	e06c      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
		if(pGPIOx == GPIOA)
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	4a38      	ldr	r2, [pc, #224]	; (80007d4 <GPIO_PeriClockEnable+0x1d4>)
 80006f2:	4293      	cmp	r3, r2
 80006f4:	d106      	bne.n	8000704 <GPIO_PeriClockEnable+0x104>
			GPIOA_PCLK_DISABLE();
 80006f6:	4b38      	ldr	r3, [pc, #224]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80006f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006fa:	4a37      	ldr	r2, [pc, #220]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80006fc:	f023 0301 	bic.w	r3, r3, #1
 8000700:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000702:	e061      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOB)
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	4a35      	ldr	r2, [pc, #212]	; (80007dc <GPIO_PeriClockEnable+0x1dc>)
 8000708:	4293      	cmp	r3, r2
 800070a:	d106      	bne.n	800071a <GPIO_PeriClockEnable+0x11a>
			GPIOB_PCLK_DISABLE();
 800070c:	4b32      	ldr	r3, [pc, #200]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 800070e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000710:	4a31      	ldr	r2, [pc, #196]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000712:	f023 0302 	bic.w	r3, r3, #2
 8000716:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000718:	e056      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOC)
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	4a30      	ldr	r2, [pc, #192]	; (80007e0 <GPIO_PeriClockEnable+0x1e0>)
 800071e:	4293      	cmp	r3, r2
 8000720:	d106      	bne.n	8000730 <GPIO_PeriClockEnable+0x130>
			GPIOC_PCLK_DISABLE();
 8000722:	4b2d      	ldr	r3, [pc, #180]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000724:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000726:	4a2c      	ldr	r2, [pc, #176]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000728:	f023 0304 	bic.w	r3, r3, #4
 800072c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800072e:	e04b      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOD)
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	4a2c      	ldr	r2, [pc, #176]	; (80007e4 <GPIO_PeriClockEnable+0x1e4>)
 8000734:	4293      	cmp	r3, r2
 8000736:	d106      	bne.n	8000746 <GPIO_PeriClockEnable+0x146>
			GPIOD_PCLK_DISABLE();
 8000738:	4b27      	ldr	r3, [pc, #156]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 800073a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800073c:	4a26      	ldr	r2, [pc, #152]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 800073e:	f023 0308 	bic.w	r3, r3, #8
 8000742:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000744:	e040      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOE)
 8000746:	687b      	ldr	r3, [r7, #4]
 8000748:	4a27      	ldr	r2, [pc, #156]	; (80007e8 <GPIO_PeriClockEnable+0x1e8>)
 800074a:	4293      	cmp	r3, r2
 800074c:	d106      	bne.n	800075c <GPIO_PeriClockEnable+0x15c>
			GPIOE_PCLK_DISABLE();
 800074e:	4b22      	ldr	r3, [pc, #136]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000750:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000752:	4a21      	ldr	r2, [pc, #132]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000754:	f023 0310 	bic.w	r3, r3, #16
 8000758:	6313      	str	r3, [r2, #48]	; 0x30
}
 800075a:	e035      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOF)
 800075c:	687b      	ldr	r3, [r7, #4]
 800075e:	4a23      	ldr	r2, [pc, #140]	; (80007ec <GPIO_PeriClockEnable+0x1ec>)
 8000760:	4293      	cmp	r3, r2
 8000762:	d106      	bne.n	8000772 <GPIO_PeriClockEnable+0x172>
			GPIOF_PCLK_DISABLE();
 8000764:	4b1c      	ldr	r3, [pc, #112]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000766:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000768:	4a1b      	ldr	r2, [pc, #108]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 800076a:	f023 0320 	bic.w	r3, r3, #32
 800076e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000770:	e02a      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOG)
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	4a1e      	ldr	r2, [pc, #120]	; (80007f0 <GPIO_PeriClockEnable+0x1f0>)
 8000776:	4293      	cmp	r3, r2
 8000778:	d106      	bne.n	8000788 <GPIO_PeriClockEnable+0x188>
			GPIOG_PCLK_DISABLE();
 800077a:	4b17      	ldr	r3, [pc, #92]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 800077c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800077e:	4a16      	ldr	r2, [pc, #88]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000780:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000784:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000786:	e01f      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOH)
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	4a1a      	ldr	r2, [pc, #104]	; (80007f4 <GPIO_PeriClockEnable+0x1f4>)
 800078c:	4293      	cmp	r3, r2
 800078e:	d106      	bne.n	800079e <GPIO_PeriClockEnable+0x19e>
			GPIOH_PCLK_DISABLE();
 8000790:	4b11      	ldr	r3, [pc, #68]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000792:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000794:	4a10      	ldr	r2, [pc, #64]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 8000796:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800079a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800079c:	e014      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOI)
 800079e:	687b      	ldr	r3, [r7, #4]
 80007a0:	4a15      	ldr	r2, [pc, #84]	; (80007f8 <GPIO_PeriClockEnable+0x1f8>)
 80007a2:	4293      	cmp	r3, r2
 80007a4:	d106      	bne.n	80007b4 <GPIO_PeriClockEnable+0x1b4>
			GPIOI_PCLK_DISABLE();
 80007a6:	4b0c      	ldr	r3, [pc, #48]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80007a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007aa:	4a0b      	ldr	r2, [pc, #44]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80007ac:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80007b0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007b2:	e009      	b.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOJ)
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	4a11      	ldr	r2, [pc, #68]	; (80007fc <GPIO_PeriClockEnable+0x1fc>)
 80007b8:	4293      	cmp	r3, r2
 80007ba:	d105      	bne.n	80007c8 <GPIO_PeriClockEnable+0x1c8>
			GPIOJ_PCLK_DISABLE();
 80007bc:	4b06      	ldr	r3, [pc, #24]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80007be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007c0:	4a05      	ldr	r2, [pc, #20]	; (80007d8 <GPIO_PeriClockEnable+0x1d8>)
 80007c2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80007c6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007c8:	bf00      	nop
 80007ca:	370c      	adds	r7, #12
 80007cc:	46bd      	mov	sp, r7
 80007ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007d2:	4770      	bx	lr
 80007d4:	40020000 	.word	0x40020000
 80007d8:	40023800 	.word	0x40023800
 80007dc:	40020400 	.word	0x40020400
 80007e0:	40020800 	.word	0x40020800
 80007e4:	40020c00 	.word	0x40020c00
 80007e8:	40021000 	.word	0x40021000
 80007ec:	40021400 	.word	0x40021400
 80007f0:	40021800 	.word	0x40021800
 80007f4:	40021c00 	.word	0x40021c00
 80007f8:	40022000 	.word	0x40022000
 80007fc:	40022400 	.word	0x40022400

08000800 <GPIO_TogglePin>:

/*
 * TOGGLE PIN
 */
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx,  uint8_t PinNumber)
{
 8000800:	b480      	push	{r7}
 8000802:	b083      	sub	sp, #12
 8000804:	af00      	add	r7, sp, #0
 8000806:	6078      	str	r0, [r7, #4]
 8000808:	460b      	mov	r3, r1
 800080a:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 800080c:	687b      	ldr	r3, [r7, #4]
 800080e:	695b      	ldr	r3, [r3, #20]
 8000810:	78fa      	ldrb	r2, [r7, #3]
 8000812:	2101      	movs	r1, #1
 8000814:	fa01 f202 	lsl.w	r2, r1, r2
 8000818:	405a      	eors	r2, r3
 800081a:	687b      	ldr	r3, [r7, #4]
 800081c:	615a      	str	r2, [r3, #20]
}
 800081e:	bf00      	nop
 8000820:	370c      	adds	r7, #12
 8000822:	46bd      	mov	sp, r7
 8000824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000828:	4770      	bx	lr
	...

0800082c <__libc_init_array>:
 800082c:	b570      	push	{r4, r5, r6, lr}
 800082e:	4d0d      	ldr	r5, [pc, #52]	; (8000864 <__libc_init_array+0x38>)
 8000830:	4c0d      	ldr	r4, [pc, #52]	; (8000868 <__libc_init_array+0x3c>)
 8000832:	1b64      	subs	r4, r4, r5
 8000834:	10a4      	asrs	r4, r4, #2
 8000836:	2600      	movs	r6, #0
 8000838:	42a6      	cmp	r6, r4
 800083a:	d109      	bne.n	8000850 <__libc_init_array+0x24>
 800083c:	4d0b      	ldr	r5, [pc, #44]	; (800086c <__libc_init_array+0x40>)
 800083e:	4c0c      	ldr	r4, [pc, #48]	; (8000870 <__libc_init_array+0x44>)
 8000840:	f000 f818 	bl	8000874 <_init>
 8000844:	1b64      	subs	r4, r4, r5
 8000846:	10a4      	asrs	r4, r4, #2
 8000848:	2600      	movs	r6, #0
 800084a:	42a6      	cmp	r6, r4
 800084c:	d105      	bne.n	800085a <__libc_init_array+0x2e>
 800084e:	bd70      	pop	{r4, r5, r6, pc}
 8000850:	f855 3b04 	ldr.w	r3, [r5], #4
 8000854:	4798      	blx	r3
 8000856:	3601      	adds	r6, #1
 8000858:	e7ee      	b.n	8000838 <__libc_init_array+0xc>
 800085a:	f855 3b04 	ldr.w	r3, [r5], #4
 800085e:	4798      	blx	r3
 8000860:	3601      	adds	r6, #1
 8000862:	e7f2      	b.n	800084a <__libc_init_array+0x1e>
 8000864:	0800088c 	.word	0x0800088c
 8000868:	0800088c 	.word	0x0800088c
 800086c:	0800088c 	.word	0x0800088c
 8000870:	08000890 	.word	0x08000890

08000874 <_init>:
 8000874:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000876:	bf00      	nop
 8000878:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800087a:	bc08      	pop	{r3}
 800087c:	469e      	mov	lr, r3
 800087e:	4770      	bx	lr

08000880 <_fini>:
 8000880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000882:	bf00      	nop
 8000884:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000886:	bc08      	pop	{r3}
 8000888:	469e      	mov	lr, r3
 800088a:	4770      	bx	lr
