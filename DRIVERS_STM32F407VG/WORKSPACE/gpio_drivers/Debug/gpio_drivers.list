
gpio_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000580  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000728  08000730  00010730  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000728  08000728  00010730  2**0
                  CONTENTS
  4 .ARM          00000000  08000728  08000728  00010730  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000728  08000730  00010730  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000728  08000728  00010728  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800072c  0800072c  0001072c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010730  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000730  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000730  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010730  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001136  00000000  00000000  00010760  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002ca  00000000  00000000  00011896  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  00011b60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00011c18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002206  00000000  00000000  00011ca8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000eac  00000000  00000000  00013eae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000096cf  00000000  00000000  00014d5a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001e429  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  0001e47c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000710 	.word	0x08000710

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000710 	.word	0x08000710

080001e8 <main>:
#include<stdio.h>
#include<gpio.h>


int main()
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b086      	sub	sp, #24
 80001ec:	af00      	add	r7, sp, #0
	GPIOHandle_t pGPIOLED, pGPIOButton;

	// LED at PD14
	pGPIOLED.pGPIOx = GPIOD;
 80001ee:	4b1b      	ldr	r3, [pc, #108]	; (800025c <main+0x74>)
 80001f0:	60fb      	str	r3, [r7, #12]
	pGPIOLED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PINNUMBER_14;
 80001f2:	230e      	movs	r3, #14
 80001f4:	743b      	strb	r3, [r7, #16]
	pGPIOLED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 80001f6:	2301      	movs	r3, #1
 80001f8:	747b      	strb	r3, [r7, #17]
	pGPIOLED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_MEDIUM;
 80001fa:	2301      	movs	r3, #1
 80001fc:	74bb      	strb	r3, [r7, #18]
	pGPIOLED.GPIO_PinConfig.GPIO_PinOPType = GPIO_OTYPE_PUSHPULL;
 80001fe:	2300      	movs	r3, #0
 8000200:	753b      	strb	r3, [r7, #20]
	pGPIOLED.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PUPDTYPE_NONE;
 8000202:	2300      	movs	r3, #0
 8000204:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockEnable(GPIOD, ENABLE);
 8000206:	2101      	movs	r1, #1
 8000208:	4814      	ldr	r0, [pc, #80]	; (800025c <main+0x74>)
 800020a:	f000 f931 	bl	8000470 <GPIO_PeriClockEnable>
	GPIO_Init(&pGPIOLED);
 800020e:	f107 030c 	add.w	r3, r7, #12
 8000212:	4618      	mov	r0, r3
 8000214:	f000 f866 	bl	80002e4 <GPIO_Init>

	//Button at PB12
	pGPIOButton.pGPIOx = GPIOB;
 8000218:	4b11      	ldr	r3, [pc, #68]	; (8000260 <main+0x78>)
 800021a:	603b      	str	r3, [r7, #0]
	pGPIOButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PINNUMBER_12;
 800021c:	230c      	movs	r3, #12
 800021e:	713b      	strb	r3, [r7, #4]
	pGPIOButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_INPUT;
 8000220:	2300      	movs	r3, #0
 8000222:	717b      	strb	r3, [r7, #5]
	pGPIOButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OSPEED_MEDIUM;
 8000224:	2301      	movs	r3, #1
 8000226:	71bb      	strb	r3, [r7, #6]
	pGPIOButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PUPDTYPE_NONE;
 8000228:	2300      	movs	r3, #0
 800022a:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockEnable(GPIOB, ENABLE);
 800022c:	2101      	movs	r1, #1
 800022e:	480c      	ldr	r0, [pc, #48]	; (8000260 <main+0x78>)
 8000230:	f000 f91e 	bl	8000470 <GPIO_PeriClockEnable>
	GPIO_Init(&pGPIOButton);
 8000234:	463b      	mov	r3, r7
 8000236:	4618      	mov	r0, r3
 8000238:	f000 f854 	bl	80002e4 <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadPin(GPIOB, GPIO_PINNUMBER_12) == BUTTON_PRESSED)
 800023c:	210c      	movs	r1, #12
 800023e:	4808      	ldr	r0, [pc, #32]	; (8000260 <main+0x78>)
 8000240:	f000 fa16 	bl	8000670 <GPIO_ReadPin>
 8000244:	4603      	mov	r3, r0
 8000246:	2b01      	cmp	r3, #1
 8000248:	d1f8      	bne.n	800023c <main+0x54>
		{
			delay(90000);
 800024a:	4806      	ldr	r0, [pc, #24]	; (8000264 <main+0x7c>)
 800024c:	f000 f835 	bl	80002ba <delay>
			GPIO_TogglePin(GPIOD, GPIO_PINNUMBER_14);
 8000250:	210e      	movs	r1, #14
 8000252:	4802      	ldr	r0, [pc, #8]	; (800025c <main+0x74>)
 8000254:	f000 fa22 	bl	800069c <GPIO_TogglePin>
		if(GPIO_ReadPin(GPIOB, GPIO_PINNUMBER_12) == BUTTON_PRESSED)
 8000258:	e7f0      	b.n	800023c <main+0x54>
 800025a:	bf00      	nop
 800025c:	40020c00 	.word	0x40020c00
 8000260:	40020400 	.word	0x40020400
 8000264:	00015f90 	.word	0x00015f90

08000268 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000268:	480d      	ldr	r0, [pc, #52]	; (80002a0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800026a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800026c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000270:	480c      	ldr	r0, [pc, #48]	; (80002a4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000272:	490d      	ldr	r1, [pc, #52]	; (80002a8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000274:	4a0d      	ldr	r2, [pc, #52]	; (80002ac <LoopForever+0xe>)
  movs r3, #0
 8000276:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000278:	e002      	b.n	8000280 <LoopCopyDataInit>

0800027a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800027c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800027e:	3304      	adds	r3, #4

08000280 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000280:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000282:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000284:	d3f9      	bcc.n	800027a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000286:	4a0a      	ldr	r2, [pc, #40]	; (80002b0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000288:	4c0a      	ldr	r4, [pc, #40]	; (80002b4 <LoopForever+0x16>)
  movs r3, #0
 800028a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800028c:	e001      	b.n	8000292 <LoopFillZerobss>

0800028e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800028e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000290:	3204      	adds	r2, #4

08000292 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000292:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000294:	d3fb      	bcc.n	800028e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000296:	f000 fa17 	bl	80006c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800029a:	f7ff ffa5 	bl	80001e8 <main>

0800029e <LoopForever>:

LoopForever:
    b LoopForever
 800029e:	e7fe      	b.n	800029e <LoopForever>
  ldr   r0, =_estack
 80002a0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002a4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002a8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002ac:	08000730 	.word	0x08000730
  ldr r2, =_sbss
 80002b0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b4:	2000001c 	.word	0x2000001c

080002b8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002b8:	e7fe      	b.n	80002b8 <ADC_IRQHandler>

080002ba <delay>:

/*
 * ddelay function
 */
void delay(uint32_t delayVal)
{
 80002ba:	b480      	push	{r7}
 80002bc:	b085      	sub	sp, #20
 80002be:	af00      	add	r7, sp, #0
 80002c0:	6078      	str	r0, [r7, #4]
	for(int i =0; i<delayVal;i++);
 80002c2:	2300      	movs	r3, #0
 80002c4:	60fb      	str	r3, [r7, #12]
 80002c6:	e002      	b.n	80002ce <delay+0x14>
 80002c8:	68fb      	ldr	r3, [r7, #12]
 80002ca:	3301      	adds	r3, #1
 80002cc:	60fb      	str	r3, [r7, #12]
 80002ce:	68fb      	ldr	r3, [r7, #12]
 80002d0:	687a      	ldr	r2, [r7, #4]
 80002d2:	429a      	cmp	r2, r3
 80002d4:	d8f8      	bhi.n	80002c8 <delay+0xe>
}
 80002d6:	bf00      	nop
 80002d8:	bf00      	nop
 80002da:	3714      	adds	r7, #20
 80002dc:	46bd      	mov	sp, r7
 80002de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e2:	4770      	bx	lr

080002e4 <GPIO_Init>:

/*
 * INITILIZATION AND DEINITILIZATION
 */
void GPIO_Init(GPIOHandle_t *pGPIOHandle)
{
 80002e4:	b480      	push	{r7}
 80002e6:	b087      	sub	sp, #28
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	6078      	str	r0, [r7, #4]

	uint32_t temp;

	//1. Configure the mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	795b      	ldrb	r3, [r3, #5]
 80002f0:	2b03      	cmp	r3, #3
 80002f2:	d81f      	bhi.n	8000334 <GPIO_Init+0x50>
	{
		//Non interrupt mode

		//Initilly clear the bits
		pGPIOHandle->pGPIOx->MODER &= ~(0x3U << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	6819      	ldr	r1, [r3, #0]
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	791b      	ldrb	r3, [r3, #4]
 80002fe:	461a      	mov	r2, r3
 8000300:	2303      	movs	r3, #3
 8000302:	4093      	lsls	r3, r2
 8000304:	43da      	mvns	r2, r3
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	400a      	ands	r2, r1
 800030c:	601a      	str	r2, [r3, #0]
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<(2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	795b      	ldrb	r3, [r3, #5]
 8000312:	461a      	mov	r2, r3
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	791b      	ldrb	r3, [r3, #4]
 8000318:	005b      	lsls	r3, r3, #1
 800031a:	fa02 f303 	lsl.w	r3, r2, r3
 800031e:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	6819      	ldr	r1, [r3, #0]
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	697a      	ldr	r2, [r7, #20]
 800032c:	430a      	orrs	r2, r1
 800032e:	601a      	str	r2, [r3, #0]
		temp = 0;
 8000330:	2300      	movs	r3, #0
 8000332:	617b      	str	r3, [r7, #20]


	//2. Configure the speed

	//Initally clear the bit
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	6899      	ldr	r1, [r3, #8]
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	791b      	ldrb	r3, [r3, #4]
 800033e:	461a      	mov	r2, r3
 8000340:	2303      	movs	r3, #3
 8000342:	4093      	lsls	r3, r2
 8000344:	43da      	mvns	r2, r3
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	400a      	ands	r2, r1
 800034c:	609a      	str	r2, [r3, #8]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	799b      	ldrb	r3, [r3, #6]
 8000352:	461a      	mov	r2, r3
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	791b      	ldrb	r3, [r3, #4]
 8000358:	005b      	lsls	r3, r3, #1
 800035a:	fa02 f303 	lsl.w	r3, r2, r3
 800035e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	6899      	ldr	r1, [r3, #8]
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	697a      	ldr	r2, [r7, #20]
 800036c:	430a      	orrs	r2, r1
 800036e:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000370:	2300      	movs	r3, #0
 8000372:	617b      	str	r3, [r7, #20]

	//3. Configure PuPd mode
	//Initally clear the bit
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	681b      	ldr	r3, [r3, #0]
 8000378:	68d9      	ldr	r1, [r3, #12]
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	791b      	ldrb	r3, [r3, #4]
 800037e:	461a      	mov	r2, r3
 8000380:	2303      	movs	r3, #3
 8000382:	4093      	lsls	r3, r2
 8000384:	43da      	mvns	r2, r3
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	400a      	ands	r2, r1
 800038c:	60da      	str	r2, [r3, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	79db      	ldrb	r3, [r3, #7]
 8000392:	461a      	mov	r2, r3
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	791b      	ldrb	r3, [r3, #4]
 8000398:	005b      	lsls	r3, r3, #1
 800039a:	fa02 f303 	lsl.w	r3, r2, r3
 800039e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	68d9      	ldr	r1, [r3, #12]
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	697a      	ldr	r2, [r7, #20]
 80003ac:	430a      	orrs	r2, r1
 80003ae:	60da      	str	r2, [r3, #12]
	temp = 0;
 80003b0:	2300      	movs	r3, #0
 80003b2:	617b      	str	r3, [r7, #20]

	//4.Configure Output type
	//Initally clear the bit
	pGPIOHandle->pGPIOx->OTYPER &= ~(1U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	6859      	ldr	r1, [r3, #4]
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	791b      	ldrb	r3, [r3, #4]
 80003be:	461a      	mov	r2, r3
 80003c0:	2301      	movs	r3, #1
 80003c2:	4093      	lsls	r3, r2
 80003c4:	43da      	mvns	r2, r3
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	400a      	ands	r2, r1
 80003cc:	605a      	str	r2, [r3, #4]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	7a1b      	ldrb	r3, [r3, #8]
 80003d2:	461a      	mov	r2, r3
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	791b      	ldrb	r3, [r3, #4]
 80003d8:	fa02 f303 	lsl.w	r3, r2, r3
 80003dc:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	6859      	ldr	r1, [r3, #4]
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	697a      	ldr	r2, [r7, #20]
 80003ea:	430a      	orrs	r2, r1
 80003ec:	605a      	str	r2, [r3, #4]
	temp = 0;
 80003ee:	2300      	movs	r3, #0
 80003f0:	617b      	str	r3, [r7, #20]

	//5. Configure Alternate functionality type
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFUNC)
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	795b      	ldrb	r3, [r3, #5]
 80003f6:	2b02      	cmp	r3, #2
 80003f8:	d133      	bne.n	8000462 <GPIO_Init+0x17e>
	{
		uint32_t temp1, temp2;
		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/8;
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	791b      	ldrb	r3, [r3, #4]
 80003fe:	08db      	lsrs	r3, r3, #3
 8000400:	b2db      	uxtb	r3, r3
 8000402:	613b      	str	r3, [r7, #16]
		temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)%8;
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	791b      	ldrb	r3, [r3, #4]
 8000408:	f003 0307 	and.w	r3, r3, #7
 800040c:	60fb      	str	r3, [r7, #12]

		//Initially clear the bit
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode);
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	693a      	ldr	r2, [r7, #16]
 8000414:	3208      	adds	r2, #8
 8000416:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	7a5b      	ldrb	r3, [r3, #9]
 800041e:	43db      	mvns	r3, r3
 8000420:	4619      	mov	r1, r3
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	681b      	ldr	r3, [r3, #0]
 8000426:	4011      	ands	r1, r2
 8000428:	693a      	ldr	r2, [r7, #16]
 800042a:	3208      	adds	r2, #8
 800042c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	693a      	ldr	r2, [r7, #16]
 8000436:	3208      	adds	r2, #8
 8000438:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	7a5b      	ldrb	r3, [r3, #9]
 8000440:	4619      	mov	r1, r3
 8000442:	68fb      	ldr	r3, [r7, #12]
 8000444:	009b      	lsls	r3, r3, #2
 8000446:	fa01 f303 	lsl.w	r3, r1, r3
 800044a:	4619      	mov	r1, r3
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	4311      	orrs	r1, r2
 8000452:	693a      	ldr	r2, [r7, #16]
 8000454:	3208      	adds	r2, #8
 8000456:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		temp1 = 0;
 800045a:	2300      	movs	r3, #0
 800045c:	613b      	str	r3, [r7, #16]
		temp2 = 0;
 800045e:	2300      	movs	r3, #0
 8000460:	60fb      	str	r3, [r7, #12]
	}



}
 8000462:	bf00      	nop
 8000464:	371c      	adds	r7, #28
 8000466:	46bd      	mov	sp, r7
 8000468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046c:	4770      	bx	lr
	...

08000470 <GPIO_PeriClockEnable>:

/*
 * PERIPHERAL CLOCK ENABLE AND DISABLE
 */
void GPIO_PeriClockEnable(GPIO_RegDef_t *pGPIOx, uint8_t EnaOrDis)
{
 8000470:	b480      	push	{r7}
 8000472:	b083      	sub	sp, #12
 8000474:	af00      	add	r7, sp, #0
 8000476:	6078      	str	r0, [r7, #4]
 8000478:	460b      	mov	r3, r1
 800047a:	70fb      	strb	r3, [r7, #3]
	if(EnaOrDis == ENABLE)
 800047c:	78fb      	ldrb	r3, [r7, #3]
 800047e:	2b01      	cmp	r3, #1
 8000480:	d16d      	bne.n	800055e <GPIO_PeriClockEnable+0xee>
	{
	if(pGPIOx == GPIOA)
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	4a6f      	ldr	r2, [pc, #444]	; (8000644 <GPIO_PeriClockEnable+0x1d4>)
 8000486:	4293      	cmp	r3, r2
 8000488:	d106      	bne.n	8000498 <GPIO_PeriClockEnable+0x28>
		GPIOA_PCLK_ENABLE();
 800048a:	4b6f      	ldr	r3, [pc, #444]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 800048c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800048e:	4a6e      	ldr	r2, [pc, #440]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000490:	f043 0301 	orr.w	r3, r3, #1
 8000494:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOI)
			GPIOI_PCLK_DISABLE();
		else if(pGPIOx == GPIOJ)
			GPIOJ_PCLK_DISABLE();
	}
}
 8000496:	e0cf      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOB)
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	4a6c      	ldr	r2, [pc, #432]	; (800064c <GPIO_PeriClockEnable+0x1dc>)
 800049c:	4293      	cmp	r3, r2
 800049e:	d106      	bne.n	80004ae <GPIO_PeriClockEnable+0x3e>
		GPIOB_PCLK_ENABLE();
 80004a0:	4b69      	ldr	r3, [pc, #420]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80004a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004a4:	4a68      	ldr	r2, [pc, #416]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80004a6:	f043 0302 	orr.w	r3, r3, #2
 80004aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004ac:	e0c4      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOC)
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	4a67      	ldr	r2, [pc, #412]	; (8000650 <GPIO_PeriClockEnable+0x1e0>)
 80004b2:	4293      	cmp	r3, r2
 80004b4:	d106      	bne.n	80004c4 <GPIO_PeriClockEnable+0x54>
		GPIOC_PCLK_ENABLE();
 80004b6:	4b64      	ldr	r3, [pc, #400]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80004b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ba:	4a63      	ldr	r2, [pc, #396]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80004bc:	f043 0304 	orr.w	r3, r3, #4
 80004c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004c2:	e0b9      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOD)
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	4a63      	ldr	r2, [pc, #396]	; (8000654 <GPIO_PeriClockEnable+0x1e4>)
 80004c8:	4293      	cmp	r3, r2
 80004ca:	d106      	bne.n	80004da <GPIO_PeriClockEnable+0x6a>
		GPIOD_PCLK_ENABLE();
 80004cc:	4b5e      	ldr	r3, [pc, #376]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80004ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004d0:	4a5d      	ldr	r2, [pc, #372]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80004d2:	f043 0308 	orr.w	r3, r3, #8
 80004d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004d8:	e0ae      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOE)
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	4a5e      	ldr	r2, [pc, #376]	; (8000658 <GPIO_PeriClockEnable+0x1e8>)
 80004de:	4293      	cmp	r3, r2
 80004e0:	d106      	bne.n	80004f0 <GPIO_PeriClockEnable+0x80>
		GPIOE_PCLK_ENABLE();
 80004e2:	4b59      	ldr	r3, [pc, #356]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80004e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004e6:	4a58      	ldr	r2, [pc, #352]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80004e8:	f043 0310 	orr.w	r3, r3, #16
 80004ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004ee:	e0a3      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOF)
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	4a5a      	ldr	r2, [pc, #360]	; (800065c <GPIO_PeriClockEnable+0x1ec>)
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d106      	bne.n	8000506 <GPIO_PeriClockEnable+0x96>
		GPIOF_PCLK_ENABLE();
 80004f8:	4b53      	ldr	r3, [pc, #332]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80004fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004fc:	4a52      	ldr	r2, [pc, #328]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80004fe:	f043 0320 	orr.w	r3, r3, #32
 8000502:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000504:	e098      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOG)
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	4a55      	ldr	r2, [pc, #340]	; (8000660 <GPIO_PeriClockEnable+0x1f0>)
 800050a:	4293      	cmp	r3, r2
 800050c:	d106      	bne.n	800051c <GPIO_PeriClockEnable+0xac>
		GPIOG_PCLK_ENABLE();
 800050e:	4b4e      	ldr	r3, [pc, #312]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000510:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000512:	4a4d      	ldr	r2, [pc, #308]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000514:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000518:	6313      	str	r3, [r2, #48]	; 0x30
}
 800051a:	e08d      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOH)
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	4a51      	ldr	r2, [pc, #324]	; (8000664 <GPIO_PeriClockEnable+0x1f4>)
 8000520:	4293      	cmp	r3, r2
 8000522:	d106      	bne.n	8000532 <GPIO_PeriClockEnable+0xc2>
		GPIOH_PCLK_ENABLE();
 8000524:	4b48      	ldr	r3, [pc, #288]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000526:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000528:	4a47      	ldr	r2, [pc, #284]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 800052a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800052e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000530:	e082      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOI)
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	4a4c      	ldr	r2, [pc, #304]	; (8000668 <GPIO_PeriClockEnable+0x1f8>)
 8000536:	4293      	cmp	r3, r2
 8000538:	d106      	bne.n	8000548 <GPIO_PeriClockEnable+0xd8>
		GPIOI_PCLK_ENABLE();
 800053a:	4b43      	ldr	r3, [pc, #268]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 800053c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800053e:	4a42      	ldr	r2, [pc, #264]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000540:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000544:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000546:	e077      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
	else if(pGPIOx == GPIOJ)
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	4a48      	ldr	r2, [pc, #288]	; (800066c <GPIO_PeriClockEnable+0x1fc>)
 800054c:	4293      	cmp	r3, r2
 800054e:	d173      	bne.n	8000638 <GPIO_PeriClockEnable+0x1c8>
		GPIOJ_PCLK_ENABLE();
 8000550:	4b3d      	ldr	r3, [pc, #244]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000552:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000554:	4a3c      	ldr	r2, [pc, #240]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000556:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800055a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800055c:	e06c      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
		if(pGPIOx == GPIOA)
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	4a38      	ldr	r2, [pc, #224]	; (8000644 <GPIO_PeriClockEnable+0x1d4>)
 8000562:	4293      	cmp	r3, r2
 8000564:	d106      	bne.n	8000574 <GPIO_PeriClockEnable+0x104>
			GPIOA_PCLK_DISABLE();
 8000566:	4b38      	ldr	r3, [pc, #224]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000568:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800056a:	4a37      	ldr	r2, [pc, #220]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 800056c:	f023 0301 	bic.w	r3, r3, #1
 8000570:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000572:	e061      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOB)
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	4a35      	ldr	r2, [pc, #212]	; (800064c <GPIO_PeriClockEnable+0x1dc>)
 8000578:	4293      	cmp	r3, r2
 800057a:	d106      	bne.n	800058a <GPIO_PeriClockEnable+0x11a>
			GPIOB_PCLK_DISABLE();
 800057c:	4b32      	ldr	r3, [pc, #200]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 800057e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000580:	4a31      	ldr	r2, [pc, #196]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000582:	f023 0302 	bic.w	r3, r3, #2
 8000586:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000588:	e056      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOC)
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	4a30      	ldr	r2, [pc, #192]	; (8000650 <GPIO_PeriClockEnable+0x1e0>)
 800058e:	4293      	cmp	r3, r2
 8000590:	d106      	bne.n	80005a0 <GPIO_PeriClockEnable+0x130>
			GPIOC_PCLK_DISABLE();
 8000592:	4b2d      	ldr	r3, [pc, #180]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000594:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000596:	4a2c      	ldr	r2, [pc, #176]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000598:	f023 0304 	bic.w	r3, r3, #4
 800059c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800059e:	e04b      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOD)
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	4a2c      	ldr	r2, [pc, #176]	; (8000654 <GPIO_PeriClockEnable+0x1e4>)
 80005a4:	4293      	cmp	r3, r2
 80005a6:	d106      	bne.n	80005b6 <GPIO_PeriClockEnable+0x146>
			GPIOD_PCLK_DISABLE();
 80005a8:	4b27      	ldr	r3, [pc, #156]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80005aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005ac:	4a26      	ldr	r2, [pc, #152]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80005ae:	f023 0308 	bic.w	r3, r3, #8
 80005b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005b4:	e040      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOE)
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	4a27      	ldr	r2, [pc, #156]	; (8000658 <GPIO_PeriClockEnable+0x1e8>)
 80005ba:	4293      	cmp	r3, r2
 80005bc:	d106      	bne.n	80005cc <GPIO_PeriClockEnable+0x15c>
			GPIOE_PCLK_DISABLE();
 80005be:	4b22      	ldr	r3, [pc, #136]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80005c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005c2:	4a21      	ldr	r2, [pc, #132]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80005c4:	f023 0310 	bic.w	r3, r3, #16
 80005c8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005ca:	e035      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOF)
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	4a23      	ldr	r2, [pc, #140]	; (800065c <GPIO_PeriClockEnable+0x1ec>)
 80005d0:	4293      	cmp	r3, r2
 80005d2:	d106      	bne.n	80005e2 <GPIO_PeriClockEnable+0x172>
			GPIOF_PCLK_DISABLE();
 80005d4:	4b1c      	ldr	r3, [pc, #112]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80005d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005d8:	4a1b      	ldr	r2, [pc, #108]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80005da:	f023 0320 	bic.w	r3, r3, #32
 80005de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005e0:	e02a      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOG)
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	4a1e      	ldr	r2, [pc, #120]	; (8000660 <GPIO_PeriClockEnable+0x1f0>)
 80005e6:	4293      	cmp	r3, r2
 80005e8:	d106      	bne.n	80005f8 <GPIO_PeriClockEnable+0x188>
			GPIOG_PCLK_DISABLE();
 80005ea:	4b17      	ldr	r3, [pc, #92]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80005ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005ee:	4a16      	ldr	r2, [pc, #88]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 80005f0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80005f4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005f6:	e01f      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOH)
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	4a1a      	ldr	r2, [pc, #104]	; (8000664 <GPIO_PeriClockEnable+0x1f4>)
 80005fc:	4293      	cmp	r3, r2
 80005fe:	d106      	bne.n	800060e <GPIO_PeriClockEnable+0x19e>
			GPIOH_PCLK_DISABLE();
 8000600:	4b11      	ldr	r3, [pc, #68]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000602:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000604:	4a10      	ldr	r2, [pc, #64]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000606:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800060a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800060c:	e014      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOI)
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	4a15      	ldr	r2, [pc, #84]	; (8000668 <GPIO_PeriClockEnable+0x1f8>)
 8000612:	4293      	cmp	r3, r2
 8000614:	d106      	bne.n	8000624 <GPIO_PeriClockEnable+0x1b4>
			GPIOI_PCLK_DISABLE();
 8000616:	4b0c      	ldr	r3, [pc, #48]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000618:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800061a:	4a0b      	ldr	r2, [pc, #44]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 800061c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000620:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000622:	e009      	b.n	8000638 <GPIO_PeriClockEnable+0x1c8>
		else if(pGPIOx == GPIOJ)
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	4a11      	ldr	r2, [pc, #68]	; (800066c <GPIO_PeriClockEnable+0x1fc>)
 8000628:	4293      	cmp	r3, r2
 800062a:	d105      	bne.n	8000638 <GPIO_PeriClockEnable+0x1c8>
			GPIOJ_PCLK_DISABLE();
 800062c:	4b06      	ldr	r3, [pc, #24]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 800062e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000630:	4a05      	ldr	r2, [pc, #20]	; (8000648 <GPIO_PeriClockEnable+0x1d8>)
 8000632:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000636:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000638:	bf00      	nop
 800063a:	370c      	adds	r7, #12
 800063c:	46bd      	mov	sp, r7
 800063e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000642:	4770      	bx	lr
 8000644:	40020000 	.word	0x40020000
 8000648:	40023800 	.word	0x40023800
 800064c:	40020400 	.word	0x40020400
 8000650:	40020800 	.word	0x40020800
 8000654:	40020c00 	.word	0x40020c00
 8000658:	40021000 	.word	0x40021000
 800065c:	40021400 	.word	0x40021400
 8000660:	40021800 	.word	0x40021800
 8000664:	40021c00 	.word	0x40021c00
 8000668:	40022000 	.word	0x40022000
 800066c:	40022400 	.word	0x40022400

08000670 <GPIO_ReadPin>:

/*
 * READING FROM PIN AND PORT
 */
uint8_t GPIO_ReadPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000670:	b480      	push	{r7}
 8000672:	b085      	sub	sp, #20
 8000674:	af00      	add	r7, sp, #0
 8000676:	6078      	str	r0, [r7, #4]
 8000678:	460b      	mov	r3, r1
 800067a:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	691a      	ldr	r2, [r3, #16]
 8000680:	78fb      	ldrb	r3, [r7, #3]
 8000682:	fa22 f303 	lsr.w	r3, r2, r3
 8000686:	b2db      	uxtb	r3, r3
 8000688:	f003 0301 	and.w	r3, r3, #1
 800068c:	73fb      	strb	r3, [r7, #15]
	return value;
 800068e:	7bfb      	ldrb	r3, [r7, #15]
}
 8000690:	4618      	mov	r0, r3
 8000692:	3714      	adds	r7, #20
 8000694:	46bd      	mov	sp, r7
 8000696:	f85d 7b04 	ldr.w	r7, [sp], #4
 800069a:	4770      	bx	lr

0800069c <GPIO_TogglePin>:

/*
 * TOGGLE PIN
 */
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx,  uint8_t PinNumber)
{
 800069c:	b480      	push	{r7}
 800069e:	b083      	sub	sp, #12
 80006a0:	af00      	add	r7, sp, #0
 80006a2:	6078      	str	r0, [r7, #4]
 80006a4:	460b      	mov	r3, r1
 80006a6:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	695b      	ldr	r3, [r3, #20]
 80006ac:	78fa      	ldrb	r2, [r7, #3]
 80006ae:	2101      	movs	r1, #1
 80006b0:	fa01 f202 	lsl.w	r2, r1, r2
 80006b4:	405a      	eors	r2, r3
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	615a      	str	r2, [r3, #20]
}
 80006ba:	bf00      	nop
 80006bc:	370c      	adds	r7, #12
 80006be:	46bd      	mov	sp, r7
 80006c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006c4:	4770      	bx	lr
	...

080006c8 <__libc_init_array>:
 80006c8:	b570      	push	{r4, r5, r6, lr}
 80006ca:	4d0d      	ldr	r5, [pc, #52]	; (8000700 <__libc_init_array+0x38>)
 80006cc:	4c0d      	ldr	r4, [pc, #52]	; (8000704 <__libc_init_array+0x3c>)
 80006ce:	1b64      	subs	r4, r4, r5
 80006d0:	10a4      	asrs	r4, r4, #2
 80006d2:	2600      	movs	r6, #0
 80006d4:	42a6      	cmp	r6, r4
 80006d6:	d109      	bne.n	80006ec <__libc_init_array+0x24>
 80006d8:	4d0b      	ldr	r5, [pc, #44]	; (8000708 <__libc_init_array+0x40>)
 80006da:	4c0c      	ldr	r4, [pc, #48]	; (800070c <__libc_init_array+0x44>)
 80006dc:	f000 f818 	bl	8000710 <_init>
 80006e0:	1b64      	subs	r4, r4, r5
 80006e2:	10a4      	asrs	r4, r4, #2
 80006e4:	2600      	movs	r6, #0
 80006e6:	42a6      	cmp	r6, r4
 80006e8:	d105      	bne.n	80006f6 <__libc_init_array+0x2e>
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f855 3b04 	ldr.w	r3, [r5], #4
 80006f0:	4798      	blx	r3
 80006f2:	3601      	adds	r6, #1
 80006f4:	e7ee      	b.n	80006d4 <__libc_init_array+0xc>
 80006f6:	f855 3b04 	ldr.w	r3, [r5], #4
 80006fa:	4798      	blx	r3
 80006fc:	3601      	adds	r6, #1
 80006fe:	e7f2      	b.n	80006e6 <__libc_init_array+0x1e>
 8000700:	08000728 	.word	0x08000728
 8000704:	08000728 	.word	0x08000728
 8000708:	08000728 	.word	0x08000728
 800070c:	0800072c 	.word	0x0800072c

08000710 <_init>:
 8000710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000712:	bf00      	nop
 8000714:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000716:	bc08      	pop	{r3}
 8000718:	469e      	mov	lr, r3
 800071a:	4770      	bx	lr

0800071c <_fini>:
 800071c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800071e:	bf00      	nop
 8000720:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000722:	bc08      	pop	{r3}
 8000724:	469e      	mov	lr, r3
 8000726:	4770      	bx	lr
